%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: scenario_1.pdf
%%Creator: (Adobe Acrobat 17.8.0)
%%For: yurongwang
%%CreationDate: 2018/1/29, 下午9:00
%%BoundingBox: 0 0 644 430
%%HiResBoundingBox: 0 0 643.5484 429.0322
%%CropBox: 0 0 643.5484 429.0322
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 978 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2018-01-29T12:59:30Z"
   xmp:CreatorTool="PowerPoint"
   xmp:ModifyDate="2018-01-29T21:00:30+08:00"
   xmp:MetadataDate="2018-01-29T21:00:30+08:00"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.13.2 Quartz PDFContext"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:d3bc99e2-a317-2744-a128-38b54217c1c5"
   xmpMM:InstanceID="uuid:f7cc6c12-40a7-6e4e-8efe-c58306ec8e2d">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">scenario_1</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -429.032 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-05 0 mo
1.52588e-05 429.032 li
643.548 429.032 li
643.548 0 li
cp
clp
gsave
-1.32416 537.352 mo
958.676 537.352 li
958.676 -2.64839 li
-1.32416 -2.64839 li
-1.32416 537.352 li
clp
-1.32416 537.352 mo
958.676 537.352 li
958.676 -2.64839 li
-1.32416 -2.64839 li
-1.32416 537.352 li
false sop
0 0 0 0 cmyk
f
-1.32416 537.352 mo
958.676 537.352 li
958.676 -2.64839 li
-1.32416 -2.64839 li
-1.32416 537.352 li
f
121.905 377.893 mo
223.951 377.893 li
223.951 382.393 li
121.905 382.393 li
121.905 377.893 li
221.701 373.394 mo
235.201 380.144 li
221.701 386.894 li
221.701 373.394 li
.80911 .585168 0 0 cmyk
f
358.359 376.054 mo
447.53 376.054 li
447.53 380.554 li
358.359 380.554 li
cp
445.28 371.554 mo
458.78 378.304 li
445.28 385.054 li
cp
f
300.537 174.211 mo
300.537 187.711 li
296.037 187.711 li
296.037 174.211 li
300.537 174.211 li
300.537 192.211 mo
300.537 205.711 li
296.037 205.711 li
296.037 192.211 li
300.537 192.211 li
300.537 210.211 mo
300.537 223.711 li
296.037 223.711 li
296.037 210.211 li
300.537 210.211 li
300.537 228.211 mo
300.537 241.711 li
296.037 241.711 li
296.037 228.211 li
300.537 228.211 li
300.537 246.211 mo
300.537 259.001 li
296.037 259.001 li
296.037 246.211 li
300.537 246.211 li
.260166 .205264 .210544 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: IAAAAA+TimesNewRomanPS-BoldMT Initial
ct_T42Dict begin
-0.555 -0.305 2 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /IAAAAA+TimesNewRomanPS-BoldMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000008266670
676d00000000000008e400000586676c796600000000000022cc00002210
686561640000000000000e6c00000036686865610000000000000ea40000
0024686d74780000000000000ec8000000486c6f63610000000000000f10
000000266d6178700000000000000f38000000206e616d65000000000000
0f5800000030707265700000000000000f88000013416764697200000000
0000000000000000058e001f054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe0031300000124000001240000
00000000000000250084002400e8009600bf005d00cb02030045012e0058
00040118001900020139004b011000170005010a00280023004b00500015
004a00e5010d00af003100ea014600810125004f009c0022004e00160041
009100a00147ffe9008100d3016900ab001700a801400027004c0148ffdf
00510050ffb7012e0000003b0097009a010e001f004c010a0123ffde0022
0073008700ba00d600ff005a009805a0ffe900500052006effb7005c00d1
015a015bff1c0049006e007e009800a100bd00e4018801c00405ff600035
006200720107011301280382ffa8003805d809b5ffc4ffd00010006e00a1
00ba00ec022b0446ffee004000e80401ff680003001300330033006e00a2
00b600dc011801350343000e0034005c005d007c00af0328003b00480089
009c00ba017b01af030effa4001700370063007f00e0017801c0022105d8
05f0ff7a0012002700340052008a00a400c100c300eb011801460154036d
fe3fff4e00010008002b0045006e0084008600ae00af00c200c200c4010f
01210149017b01c101de01e1036e03e6006300a700ed00f600f801280169
017e023f02820532fd81ffb5002600350040004500490057006c00ac0126
0140015b017b019c0277027e027f03b603dc042804efff38ffc30006002f
0040008200aa00b600ce00d300d700e50146014d01d6027e03b30586ff7b
0012002f0068007f008400a500b900f501050109010c0114012001330137
0178017b01c001e1021d02230258036203af058cff79ff8d00210024005d
00650068006a0083008500b700cf00e200eb00ed011a0120012f0137013f
0150018d018f01c402cf0357035c03960440049604ab04c204fc051105c2
fed1fee00013002100240030004d004d005d0066007a007c00b800b800c3
00da0103011b011e012f013d014a0150015f0166017c0190019501a301a6
01b601c701d001e901ef01f90218028c029402bb02c502cf02d0031d032a
0344039f03cc042104da04fb0761fd1dfebffeefff0bff2bff33ff90ff9c
ffdbffed00010008001c0025003f0043005a006b0080008400900095009d
00a700b400cd00d500d600df00df00df00e400f000f600fb010601130119
011b012201230127012c013f015701580177018a019301a401c601e101e4
01fc0200020c02220222022a0236024a025c028202ec02fc030a03230341
0378039703d203fa04790532053205ab05b505f006e4072508ccfc9bfdde
fe00fe69fe96fe9bff3500030006000e00130019003400420048004a0057
006400710071007200760077007a007a0083009c00af00af00b200bb00c8
00cc00cf00cf00db00dc00df00e400e400e400e900eb00f400fd00fe0102
0105010501080108011b01220123013001370143015b0160016501780178
01780178017b0182018901980198019b019e01a101a601d101d201d301df
01e301f502000200022d02410247024a0250025b025d025d025f02630281
028b02b402b402ce02d602db02e202fa03100311031f0327034503670388
038a03b003b403d403d5042604410448046b04c704d1053205480549055f
0563058b05a105a305c205ca05e405ff069306a206b806e8070a07360750
0754078907a907bb07dc07ff08270120014d011b01290000000000000000
00000093015b042f029001ff02b800db00be027403cb029401ab00000000
0000000000000000058a038a0364005f02b803bd029d7c9003e203ac0282
0000044400000000003d010a00cc00bc00cc05d3041505e800c7021a00ee
00000194036102be029902180136033b048504cc0050007905a305a302df
020702af000001eb0064005f0055011900f2045600ef00c800cf058a0143
014602de01ab02c6024a005d00d800a402bb009900a00065013702740364
00b500fa009101b9032001b60025007f00d000ec00e00000000000000000
0000042ffd42023f06180276063a013701b90151ffc70229ffeb023f02e1
018500db03fa01900156014e012f00a600e300bb00d50134011f04fe041b
00d100e4011e009b00cd00e700b300e200ca042400b800f500b90334005a
04e00123012ffdc9fe440574038301f602410002001700500015004f0017
00a80051009800520049006e000e00af017b017b019c006a008300eb00cd
0122000005d306da009a008f00ba0315002503a5028002ff03c804200092
00e0034c009b007d00f8011c013400a8006d006900000420ffe6fea4006a
006a003800380162015a0044006d0048001eff6d00a600a600400040ff5c
ff990559052b00ce014c011500bf0140011800c800960509feed004800b4
009500db0048018b00b3fe6400c000ea01180125013203b003ed05760590
05aa05b405be05cd063100780084009b00cc00e200f4010a0120016300d1
00ea00f7010801420019002c00340041003800480058006c025903bd0043
011a007000d30028003700420050005a0064007300780082008c009c00a5
00bd00ce00f00110015c00be00d801020117012c016300ea01080041004b
0055005f007300a60109018301b300410064001e002a00eb00fa010e0138
0274002c00400082009600b600c000cc00dc00e600f000ff010a0120012c
013b01440156016300f70057006401100136005001b10000ffb60039004e
004403cc00e5002401100042012201a400f0006000e0000e001d003905e3
0102002cfe4eff38026903bd011600ff000e00a00054001b003d01710041
000f005000fd0015014f0035fe47003900ab0080005005a50016002b00ac
0115021504570555007300da005c00ce0072ff58019a0744000040425554
403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a2928272625242322
21201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b09051582320b00d44235921212d2c20
204518684420b001602045b04676688a4560442d2c01b10b0a432343650a
2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b1021745
3ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4
182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae4
1b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae4
1b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b5320
5c58b002855958b00185592d2c20b0032545b019234445b01a2344456523
4520b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a
40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940
201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f
4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f4323
43650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003
252349b04060b0206320b000525823b002253823b002256538008a63381b
212121212159012d2c4bb06451584569b00943608a103a1b212121592d2c
01b005251023208af500b0016023edec2d2c01b005251023208af500b001
6123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20
b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3e
b02a2a2d2c352d2c76b8029f23701020b8029f4520b0005058b00161593a
2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015
b00826b00826b00826b008260f10161345683ab001162d2cb40001000000
15b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b
515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53
234b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b0259
2d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb01243
5c580cb00425b00425060c6423646164b807085158b00425b00425012046
b01060482046b0106048590a21211b2121592d2cb012435c580cb00425b0
0425060c6423646164b807085158b00425b00425012046b8fff060482046
b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d
2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a5838
1b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b21
21592d2c462346608a8a462320468a608a61b8ff8062232010238ab90327
03278a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259592d2cb0024354584b53234b515a58381b2121591b21212121592d
0000000100000005028fb4c1bb415f0f3cf50819080000000000a2e33546
00000000c30778b3fb89fd8c100008350001000900010000000000000001
00000721fe4500571000fb89fadf10000001000000000000000000000000
000000120639011c05c7001005560029078d002905c7001d0639005005c7
00260473006a0400005c038d004e0473004f038d004f0239002a04730046
0400004a038d004b031d00510400001300000036010c01fc02f603e504f5
05f906e40860090f0a120ae10b7d0cc10da20e7410141108000000010000
001200f2003c008f000600020010002f00560000084802c4000500020000
000100120001000000000006001d0000584d505448422b54696d65734e65
77526f6d616e50532d426f6c644d5400b15420b8040cb30c0e3220b8040c
b2131732b8040bb328201f0f41100412008004120002000f0412003f0412
005f04120003005f0412000100400412b2783340b80412b2723340b80412
b26e3340b80412b26a3340b80412b2543340bc0412004a0033ffc00412b3
17183240b80412b30a0c3280b80412b308093240b80411b25a3340410904
1100560033ffc0041100530033ffc00411b2503340b80411b24d3340bc04
1100470033ffc00411b344453240b80411b2423340bc0411003e0033ffc0
0411b23a331f4124041100200411004004110070041100af041100f00411
0006000f0411002f04110090041100ff04110004002f041100400411007f
0411008f041100a0041100e004110006ffc00411b208330f411b0410008f
04100002000f0410001f0410002f0410000300600409000100b004090001
000f0408003f0408004f0408009f04070004040ab2006c1fb9ffc00403b3
45453240b80403b32b2e3240b80403b2282932b9ffc00403b21a1c32bd04
0302990027001fffc00401b2161b32b9ffc00400b2424232b9ffc00400b2
363832b9ffc00400b32a2d32df410a040000ef0400000204000401002800
1fffc00401b3282e32f0bf0401000103fe000f0101001fffc003fcb31014
3240b803fdb30f133240411003f9005003f9000200b003b100c003b10002
006f03f5007f03f50002ffc003afb22d3132b9ffc003afb30a0e32104110
03ef002003ef008003ef000300a003ef0001002003ef004003ef0002ffc0
03efb313163240b803e7b20f1132b9ffc003dfb2303432b9ffc003dfb310
183250411403dc000103c903d20023001f03e203d2001e001f03c703d200
1d001f03c603c8000d001fffc003a4b30f103280411003a3000103a30379
0029001f03a5037a0032001f03a8037e001b001fffc003d9b20e1132b9ff
c003d9b2282a32410a03a7037c0032001f037303710034001f036c036bb2
321f20bb03a40001004003ecb3090b3240b803ecb2101532bd03e9036b00
14001f03e4036bb2171f0fbd036e002f036e0002ffc003b8b3090d329041
0c03b800a003b80002001f03d20001009f03d20001004003d2b2090b3241
0a03a903800016001f03cf03810015001f03aa0382b2151fc0bb03f70001
004003f6b3090d3240b803a2b2083340b803a2b30d0e32c0410903a20001
00b003f200c003f20002ffc003f4b3263832004126038c0030038c000200
2003e3003003e30002001003ee003003ee005003ee006f03ee007f03ee00
9f03ee0006000003ed003003ed0002002f03de007003db009003db009f03
de0004ffc00379b20f1032b9ffc00379b2242832b9037d037cb2321f10bb
037e0001ffc0037eb3090e3240b8037cb2121332b9ffc0037cb30c0e323f
bd03d7004f03d70002004003d8b31718326fbb038e000100400390b3181b
3240b803d4b2090c32bd037b037a0032001fffc0037ab20e1132bd038003
820016001f03810382b2151fb0be03820001000f03830001004003ffb30c
11327f411403540001006f0354008f035400d0035400ef03540004000f03
54002f0354005f0354000300400350b30e0f320fbb035a000100400349b2
0e331fbd0348007f03480002ffc00348b2152232b9ffc00347b2152232b9
ffc0040fb21b1e32beffc0040f002d01000032040e0406b22f1f51bb034b
0001034f034eb2641f40b80351b20e0f32b9ffc0034eb3383a3230bb034e
0001ffc0034eb21f2332b9ffc0034eb2131932b9ffc00346b2091132b9ff
c00343b30a11320fbb03440001ffc0032bb2080e32b9ffc0032bb2161b32
b9ffc0032ab31417321f4110033a0001000f033300010000033700200337
00300337008003330004ffc00332b3101232504164033200010040033200
60033200a0033200b00332000400100332003003320050033200e0033200
04000f0336007f033600ff033600030070033600f003360002000f033100
3f0331008f033100bf033100e003310005000f0331006003310002008f03
300001006003300090033000020050032f00010010032f0040032f006003
2f0080032f00a0032f00c0032f00f0032f000700cf032d00ff032d000200
30032d0080032d00b0032d00df032d0004006f032c007f032c0002001203
2000fd0800001f007f0299403a017f007f017f027f037f047f057f107f11
084035252c32406a252c32402e252c324028252c32376009700980090330
0940095009031009200902b8ffc0b2073a33b8ffc04012063a33da4dea4d
fa4d0312379006900702cf410c011100df011100ef0111000300cf011000
df011000ef0110408703cf3edf3eef3e03cf4ddf4def4d03cfdedfdeefde
03cf2ddf2def2d03404d1b3a32375f016f017f018f01041f012f013f014f
01045f036f037f038f03041f032f033f034f0304600b700b800b03300b40
0b500b03100b200b02900ba00bb00bc00bd00b05b006c006d006e006f006
0550066006700680069006a006061f072f073f07400604f0414302db0001
00a002db00b002db0002008002db009002db0002001002db000100c002db
00d002db0002009002db0001006002db007002db0002004002db005002db
0002002302db003002db000202db002300a002da0001008002da009002da
0002004002da0001002302da003002da000202da0023000002d900010070
02d9009002d9000202d9401c2230244024021024202402002401f02401d0
24e02402b024c02402c0413a02d8000100a002d800b002d80002008002d8
009002d80002002302d8003002d8000202d8002300c002d7000100a002d7
00b002d70002008002d7009002d7000200a002d700b002d70002008002d7
009002d70002006002d7007002d70002004002d7005002d70002002302d7
003002d7000202d7b223370f4117029b0001005f029b009f029b00df029b
0003002f029b003f029b006f029b0003001f029b0001029b029b0040029a
b3272c3280b8029ab2263340b8029ab2223340b8029ab21e3340b8029ab2
1c3340b8029ab3191a325f410f029a009f029a00df029a0003000f029a00
1f029a003f029a0003ffc00299b2443340b80299b23d3340b80299b23a33
df413702990001005f029900af02990002004f0299009f02990002002f02
99003f0299000200af02990001000f0299003f0299000200b0029900e002
9900020070029900a002990002004f0299005f02990002001f0299002f02
99003f02990003029a029a02990299000f027a002f027a400b0200161600
000012110812b802bab269121fb802b4b228101fb802b3b228101fb802b2
b228101f411302030023000d01ee0023000d01ae0023000d019f0023000d
01940023000d01570023000d010f400b230df9230dc5230da7230d410a02
4a0024000d01f00024000d01e90024000d016a400e240de8240dc6240da3
240da2240dbb01e30022000d0121401a220de5220ddd220db7220daa220d
93220d5c220d51220d4c220d410a02280020000d021d0020000d015e0020
000d011c4017200dfc200de1200dcb200dc8200da1200d59200d3a200d41
0a01f20034000d019c0034000d01970034000d0135b7340d1f340d1d340d
ba0202000f015bb20f0009bb0202015b000d030ab22a3e1fb80309b22a3e
1fb80221b24d251fb8021cb24d411fb8021bb24d521fb8021ab24d721fb8
0213b24d931f4109020f01b10401001f020e01b10801001f020cb22a811f
b8020bb22a811fb80208b22a5e1fb80205b22a391fb801feb22a231fb801
fbb2661d1fb801fab2661e1fb801f6b266341fb801f5b266341fbc01f300
660201001f01f1b2669e1f410901ea00280801001f01e7002602ab001f01
b8b24d3f1fb801b7b24d931f410901b4003e0125001f01b200400401001f
01acb22a721fb801a8b22a281fb801a7b22a241fb801a6b22a241fb801a3
b22a1f1fb801a1b2662e1fb8019eb266931fb8019db266e41fb8019ab228
6c1f4109019900280401001f019800260401001f0173b24d1b1fb80171b2
4d241fb80170b24d2f1fb8016fb24d351fb8016bb23ecd1fb80169b23ee4
1f4109016701b1019a001f0166002a02ab001f0161b2662a1fb8015fb266
9e1f4109015d0028019a001f015c00350401001f0147b24d391fb80146b2
3ecd1f410d0145003e0125001f014401430101001f014201b102ab001f01
40b22a301fb8013eb22a261fb8013db2661d1fb8013cb2662b1fb80138b2
28811fb80137b2289e1fbc01360028019a001f0129b24d721fbc0124002a
0201001f0123b22aab1fb8011fb266291fb8011eb266451fb8011bb22881
1f41090113003e0125001f0112003e0401001f0111b22a291fb80110b22a
201fbe010b0066019a001f010a0026019ab61ffd4d721ffb3eb80156b21f
fa40b80801b21ff728b80801b61fec4d621feb4db80401b21fea40b802ab
b61fdf4d721fde3eb802ab400b1fdc2ae41fdb66221fca2ab80401401b1f
c92a2e1fc326791fb828bb1fb34d1e1fb166291fb066621faf66b80401b2
1fae26b802abb21fa828b80201400b1fa0664c1f982a2b1f9726b8019ab6
1f9266291f8740b802ab401b1f852a791f8226811f754d931f744d891f73
2a1d1f70285e1f6a28b8040140171f692a521f682a201f6766291f656667
1f612a931f6035b80801b61f5e2acd1f5335b80801b21f4b66b80156b21f
493eb80801b61f4866521f4626b80201b21f3f66b80156400b1f3b66341f
322a931f2e35bb0401001f002d0143b3cd1f5537bc022f00070180000701
72402e07bd077e076207540742072f072707250721071e07140812081008
0e080c080a0808080608040802080008000214b8ffe0402b000001001406
100000010006040000010004100000010010020000010002000000010000
02010802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb00850
5b58b101018e59014bb0c063004b6220b0f65323b8010a515ab005234201
b0124b004b544218b0382bb00288b801005458b801ffb101018e851bb012
4358b90001012c858d1bb900010146858d59590016763f183f123e113946
443e113946443e113946443e113946443e11394660443e11394660444544
2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b182b1db096
4b5358b0aa1d59b0324b5358b0ff1d594bb02953205c58b9026c026a4544
b9026b026a45445958b90168026c455258b9026c01684459594bb03b5320
5c58b9003e026b4544b9004d026b45445958b9025c003e455258b9003e02
5c4459594bb03b53205c58b901b1003e4544b13e3e45445958b9024f01b1
455258b901b1024f4459594bb05a53205c58b90143003e4544b13e3e4544
5958b9038b0143455258b90143038b4459594bb09e53205c58b9002a026c
4544b90040026c45445958b9056c002a455258b9002a056c4459594bb018
53205c58b126264544b1662645445958b13226455258b126324459594bb0
5153205c58b126264544b1282645445958b1ad26455258b126ad4459594b
b8010153205c58b126264544b1352645445958b902280026455258b90026
02284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b01b33d766e58456523456023456560234560b08b766818b080622020
b16e764565234520b003266062636820b003266165b076236544b06e2344
20b13d584565234520b003266062636820b003266165b058236544b03d23
44b10058455458b158406544b23d403d4523614459b34e81387145652345
6023456560234560b089766818b080622020b138814565234520b0032660
62636820b003266165b081236544b038234420b14e714565234520b00326
6062636820b003266165b071236544b04e2344b10071455458b171406544
b24e404e45236144594b5242014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342007418456944456944737373737474757575752b2b2b7373
2b2b2b2b2b2b18456944737373742b454473737373737474744544737474
747474747575754544737545447373747445447373737373747474740075
757575757575757575752b2b74747474747400732b4358b14d4d45186944
1bb8ffc0b34d1b3a322b5973002b2b7575752b2b2b2b2b0073732b435c58
b8ffc0b2071633b8ffc0400b061633d54de54df54d03c0410c011100d001
1100e00111000300c0011000d0011000e00110401e03c03ed03ee03e03c0
4dd04de04d03c0ded0dee0de03c02dd02de02d03372b7474747474747300
2b2b590173737473747374737473747374752b737573002b2b2b01732b2b
2b2b752b2b2b732b2b2b002b2b742b732b7373742b73732b2b2b2b2b2b73
2b732b2b2b742b2b2b73737373732b73732b2b2b73002b2b2b2b7374732b
732b2b2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b
7373732b2b2b752b2b732b2b2b2b2b2b2b2b2b2b73747573742b7374752b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b00000000>
[8721 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 108 1 <00020010000005b00568002100240130409322100b123f66107610772387
108623aa0db71007960db30d020124230200222323210a0e0b1d0a172118
1d170b09010902081d091611151d1601240a00221673230f102023002110
2102212302212d1110141111102302232102280e0f140e0e0f02760e010e
0a7a11012111100f04162321110e02040117230f2224280000010101e410
40100f031716160a0a09080f160116ba01820023012e4023200a19302670
268026a026d026e0260625102620264026502680269026b026078f6d182b
4e71105df4191a4dfded5d00183f3c103c103c3f3c1a10fd5d3cfd3c1139
1112173901111217395d12395d39870e2e2b087d10c4870e2e182b087d10
5dc42b113939113939180010ed0110c00010ed0110c05d0010ed0110c000
10ed0110c007103c3c073c3c3130005d015d012b01210706151417161715
2135363637013301161716171521353332373635342726272703030354fe
21391c2e1b6afe3d495e4501e51301e9462d223efd701b4f201606021c6a
cad0018284422b391b100825250b639b043afba89e291f05252516101e12
130942f301d3fe2d>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 536 2 <00010029000004fa054c0031014e40ed16041909022033303370339033a8
17d714d717e617f71709790a74157c2e8903921405890a9803980a9315a8
03a80a0620144515403350337903050a030a0a023340140c3f94049c09a4
04ae09a614050c010007510c0ccb081d0720201d1822222b513131e12c1d
2b06510101cb051d0621201d2922230106000c070d001510150215162b14
15160317071716b3122e18312829012e0c0c182902180806070f074f0702
3f074f078f07af07cf07df07060f076f0702073233af2bbf2b022f2b3f2b
4f2b5f2b6f2b7f2b8f2b9f2b082b8310167016901603161a40330133000f
0d1f0d020d3e212019323db5182b4e10f43c4dfd5d3c4e105df65d4de45d
711112395d71722f3c003f3f12392fed10ed10eded3c1112173901111239
5d1112391112392b0110edec0010fd0110edec0010fd2b0110edec0010fd
0310053c3c3130005d012b715d5d5d5d00710111333236373311232e0223
111416163333323637330321353332373637363511342726272623233521
11232626272623022e1b81741026260c4d666113343a51bee532253dfb6c
2d3b241a0e0b050a1b26422d046f261d6960389a04fefdd8a29efd3a7494
33fe82703220b0b4fe5125150e221866037c5c1523131c25fe6f93801e12
>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 1016 3 <0001002900000768054c0036014f40721e100b123f0b1e01091e7b1e0230
3845365038a700c80005251c36017700771c771d8600871c871d991da81d
ea1dfa1d0c7038e038021f121f131f1410241025050f120f130f14002400
250936060a201d0222221a201d1222222e3a1d2622220b201d1122231f3a
1d2522232f201d352223b8ff884043001d1c20010000281c1b141c1c1b00
363600002d1d1e141d1d1e0001361d1c031f011a00363502010226251d1c
121108000037381b101a011a3e0acf0bdf0b020b1a38b8ffc040091c1e34
7038e0380238b8ff804009151634381e1f282f2eb8ffc040111c1e34702e
e02e02c02ed02e022e193738b80154b3213d7618b8012c852b2b4ef45d72
2b3c4dfd3c4e102b722bf65d3c4dfd5d3c191112392f18003f3c3c3c3c3c
3f3c3c3c0111123912173908872e2b057d10c408872e182b057d10c42b18
2b2b2b2b2b2b3130015d5d725d71005d00712b0101211523220706070615
111416163333152135333237363736351101230111141716163315213533
163636373635113426262323352103d0017002282c3c24190f0b1644392c
fd3c2c3c24190f0bfdf818fdf0050d575dfe300e2d4e280b021644392b02
2a01ce037e25150e211865fc826834272525150e22186603edfb2b04ccfc
456417323f2525011f342f0b5b035a6733272500>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 1516 4 <0001001dffe10597054c00210171b2121221b8fff8b20d3921b8fff84077
0c39101c1c0f101c1d1d0f0d3a1d0822221b201d172222023a1d07222311
201d164c230021102102211d201d21101c17010f1d1d3e0001140000011d
1b2200110f0e01011d17210808070700021716080f090102280e0f0d015f
0d010d7d502301231011281c001b01501b01001b6f1b021b7d223d76182b
4e10f4715d723c4dfd3c4d105df65d723c4dfd3c003f3f3c3f3c103c103c
123939011112391239111239870e2e2b87047dc4001239391810ed0110c0
5d2b2b2b2b87103c7dc48710c4012b2b31304358b90000ffb0402b133500
0f100f370072207021802080219100900f90209021b400b4210d04200421
2a04270b22132a1a0610b8ff5bb2133510b8ffa640131235040100101401
10109001a01cb010b01c08005d2b2b01715d2b59435c58b51008141b3f10
b8ffe0400912183f00080e133f00b8fff0400912183f00080f143f0fb8ff
e7b3141b3f0fb8ffdab20e173f012b2b2b2b2b002b2b5901011134272607
3521150e0215112301111416333315213536363511272626273501fe029d
23307101c0563b2122fc6b6b4520fe1f70581d2b423e054cfcb702477a2b
3a0225250b234f60fb970469fca275522525015a6c03bd2436220225>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 1994 5 <00020050ffe105f0056b000d001e01ab403368106813980ad712d719d81a
d81cd71de712090718071e1702180c171a171c271027132714281a0a1e80
090a341780090a3415b8ff80b3090a340fb8ff80b3090a340db8ff80b309
0a3408b8ff804064090a340680090a340180090a34129701960299069908
960c970da602a60cc705c709c61dd701d70d0d020407080609060a170117
02170c170d161d096619661c7805770c7619761d970fb618b61dd71bf008
0b560e0e35000316350709120b191f6e58182b4e10f44d43584019001b10
1b021b4d400301031a2f203f2002200f121f1202124de95d4e105df6714d
e95d1b400f1b4d400301031a2f203f200220124ded4e105df6714ded5900
3fed3fed31304b5379b151084379403c011e10251d26142609250526191a
181a02060f0d1225001e011b2501150812250017061b2501110c0e25010d
1c020e250101130a1625001a041625002b2b3c2b3c2b012b2b2b2b2a2b2b
2b2b2b81015d00715d435c58b40806123905b8fff4400b1239021812390c
18123902b8ffe8b211390cb8ffecb2113905b8ffe8b20d3909b8ffecb10d
39002b2b2b2b2b2b2b2b59012b2b2b2b2b2b2b2b01715d01240011100702
212027261110000522070611101716333237361235100226031701440195
97c8fe93fe92c89e019b0138ba614f7a559967455862649b055f0cfe6efe
d2fefec4fefcf8c4010d012e01934cbe9cfedcfea5a67432400119e2010d
010b6e00>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 2538 6 <00020026000005d9054c0023002d0178403f551a721a981503082318234b
1a471c4722611c63220712000500061005100604302f671b771b77228823
cc1bcb23d02f089916d41af918fb19fb1a052f080cb802d5b41d07222201
b802d5b41d0622230db802d540391d1222231c1b001b101b021b2d232214
2323227f238b230223002a1c211b8022e422f4220310225022d02203d022
0122172a1c222326252e1bb801e2401723000006242d2e1313120220d221
212222060607082021b8010540090c002a102a022ade17b8030240160c24
252500000f011f0102012d0c0c500d010d7d2e3db9011900182b10f65d3c
10fd5d3c103c103c10fded5d10fd3c003f3c103c103c10ed3f3c10fd3c12
392f3cedfd3c1112390111123971725d3911391112395d870e2e2b5d0e7d
10c4182b2b2b313043794020272c141a1525192628252c142a2f01271a2a
2f012b162d2f012918262f001a1b103c2b2b012b2b2b2b2b8181005d015d
5d435c58b90028fff8400b0c392b080c391c1813153e012b002b2b59015d
005d01111416163315213532363635113426262335213216161514070607
01161716171521010311333236363534262302201b445dfd4a5e431b1b44
5d0276f6e4906c457c0146401b2936fe55fe4b59398b8a4f91a1026afe84
6e3922252523386e03706e39222544b77b96623e1ffe3559161f0325026a
0299fdae33856b9b9400>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 3058 7 <0001006affe00421056b0039012d403918305729772103060e01090f072b
0630180f172b2d0f2b1029112f22202b242c362a362b67298929892aa934
b82aba3413391d005a021d0101b801494015005a0f361f360236a9311d1d
1e5a201d1f201f011fb8017840461e5a001a101a021aa915292b0f08260f
0b0f0f1c0b1c0f04760f76299b0fa50bb50bc40f062b290f0b0423053531
03233515094f015f016f017f018f01050157002610260226b80110400e12
1a3b400b0d343b0f081f080208b80110b41f312e193ab80139b158182b4e
10f44de4ed5d4e102bf64ded5de45d003fed3fed1117395d710111123939
390010ec5df4ed5d0110edf4ed0010ec5df4ed0110edf4edb10602435458
4020030b030f022529262b6a0b690f7a0b790f8629852b950fac0bbb0bca
0bca0f0d005d71593130005d71015d011323262623220615141716171617
161716151404232226272623220607231133161633323635342626272e02
35343633321716163332363703c20b291de3846677151d402faaee5352fe
f7cc407256301f1a3a1225252cfb917085336884b9a257eeb5423e2f871b
1a1e0d056bfe3caacf6d472d232f2e215475686886aaf51a241428290200
d8e37a51305a51415b809e5fa2e4100c41203d00>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 4288 9 <0001004effe4035f03c3002300f1406df506012409015909a61ec502c523
d801ea01e202070a08012c022a14571f6609671f7609760a721e9713ac13
ac14b802ba14b61eba23c51ecf25110001151300030e1cd000e0000200d0
01e00102040114010201211315181918f0110111eb18260b072148040b0f
0e010e2b01b8ffc0b332193f01b8ffc0401b0911340f0101a001b0010201
1aaf25ef2502250f1c1f1c021c3207b8ffc0b332193f07b8ffc0b6282b34
d0070107b8ffc040090c0e34071924388e182b4e10f42b5d2b2b4ded5d4e
105df65d712b2b4de472003fed3feded71103c11393911395d7139710111
12173910c93130015d00715d017271251706062322023534373633321615
14062322262726272623220706151416171633323603401f42c56fbbe066
7bd891ab45383b4d090617171f3022345449374b3158f1187c79011ac6bf
91af925a39444e643f1919334d9f84f13b2b2e00>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 4638 10 <0002004fffe40445054c001e002d017a4023980da80db90db71604121237
08001e101e02171f2d090818a21f1ec5230f071f070207b801eeb401a206
1f07b8015bb7082b840c0c080b1fb8015f4019177921261407001e000000
08100802082a0018101802182a01b8ffc0400e32193f0f014f0102b00101
011a2fb8ffc0b24b352fb8ffc0b33b3d342fb8ffc040140c0e34502fd02f
02702fa02f022f1f2601264010b8ffc0401532193f0f1001301040105010
d0100410192e3881182b4e10f45d712b4ded5d4e105d722b2b2bf65d712b
4ded5ded5d3c003f3c3fedf4ed3f3c10ed10f5edfc01f55d2b030e103c3c
3c3c015d313043794028222a0d1324252325020612262827292702060e25
22132627002a0d2627002511212701270f2b2700002b2b012b2b2b2a2b2a
81814358402f700d70137022702ab02fc02f06700e7f1276177f2370297b
2d86178a2d980d97169b2ca616ab2cba2c0e800f89110200715d015d5943
5c58b9002fffc0b319213f2fb8ffc0b318203f2fb8ffc0b2171f3f012b2b
2b59005d0111141716161715053506062322272635343636333216171134
272626233513262322070606151416171633323703d206082d38fe75476f
46b3685468b56843683b090c3042874a6b2518252f342d1728584e054cfb
cc6d14212004214d94563ea082bd97ef7a3441011a6b161d1c2afd868e14
1f9ca1b1aa26138a>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 5156 11 <0002004fffe4035d03c3001500200135405806124b145d146f1468156518
791407250aa702c602c911d102d103d80dd815f303f80d0a7f1501224013
1534560366036f2277037f228303860eea0de815092a08ff16010809092b
00081008200803085d05201600014616b80128b41b26130705b8011eb30c
0b0916b8ffc0400b32193f1640192234166900b8ffc0b632193f0f000100
b8ffc0b30b0e3400b8ffc040181135001a2f223f225f22ef22042220290f
011f0102013210b8ffc0b332193f10b8ffc0b31e123f10b8ffc0b3263034
10b8ffc0400c0c0e34d01001101921388e182b4e10f45d2b2b2b2b4dfd5d
e44e105df62b2b712b4ded2b2b3c003fed3fedf4fd3c103c10f45de40110
c97131304379401e111e1d251817191702061c121f1e001a14161e011e11
1b1e0117151b1e01002b2b012b2b2a2b81015d2b00715d01710121161716
33323637170606232227263534123332160734262726232207061515035d
fdff095a45613c6238224cb879d06b56fdaa8ed1ee2325152334213b01f5
ba6c534357169b81a081bfea0115e9a2a1781f1233599b23>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 5570 12 <0002002a00000223056c000b001c00db40161e8011173f0f110012001c1f
111012101c0617241f12b801eeb4220d241f11b801eeb42318241f1cbb01
ee00230006ffc04011343634af0601064000010c1c0612110a09b8ffc040
1c3436340009100902094003290c0c0f0d1f0d020d2a18174011173f17b8
ffc0b23a3517b8ffc0b320233417b8ffc0b313173417b8ffc0402f2d3034
b017018f17010017101702177b401e501e021f1e601ea01eb01e042f1e3f
1e8f1eb01ec01ee01e061d4ec0182b105d7172f65d5d712b2b2b2b2b3cfd
5d3c10f4ed5d2b003f3c3f3c3fed5d2b2b2b2b015d3130012b0132161514
0623222635343613111416171521353637363511342627350126415a5b40
405a5acc2e43fe073e1e142e42056c5b40405a5a40405bfe3bfd1b633704
242402221763022263370425>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 5882 13 <000100460000043703c3002b0204b90006ffe8b50b390906012db8ffc040
384b35502d0105050506250603d902d603d51a0315063505460203d601df
1b02120f0e0021002b1f0e1021102baf0fbf0f08011b1c14241f0fb802db
40112226241f2123220a241f0e23231c241f20b802da40152327241f2b23
232120200f0f0e0a1966050304071bb8015fb3d0010101b8ffb540561835
017900002b060a1f0901092a1515144021413f14403d350f14012014cf14
021440454734144043351440393a341440353634144030313414402b2d34
1440272834144022243414401e1f34144010113410140114b801bb400f1f
2db02d022f2d702d022d403e352db8ffc0b3393a342db8ffc0b33536342d
b8ffc0b33031342db8ffc0b32c2e342db8ffc0b32728342db8ffc0b31e1f
342db8ffc0400f1315342d1c0f001f0002002a272726b8ffc0400e21413f
f026012f26c026d0260326b8ffc0b3373a3426b8ffc0b32f313426b8ffc0
40091d243426192c4e81182b4e10f42b2b2b5d712b3c4d10fd5d3c102b2b
2b2b2b2b2b2b5d71f45d2b2b2b2b2b2b2b2b2b2b5d712b2b3c10fd5d3c00
3f3c10f42b71ed3f3c3ced3f3c103c103c2b2b2b2b2b03100e3c3c015d43
5c58b90020ffc0b3120b3f20b8ffc04009140c3f0f40140c3f20b8ffc040
13160d3f0f40170e3f0f40190f3f0f401b103f0fb8ffc0b221143f2b2b2b
2b2b2b2b2b59313000725d0171015d722b00712b01153636333216171615
111416171521353637363511342626232207111416171521353637363511
3426273501c348844c5b781410273efe27351710122b1a564a2735fe273b
1911273e03a7794e47654b39a2fe946c350724240725196301a0733c217b
fe0b69380724240620166c02106a34082500>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 6530 14 <0002004affe403b703c3000d002101544018c71a01270c011257080e260d
01000717260709080b1d4004b8ffc0400e32193f0440262b340f0401041a
23b8ffc0b24b3523b8ffc0b2473523b8ffc0b23f3523b8ffc0b3393d3423
b8ffc04024282b34c023d02302002340236023c023d0230540239f230223
0f121f12021240d00b010bb8ffc0b332193f0bb8ffc0b3262b340bb8ffc0
b60c0e340b192223b8ff80b427353871182b2b4e10f42b2b2b5d4ded5d4e
105d71722b2b2b2b2bf6712b2b4ded003f3c3ced3f3c3ced313043794044
0121102502251f1e201e020614131513020606261b1c1a1c191c03060f0d
12270021011d1e011609121e0018071d2701110c0e27011e030e1e01130a
171e001c051727002b2b2b2b012b2b2b2b2a2b2a2a2b2b81435840312801
390149014910790c0570067f0c7f10701980068f0c8f108019c802c61f0a
7f07700d700f7f188f07800d800f8f1808015d005d715901715d01321616
151407062322023534121722060615141716163332373637361134262726
01fe7ad26d657ad7d3e4e9cf3349170e0b482e2d1e270d1426251a03c37e
e88ac786a20128c3c9012b474de3ca6b5d474a19223d5f0121aa7f1d1500
>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 6980 15 <0001004b0000036e03c300290127400a0b260b390b140c103f0bb8ffc0b3
2224340bb8ffe7b31b1f342bb8ffc0b33134342bb8ff80b21f352bb8ffc0
b31d1e342bb8ffc0b30f10342bb8ffc04027141634102b01960b902b020b
190d11340f1d001e00291f1d101e10290601151617170022a21f1eb801ee
b42217c61f1db801eeb42323241f29b801ee401d230a320f401e3c3f0f40
1c373f0f67050304070029061e1d0a0f5d000aba015f0004015fb79007d0
07e0070307b801ba400b00290f171f1702172a2322b8ffc0b24b3522b8ff
c0b330343422b8ffc0b31b203422b8ffc04014121634c022017022010022
10220222da2a4e55182b10f65d5d712b2b2b2b3cfd5df4f45deded10e400
3f3c3f3c3f3c3ced2b2bed2b2b2b070e103c3c3c015d3130002b015d712b
2b2b2b2b2b2b002b2b011536363332161514062322262726232207060706
15151714171616171521353636351134272626273501c95d8c413843412e
354e070a0d1d1a29152001070c2f38fe073d2b080a263003a7d4915f453f
434a44040616223f6175d73839101b1903242405397a020550161c1a0525
>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 7400 16 <00010051ffe402d403c3003202aa405c0b3015103f04100d2914101d2904
06141614c625c626d910ea10f910072910252a3810362a870b95239524a9
0ba323b80bb4230b050c050d0829150c470b4b0c06400b400c0212321f00
9b021f010140140c3f01400b123f9f010101b801454013009b122f400b12
342ff32b181f199b1b1f1a1ab8ffc0b60b123f901a011ab8016b401e199b
16f3121205262b07121e26120b120f011f01020140121534015b1221b8ff
e0b40914065521b8ffe0400a09140255002110210221b8ffc0400b0b0f34
002110210221220eb8ffc0403a32193f1f0e010e1a0f34012f344f345f34
6f347f34af340634120820091406550820091402550f081f080208400b0f
340f081f080208221a2928b8ffc0b632193f0f280128b8ffc040090c0e34
2819333871182b4e10f42b712b4de4ed5d2b712b2b435c58b508201b103f
08b8ffc0401732193f084014213f083c15233f083c16253f08400b123f2b
2b2b2b2b2b594e105d71f6722b4ded5d2b712b2b435c58b52120140c3f21
b8ffe040091b103f215e32193f21b8ffc0b314213f21b8ffc0b315233f21
b8ffc0b316253f21b8ffc0b20b123f2b2b2b2b2b2b2b59e42b71435c5840
19014028183f01401c113f0140101b3f01400e173f01400d163f2b2b2b2b
2b59003fed435c58b51e1e1e0f3f1eb8ffe2b30c143f1eb8ffe2b30d163f
1eb8ffe2b20e173f2b2b2b2b593fed435c58b90005ffb540121e0f3f051e
0c143f051e0d163f05140e173f2b2b2b2b5910ecf4ed5d2b0110edf4ed00
10ec2b435c58400f2f400a113f2f40090f3f2f40140c3f2b2b2b59f4ed5d
2b2b0110edf4ed435c58b5252d1c113f0bb8ffd0b31c113f0bb8ffe04009
190f3f252d170e3f0bb8ffd34009170e3f252d160d3f25b8fff1b3171f3f
25b8ffe4b718203f0c1c19213f002b2b2b2b2b2b2b2b2b59007131300071
5d015d5d002b011323262623220615141716041615140606232227262322
07230333161633323635342627262726353436333217163332363702940f
223d8341293a142001265d4e8e5643701e0b21162110222d9d46303d3c68
992d42958d4c471b1112161803c1fec18e6837241b1929c78b564e96502a
0b32015084843b2a3046476a3852636caf250f0f2300>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 8232 17 <00010013ffe403ee03a7001c0184401a12020002011200120104301e5917
5918501eb70ce01ef01e071eb8ff80b20d351eb8ffc040261c1f343f164f
16560603070e081f07041701171b181f1700061006020601051f06161015
1f16b8ff89406a0f001c201b1c1c460f10140f0f100100005e0f0e140f0f
0e1c0e010004061020160d3f1020140c3f3010401002101b170f1b100f0e
01051c171616070706061c000b1bf71079300f400f500f030f5d0eea0140
160d3f0140140c3f2001a001020f011f01cf010301501eb8ffc0b33c4f34
1eb8ffc0401b2327341e400d0f34101e601ea01ee01e04101e01b01ef01e
021d1eb80103b321c155182b2b5d71722b2b2bf4715d2b2bfd19f45df418
ed003f3c3f3c103c103c12173901111239395d2b2b121739872e2b0e7d10
c487052e182b0e7d10c42b180010ed0110c00010ed0110c05d0010ed0110
c05d0010ed0110c05d3130012b2b5d5d435c5840151e40160d3f1e40140c
3f0210111c3f0110111c3f0eb8ffe0b214390eb8ffe0b215390eb8fff8b2
0b0f3f012b2b2b2b2b2b2b59050126272627352115220706151417131336
353426273521150606070101ebfec53920172d01f12f11182c9a7b352d39
01322c3838fec81c02d583231a09252511161e2566fea1012f82361f2702
2525063684fd2200>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
1 0 0 <0002011c0000051c0500000300070042b40201c30607b803084013000504
c303000a0704c3010019080605c30203bc014100090125015600182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
011c0400fc2003c0fc400500fb002004c000>IAAAAA+TimesNewRomanPS-BoldMT AddT42Char 
IAAAAA+TimesNewRomanPS-BoldMT /CharStrings get begin
/A 1 def
/E 2 def
/M 3 def
/N 4 def
/O 5 def
/R 6 def
/S 7 def
/c 9 def
/d 10 def
/e 11 def
/i 12 def
/n 13 def
/o 14 def
/r 15 def
/s 16 def
/v 17 def
end
IAAAAA+TimesNewRomanPS-BoldMT /Encoding get
dup 65 /A put
dup 69 /E put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/CIYEJL+TimesNewRomanPS-BoldMT /IAAAAA+TimesNewRomanPS-BoldMT findfont ct_VMDictPut/CIYEJL+TimesNewRomanPS-BoldMT*1 [65{/.notdef}rp /A 3{/.notdef}rp /E 7{/.notdef}rp /M /N /O 2{/.notdef}rp /R /S 15{/.notdef}rp /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s 2{/.notdef}rp /v 137{/.notdef}rp]CIYEJL+TimesNewRomanPS-BoldMT nfCIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf25.9844 286.018 mo(Sender)[13.3752 10.6152 13.3752 13.3752 10.6152 0 ]xsh505.046 286.018 mo(Receiver)[17.3759 10.6248 10.6248 10.6248 6.62396 12 10.6248 0 ]xsh270.04 21.3516 mo(Onos)[18.624 13.3752 12 0 ]xsh261.599 286.018 mo(MANE)[22.6248 17.3688 17.3688 0 ]xsh351.342 408.018 mo
245.343 408.018 li
245.343 302.018 li
351.342 302.018 li
351.342 408.018 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 1.32416 429.032 ]ct
[107.333 0 0 107.333 243.352 20.3472 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 161 
/H 161 
/M[161 0 0 -161 0 161 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 161 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 161 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 161 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 161 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
hZ*f]":#,5!jDY.!X&`4!W`9%^&S<;!sJi0!R(Q*!!WH+"U+r.!PSO;!<WH,!Wh]h_Z0lA!sJc.!<L4@
RfEEhklB97"Tef3"p4q5!<)s&!X&`4!W`>9!!NB*"U+r.eH"A)"p"f0"Te]*^&S<;!sA]-!VZT*!!WH+
"Tnf,!RLh0!!!&j!6tQL!='&J&degE]`@d,#QY#5%h]E]"9H7;#6=u7%L`RG!T*n-!!iT-"UYYG#6P"A
!!`N.#n.1G!s,_.#QXr/$4I=I!s.'TJcNdj#mCVF&el#m%1!$U!:Bgn"pttV'GCuc"p)O?#m1A<%1WmV
#mULq!6bEE"UGG6%Kd%E"TcF>#Qk29$4dLP#R.O7#m1><$P*UP"U+qe!.k3b!!<91$kiOS";D=S#Q`<Q
jo>Jc$4[^J'a,3\%0ZdM!"/f4#7V.R%hK*S"9J)o_uKlA#RLq=%g3FL#6Y(N!;QU&!<rf:%h9'Y#RCS7
[K$C3#7(b;%Km.G#6Y(p!.k3Y!!3B7'DiLG%LWBm!8[\X!=0)Ir"T;J&.8QW!!3?1%JpY;$O?k4!5&:6
!=&o>r!rl@$O?d_!:Tsi":,J6%KZn@"1J74!<i];r!if<$3gP)!.k3Q!!<9/$krLQ!YH"JirIU0!s&iB
'`/UH%L`O#!94%]!XB#@q[W`;$j=$>!s&`;%JpY;$OHsS!!<9-#7^P?!XT28cN*20!W`Q5q@3Q4#6_sF
!!20]JcPZJ!XfGNq\92G&-`0F!!<93&JY*W!Y5_BlN#T<!XK&@q[Wc;$j6U@!!!$$$4@@@%g!(F!lG!=
#7:5:!t5S@!SIJ2!!<6/$kN4F!XT/7YQ07To)Jjo#S%OF'a#*^#6D=7!s9#G'`/UH&.Aa7!7:cK!XK)A
q[Wc=$j6UH!;QTs!=9/Eq[W`9$3\9I!WiN3q@3T8$j?[k!7q2Q!=9/Fq[NZ6#R%[<JcP'9!s/c='DiLH
'+tNN\,ZU5%MBKQ'`npT"oSGB!!<9-#n?bB!tG_B!Qb?2!!<6.$kE.F!Xf;;_uKi?"UY#8!t,M@!UBa2
!!<6.$kN4F!XT,8_>o/fi;`r]#n@XG'a#*^#6D=7!s9#G'`AaL'bq8g"iLBC!XB#@q[Wc=$j6UZ!9X=a
!=9/Eq[W`9#mA0H!WiN3q@3T8$j?\(!6"p?!=9/Fq[NZ6#R&<NJcOF'!s/c='DiLH'+tNN\Gua4!tGqX
q\9/D$jFQL!s/]6%JpY<%L`I@gAp(1!s&]:%f6b<$OHsS!!33*$2P,6$Od1>r;aJ1!s&]:&,Qh<#m^[`
!.k3s!!<9/%MS^S!tu:P!Q"j2!!<<5&et3X!Y>bD_uKl@#71k:%g*:M"9IQ`eGo[P#n.=@%g!+F"QBFA
!!33*$2P,6$Od1>\,ZU3#n.@A%KZqB"GHiJ!!<9/%MS^S!tu:P!V-62!!<<5&et3X!Y>bDaT25=!s/]6
%JpY<%L`I@\,ZU3#n.=@%g!+F"R?'A!!33*$2P,6$Od1>\,ZL0!XT8Gq[NZ6#R$.fQ2h!g#n@XG'a#*^
#6F]%^&S6;%MBKQ'`npT"k!DB!!<9-#n?bB!tG_B!Or+3!=9/Eq[W`9#mBl#d/X4L"UY#8!t,M@!Pe^2
!!<6.$kN4F!XT,8QN3!F!s/c='DiLE'*8dO!Or+3!tGqXq\9/D$jGAcl2Unf#71k:%g*:M"9H"4!s&]:
%f6b<$OHt7!6>-A!X/o,%Kd(I"Tc^Fn,NOk#n.@A%KZqB"J>aJ!!*--!=fe?'a#*^#6D=7!s9#G'`/UH
&.Aa'!9!n[!XB#@q[Wc=$j6U@!!<6.$kE4H":l"N#mA0H!WiN3q@3T8$j?[[!9X=a!=9/Fq[NZ6#R%+,
JcPWI!s/c='DiLH'+tNN\,ZU5%MBKQ'`npT"ml<B!!<9-#n?bB!tG_B!P&15!!*B7%f6b<$OHsS!!33*
$2P,6$Od1>gAp(1!s&]:&,Qh<#m^[>!.k4@!!<9/%MS^S!tu:P!Or+3!tGqXq\9/D$jH>)cN"%K#71k:
%g*:M"9H@>pAb9r#n.=@%g!+F"N19A!X/o,%Kd(I"TdZaeGo[P#n.@A%KZqB"QBE5!5SX;!XT>Mq\92H
&dJHa!9jIc!tGqXq\9/D$jFQL!s/]6%JpY<%L`I@nc6]1!s&]:%f6b<$OHsX!;lfu!X/o,%Kd(I"Tc+5
!s&]:&,Qh<#m^\"!.k3\!!<9/%MS^S!tu:P!SIJ2!!<<5&et3X!Y>bD_uKl@#71k:%g*:M"9JB"^&S69
#n.=@%g!+F"O[;A!!33*$2P,6$Od1>\,ZU3#n.@A%KZqB"S;\G!3ZA)!XT>Mq\92H&dJHs!7q2Q!tGqX
q\9/D$jFQL!s/]6%JpY9%K[%A!Or+3!=9/Eq[W`9#mAu_l2Uke"UY#8!t,M@!Or+3!=9/Fq[NZ6#R()+
JcMYJ!s/c='DiLH'+tNNlN#31!s9#G'`/UH&.A`\!!*-+!=954%g*:M"9H"4!s&]:%f6b<$OHss!9!nZ
!X/o,%Kd(I"Tc+5!s&]:&,ct@%LrdN"GZuJ!!<9/%MS^S!tu:P!V?B2!!<<5&et3X!Y>bDb5hA=!s/]6
%JpY<%L`I@\,ZU3#n.=@%g!+F"RQ3A!!33*$2P,6$Od1>\Gua4!=9/Fq[NZ6#R$4hPQ1de#n@XG'a#*^
#6Fc']Dr$9%MBKQ'`npT"k3PB!!<9-#n?bB!tG_B!Or+3!=9/Eq[W`9#mBr%cN""J"UY#8!t,M@!Q"j2
!!<6.$kN4F!XT,8R/j2dirB/_#n@XG'a#*^#6D=7!s9#G'`/UH&.A`\!!<9-#n?bB!tG_B!RLi2!!<6.
$kE.F!Xf;;_uKi?"UY#8!t,M@!V-62!!<6.$kN4F!XT,8aT-nmg&M3V#n@XG'a#*^#6D=7!!<94&et3X
!Y>bD_uKl@#71k:%g*:M"9I0UhuEi[#n.=@%g!+F"N19A!X/o,%Kd(I"TeK#^&S69#n.@A%KZqB"O[:%
!7:cK!XT>Mq\92H&dJHQ!;QTs!tGqXq\9/D$jFQL!s/]6%JpY<%L`I@iW.R1!s&]:%f6b<$OHsS!!33*
$2P,3$N^_?!Or+3!=9/Fq[NZ6#R&l^JcNjl!s/c='DiLH'+tNNaT1f1!s9#G'`/UH&.A`\!!<9-#n?bB
!tG_B!UBa2!!<6.$kE.F!Xf;;_uKf>"TSl*%Kd(I"Tc+5!s&]:&,Qh<#m^[p!.k3c!!<9/%MS^S!tu:P
!R^u2!!<<5&et3X!Y>bD_uKl@#71k:%g*:M"9J,p`;fu@#n.=@%g!+F"NpfA!!33*$2P,6$Od1>\,ZU3
#n.@A%KZqB"RQ2@!4Dk0!XT>Mq\92H&dJHl!8[\X!tGqXq\9/D$jFQL!s/]6%JpY<%L`I@r;aJ1!s&]:
%f6b<$OHsc!:^$j!X/o,%Kd(I"Tc+5!s&]:&,Qh<#m^\-!.k3Q!!<9/%MS^S!tu:P!TX72!!<<5&et3X
!Y>bDiW/!=!s/]6%JpY<%L`I@\,ZU3#n.=@%g!+F"N19A!X/o,%Kd(I"TcsMkl:ed#n.@A%KZqB"K)6O
!;lg!!XT>Mq\92H&dJHI!!<<5&et3X!Y>bDlN#W=!s/]6%JpY<%L`I@\,ZL0!XT8Fq[W`9#mA0H!WiN3
q@3T8$j?[b!8mhZ!=9/Fq[NZ6#R%@3JcPBB!s/c='DiLH'+tNN\,ZU5%MBKQ'`npT"nVfB!!<9-#n?bB
!tG_B!Pe^2!!<6.$kE.F!Xf;;_uKi?"UY#8!t,M@!TF+2!!<6.$kN4F!XT,8\H%3]l2Unf#n@XG'a#*^
#6D=7!s9#G'`/UH&.Aa@!6>-B!XB#@q[Wc=$j6UQ!:Tsj!=9/Eq[W`9#mA0H!WiN3q@3T8$j?[t!6tQH
!=9/Fq[NZ6#R&!EJcOa0!s/c='DiLH'+tNN\,ZU5%MBKS'a,6d&.A`\!!<9-#n?bB!tG_B!R^u2!!<6.
$kE.F!Xf;;_uKi?"UY#8!t,M@!V?B2!!<6.$kN4F!XT,8b5d+ofDl!T#n@XG'a#*^#6D@8"98N6&et3X
!Y>bD_uKl@#71k:%g*:M"9I6Wh>dWY#n.=@%g!+F"N19A!X/o,%Kd(I"TeQ%]Dr$7#n.@A%KZqB"OmF'
!7(WI!XT>Mq\92H&dJHS!;?Hq!tGqXq\9/D$jFQL!s/]6%JpY<%L`I@j8d^1!s&]:%f6b<$OHsq!94%\
!X/o,%Kd(I"Tc+5!s&]:&,Qh<#m^Zf!1s5n!XT>Mq\92H&dJI.!65'A!tGqXq\9/D$jF`Qqu?g##71k:
%g*:M"9H"4!s&]:%f6b<$OHt%!87DS!X/o,%Kd(I"Tc+5!!*--$kN4F!XT,8NW>@F!s/c='DiLH'+tNN
qZ+>1!s9#G'`/UH&.A`j!:p0m!XB#@q[Wc=$j6U@!!<6.$kE.F!Xf;;oDm8=!WiN3q@3T8$j?[I!;QTs
!=9/Fq[NZ6#R$IoN;s%_#n@XG'`\mK&dJHI!!<<5&et3X!Y>bEgApL=!s8c7%JpV;$k3:>[f?F8%JgP9
$4-n7!6>-B!sJu?q[Wc;$3L=N!:Tsj!=9)Bq[W`8#6gb#L&_;V!Wi`1%MS^R"VVLR"98J7!!<<*&/+gR
":u%H!s.NairB5`!!*B5%Jp\?%h&UB!!0\3"9AQ1%M&FK"qV=S$3UA1a8l2?!XB#@q[Nc=$j?\4!Rq,5
!!E?)#n.:?%Km.G"9JV5!!!&n!.k4K!!NT=',_c1qB#h[()%5]]Dr*C&/6')*r@#_*?#V)$j5u!g&M9Z
$OdUZ'`/UK',(oc$3Ij?!!WK4%MALO"VMIX$O6dU!!NH4$kEsaq\02K&e5BX!o3k7!!NQ8$kX0dq\02I
&.T-S!OVoZ!:p0m(G.R,pcJ[?3&E&k]Dr$T0Jtrf49[f.3]&&eq#JeB"VVq',pt);-3YeH-6jH7_uTT5
"V`"'-RU>>-3YhI-6X92aT)JS*$ZdV-2T%n-mKuZ)[>F)f)Pje*$YA.q^2Oq-7'iM#3>i:!5ed=)`'ZC
pd50M5WLG*dK&S5"!BKc5km\L5sRCY$-</K&L&Xt/Hd[V-6ENc!6G3B(F(@&/Hd[V-5d$3!<)s#'HSVO
pF?=p,TI'%!!<lY-S"j@"">E6"muAB!4i.3)E'kR6NTD*$ek[@!!4?'61mSH4X^WY!!3cY/+kIq.3Afn
!5JR9'dYC'/HR@@#1W_H!!3]V.J51m-QWN*!!3o\.J51m-Q*0`!.k3U!!4&s5kRJG4Y[?*!8.>R+u_g\
6NTD!$-</K&gT"%/HdXW.3Af-!!3l]/+kIq.3&QK!:0[e&0iXs.fq(>#J:$<(*b:$.g%.:#69>UVuQl;
2F-q&!^/7Gm/YK5![9Qhog8dD-jduq!tlk0/bUat.3Af-!!3l]/+kIq.3&QT!94%\&0iXs.fq(>#J:$<
(*b:)/,Un!-Q*/H!1s5m)E'kR6NTD*$haS@!!4?'61mSH4X^W^!;lfu&gT"#/HR@C#J:$<'dYC'/HR@@
#4MWH!!3]V.J51m-QWN*!!!c8,:W:9![eijP5pmK!ZEs^og8jF0ads]^&S3Y2aR+(!^.q<f)YCB!YQb/
odp4o*s]FY!Ym"3odp4o*!Z3=d/X4Z,:W:9![f#o_uTT5!Z!"0od^(k)$cZ3W;u#[!ZEs^og8dD0akVo
![9Qhpd>$J!^.q<aT)AT,V/O>!\#2rdK&S5!Ym"3odp4o*!XLb!Y?S*od^(k*XD<;aT)AX,:W:9![eij
bQ*4pg].Bo2F-q&!^/7G]Dr!W2aR+(!^.q<aT)AT,V/O>!\#2rgAp45!Ym"3odp4o*!XLb!Y?S*od^(k
*XDWD^]4EO,:W:9![eijeGt1$df9Ff2F-q&!^/7G_>sH5![9Qhog8dD-jduq!YQb/odp4o*s^j,f`2'g
,qJX?!\#)naT)AR,:W@;"=kuM*XB=X!Z!"0od^(k)$f!uJcNpn!ZEs^og8dD0al/)nc/_82aR+(!^.q<
aT)AT,V/O>!\#2rm/YK5!Ym"3odp4o*!XLb!tZ\+/+tIp-QWN*!!3o\.J51m-Q*0P!.k3e!!4&s5kRJG
4Y[>o!9jIb+u_g\6NTD!$-</K&gT"#/HR@C#PJ/<!!3l]/+kIq.3&Q;!;lfu&0iXs.fq(>#J:$<(*b:$
.fq(9#Oh_F!4W"1)E'kR6NTD*$f(g@!!4?'61mSH4X^WY!!3cY/+kIs.3Acp!58F7'dYC'/HR@@#1ikH
!!3]V.J51m-QWN*!!3o\.J51m-Q*0b!.k3S!!4&s5kRJG4Y[?,!7q2P+u_g\6NTD!$0;0K!!3cY/+kIq
.3Af-!!3l]/,1^q/HR@@#0?iH&0iXs.fq(>#LWV<!!3o\.J51m-Q*/h!.k4M!!4&s5kRJG4Y[>W!!4?'
61mSH4X^X)!8IPU&gT"#/HR@C#J:$<'dYC'/HR@@#0?iH&0iXs.fq(>#MT7<!!3o\.J51m-Q*/q!.k4D
!!4&s5kRJG4Y[>W!!4?'61mSH4X^X2!7LoL&gT"#/HR@C#JpK<!!3l]/+kIq.3&Q6!!3]V.J51m-QWNR
!8.>R(*b:$.fq(9#J:%g!:0[e)E'kR6NTD*$bQH@+u_g\6N]J"#lr*J!YQb/odp4o*s]shnc/_+,qJX?
!\#)naT)AR,:W:9![f#om/YK5!Z!"0od^(k)$e+\JcOg2!ZEs^og8dD0akVo![9QhqEt0J!^.q<aT)AT
,V/O>!\#2re,\_5!Ym"3odp4o*!XLb!Y?S*od^(k*XDB=`rH/V,:W:9![eijc2`Frg&M0m2F-q&!^/7G
]DqpU!B3=;6NTD!$-</K&gT"#/HR@C#MfC<!!3l]/+kIq.3&Q6!!3]V.J51o-QWKm!58F7(*b:$.fq(9
#M/s-!7:cJ)E'kR6NTD*$cE&@!!4?'61mSH4X^WY!!3cY/+kIq.3AfW!7q2P'dYC'/HR@@#3>jH!!3]V
.J51m-QWN*!!3o\.JPFm.fq(9#D`AR!!4&s5kRJG4Y[?:!6G3B+u_g\6NTD!$-WDK!!3cY/+kIq.3Af-
!!3l]/+kIq.3&Q[!8IPU&0iXs.fq(>#J:$<(*b:$.fq(9#E]"R!!4&s5kRJG4Y[?C!5JR9+u_g\6NTD!
$.T%K!!3cY/+kIq.3Af-!!3l]/+kIq.3&Qd!7LoL&0iXs.fq(>#JpK<!!3o\.J51m-Q*/X!07*])E'kT
6NfbD4Y[>W!!4?'61mSH4X^Wn!:0[e&gT"#/HR@C#J:$<'dYC'/H[FA"oudG!Y?S*od^(k*XBjgnc/_,
,:W:9![eijUB$#K!ua'_6hWkK4Y[>W!!4?'61mSH4X^X"!94%\&gT"#/HR@C#J:$<'dYC,/c71%.3&Q6
!!3]V.J51m-QWNB!9jIb(*b:$.fq(9#HRoW!;lfu)E'kR6NTD*$bQH@+u_g\6NTD!$1IrK!!3cY/+kIq
.3Af-!!!`7,qJX?!\#)naT)AR,:W:9![f#oh#Q@5!Z!"0od^(k)$dPLJcPBB!ZEs^og8dD0akVo![9Qh
og8dD-jf\Ld/X4\,V/O>!\#2r_uTT5!Ym"3odp4o*!XLb!Y?S*od^(k*XCg-f)Pjf,:W:9![eijjT'l4
_Z0`V2F-q&!^/7GdK&S5![9Qhog8dD-jduq!YQb/odp4o*s_E<aT)AW,qJX?!\#)nbQ.VB!Y?S*od^(k
*XB=X!Z!"0od^(k)$fR0JcN@^!ZEs^og8dD0al_9iW'$(2aR+(!^.q<aT)AT,V/O>!\#2rr;aV5!Ym"3
odp4o*!Xpno`,%),:W:9![f#o]Dr!K,:W:9![eijpAfdFYlFhD2F-q&!^/7Gj8dj5![9Qhog8dD-jduq
!YQb/pFQM"/L_bH]Dr!J,qJX?!\#)nh>lmB!Y?S*od^(k*XB=X!Z!"0od^+l)$^.n!2ol!)E'kR6NTD*
$gdr@!!4?'61mSH4X^WY!!<iZ.kUHH!\#2r]Dr!J,qJX?!\#)nk5aNB!Y?S*od^(k*XB=X!Z!"0qCDIo
![eijM?'7K!ZEs^og8dD0am[T`rH/b2aR+(!^.q<c2dbB!YQb/odp4o*s]FY!Ym"3odp4o*!Ym4g&M0c
,:W:9![f#o]DqpI!@'&d.fq(9#Eo.R!!4&s5kRJI4Y[<E!58F7+u_g\6NTD!$.f1K!!3cY/+kIq.3Af-
!!3l]/+kIq.3&Qf!7:cJ&0iXs.fq(>#K-W<!!3o\.J51m-Q*/Z!3#t[!!4&s5kRJG4Y[>W!!4?'623hH
6NTD!$-</K&gT"#/HR@C#LWV<!!3l]/+kIq.3&Q6!!3]V.J51m-QWNb!6G3B(*b:$.fq(9#L!1"!8IPU
)E'kR6NTD*$bQH@+u_g\6NTD!$-</K&gT"#/HR@C#MT7<!!3l]/+kIq.3&Q6!!3]V.J51m-QWNk!5JR9
(*b:$.fq(9#Lrg+!7LoL)E'kR6NTD*$c2o@!!4?'61mSH4X^WY!!3cY/+kIq.3AfU!8.>R'dYC'/HR@@
#0?iH&0iXu.g.@Q-QWN*!!3o\.J51m-Q*0G!.k3n!!4&s5kRJG4Y[>f!:g*k+u_g\6NTD!$-</K&gT"#
/HR@C#OMN<!!3l]/+kIq.3&Q6!!<cW.4b*B![f#o]Dr!K,:W:9![eijk5^)6_#ONT2F-q&!^/7Ge,\_5
![9Qhog8dD-jduq!YQb/odp4o*s_K>`rH/U,qJX?!\#)nc2dbB!Y?S*od^(k*XB=X!Z!"0od^(k)$fX2
JcN:\!ZEs^og8dD0ale;huEg&2aR+(!^.q<aT)AT,V/O>"=YDt!!'_5!Ym"3odp4o*!Y!po)Jh',:W:9
![f#o]Dr!K,:W:9![eijq#H!HY5eVB2F-q&!^/7GjoF!5![9Qhog8dD-jeu8jT#>p,V/O>!\#2r]Dr!J
,qJaBr[e1#*!XLb!Y?S*od^(k*XC*nlMpu%,:W:9![eijWW7VNrW!!<2F-q&!^/7G]Dr!W2aR+(!^.q<
mJu#B!YQb/odp4o*s]FY!Ym"3odp4o*!XLb!Y?S*od^(k*XCF"iW'#q,:W:9![eijZN,RWo`,%32F-q&
!^/7G]Dr!W2aR+(!^.q<pAiYB!YQb/odp4o*s]X_qZ$[4,qJX?!\#)naT)AR,:W:9![f#oj8dj5!Z!"0
od^(k)$deSJcP-;!ZEs^og8dD0akVo![9Qhog8gE-j]mr!!3cY/+kIq.3Af<!:g*k'dYC'/HR@@#0?iH
&0iXs.fq(>#OMN<!!3o\.J51m-Q*0.!.k42!!4&s5kRJG4Y[>W!!4?'62EtH6NTD!$-</K&gT"#/HR@C
#Lib<!!3l]/+kIq.3&Q6!!3]V.J51m-QWNd!65'@(*b:$.fq(9#L3=$!87DS)E'kR6NTD*$bQH>+osVg
og8dD-jduq!YQb/odp4o*s^U%huEfn,qJX?!\#)naT)AR,:W:9"=G5q!!'_5!Z!"0od^(k)$eanJcO0u
!ZEs_og8dD0FYl"q#CI=3C3=*!^.t=aT)AT+tN=<!\#8tjoF!5!Z*(3odp4o)[>C(jT#>n+t<18![f#p
]Dr!I,q8U>r[S$t)$PfrU]:Mu"9]PqoJZq2.h2[_!VZT<!!E<*"WfGk2[)&b$j6S3cN"+L!s9&X-1rSg
,o[-m!<L%;"T\].'-S[p-3Y\2#Qk).nGqGH"9AT,&KUKg"X+im!s&G>!!NB*";;n&ocjV`)@$?F!L*SR
!!NK5%MKTqoGRlJ&ISjH!5ed?"pthQ)B&/c";MFW#Q`QXp](I"#RLqO&bQY<&.o9U"p2XA"U,,;%M9<G
%g<LU$4-n<q>f(H"9Si7$P2kB"VD4P"pG%H!<)s$!sAo=&bH\=&Io*R#+P[V!!<<5&/+XLrY#DI&IJgH
_>jZD#n@U='*JpZ&dJKs!:Kmj!sf5A%J1,6%h&jN"p2XA"9o#9%1i(@!t>YH#lt/0cN"(K#RUqKoEtg2
$k!4C!mUf=!!EK0#mq+5$O$tJ$46n:V>uGQ!X0)Kr>"o=!Y,P>_>jWC$ki%E!u)FW!U9[I!!<<2%M%t=
!XT&4_>jW@#RpG<q@<Z>%0ZdY!!<<0%1hq<!XJr2f)Y.;!X&`;n.#O0%0cj:!.k1R!!!05'^lb<%LN<T
!!3E7'(?V<'GLoUo)RSH!s8o@%e'u1#mLIJ!!<B1$kMk=!tYnF!RC`J!soDIn.#L*"TmT^irB,`#7^/4
!t>\D!Or,]!;6Bo"V2=9'`njP"2Y$>#Rh@8'a#-a$N^/*e,TRQ$P![9%g!%A!lk<=!!3<0%.Fc0&.JdD
cN"%L#n7F7%KZn>!pK^=!!39.%Iai0%1NLBkQ$27`W-&D%i"II!Y,P>eH#";!XK2In.c$>'FOrf!!<<2
%M%t=!XT&4pAiD;!X/i<n.,U4%0ZdY!!<<0%1hq<!XJr2_>jW?#7^/4!t>\D!V$/A!5/@6"V2=9'`njP
"5X%>!!3E7'(?V<'GLoUcN"%L$P![9%g*+B!W^+<!X/i<n.,U4%0Zdb!;HNr!soDIn.#L*"TlO@!X&`;
n.#O0%0ck0!.k3X!!3<7'^lb<%LN=$!8IPU#Rh@8'a#-a$N\QR!s8o@%eUA1%g!%A!l=p="UGP+%g*@P
"TdQ^mf3Fl#n7F7%KZn>!l=p=":#D*%fZt="p'AWWrN5*%ho]H'ESaO"7Q<>!!3E7&apD8&de]d!!*31
r!r<.!XJu2_>jW@#7^)2!!_Zfjo>Jd#n7C6%fut>!Q"g<"9f8/&,He=%1EIBN<$9b!W`?'o)f!s'(-G9
%L`LBq?+kB!XT5ImM#^1"9S5u!WiH)n,NIi!qZKs!<WB1%1hq<!so58!5nm?!sJo=n.#R1%0cn7o`5$o
!<WAl!!30&!V?Er!s8o?$h+Q,$3gV6_u^&D"UGDCnI,O1$jHe7oE#$q!N#ju!!EB/%20NL'a#-f*?X_m
!?N-Z(W$mg(`XXe+9Wc.)AO%['a#-^$O-/&!s8Z5%K-h3%g*:R'c$0O!tc1Y%`Ak[&.]Bgn.Yp='b^BS
p^[H:%0ct-!!NB*#7M+Poa_-7&.oWF('>9`%1^Gir=8u>&JGlJ('>6b&e+@B!t5M@!jMa)!;lg"";2t<
4S(`8541W:5!D*H4Tdf15!\d*qEG!D54^o@4ut57$3Bl$"9JuK,U`14s!R1`!\#WJeLBo8!@fMb.fUpg
.0V(H*YAPVpAb<u$Pjp4o-`iP!\#QFpF"04![oHGlmVEP"=>'$#6EibJcPEC"TfDo3^,du5jUi<6,>ed
62X+?6gm8C4$"Mk!Vl^"!Y?M'.4d(B.fh4Qm4A;jh(.S;s"*Oh!&!jn#;%GU.45r:!Vl^"!Y$4t-RgJ8
.K:ma/,q'9.K:mb.f_'j.0h7M.4->U#6F2lJcP*:!tHqG6(C<m6N]M4*!H';!soqr/A<^B/H[LK'*J%1
!sp"q.,ZV<.g%1E&Hh_,JcOg2!s'H#5bpcj6NT>#$i0i*!>?Y-`\"/A![o#oq>^Tu&gAdg.u,VX-6!0i
!.k4)!!<9M4$fu9_F"Dh2%K`b!!<9@-S3RqTIg6r,RFMK!!<9>-S"X:Jh-dM""59"!K$m)!!<BQ4[HMD
\O-H`2%p#f!!<?D-nO"&QRr:h-4L"Q!!<<A-S"sCJh-ID""5?$!L!N)!!<BP4[HhMYX8LW2A6,j!<)s#
"</a?M(RjA""GQ*!W)j!!Z3:7X"2+=""5?$!Q+o)!!<BP4[JO(JjT]/6U*IB!W)j!"</a?OtGKA""GQ*
!W)j!!Z3:7Zn&a=""5?$!R(P)!!<BR4[Jj1Jj]6!"$\XU!rDs""<Ag?Rk<,A""GW+!rDs"!uWC7]dpB=
![o6"e,Y=*"p"`+"XlJuJjJci%6l``!s&B%!<E0%)CR,3/B]RK.O>K(!<<-!!<WE@-7Hk`W@A$!+:A5O
hZ/6.#QOi,!sT&S/1ui6j=^Wg.1ldhr;m*)#8J:%XWYG&!u_RO"T8B)":#V[+O;.&*sN`*$O$Y7!pTc;
!;6Br#RCtP',HcHgD'i,'bLufr<<?2$OdTS%_3&X&.T*U$O$\<"pt\H%bD5X%gELS$OR4C"7lME!:9dd
$CDOP'`SF<#lY=I&?QND%fZ\9#6tYG%1\1'jp_M)%1<RQ"9bM#]`A'@a;(6\r<V[!Je.\grrrE.N=OSN
rs#S*ZiL+7d1ql\r<W!*Je.A^rrrE.Q4D4Nrs#n3WrW/.g(fM\r<W<3Je.&UrrrE.T+8jNrs$4<U&b3%
it[.\r<S,gh[f_jrs5P5]ak&Ha8hV.rs\6/Jee%qr<SGpedqcars5k>Zk!*?d/]7.rs\Q8Jed_hr<Sc$
bn'gXrs61GWt,.6JcO[.rs[EmrYF$!c4pBp'GL-Sr<Vm'r!r'(!"Su:rXSc8X:P7>p(.0,rs8-)!"Jl:
!=o\,%fQt?%M')H%Kd4P%M/LJq@<N0MZD<.rs\E4!u)Ic(@2b;()7S`('53c(?$"K'a59d)B9P-p(dN3
ndb^1r=K,C%h9*=%gEFP&/Q0"&crRP%]BmB&.T<c%hB0E&,uh5#kJN4%1a'f)As.t%M/%=#nILW&JPok
%M')J%L!@Q&.f?_pC@3-PQ8r.rs\K6#8S0q)]Kb9)"&+E()@`*)]BS1(?uXL'a>?e/QH7L+ncZL#kSW8
%MBEo+!VjG'bV#eo+)9@%Mg]kA9;Zh3$&YA%]^*G&.][01*dMD%epS7"oel+%f-YD%1a@<A:oquC-`jO
&+L,8'-9),<DZ"1(]FrN%epM<%hfQf&.fBI%fZa(!5nm;%.k8:(`FD6r>G_W)]8)[!u;an)#b<S(`=8/
(A/EN'aPI"J@WS%=<81O(&\F2%h&p\+>#H23B/oM+VbRd&,6YF%OPP\b1>8!dC=Q^'FkVS%gW^^6>^sX
/eSZh&,uh5#ke`;%1b=JbNnipo^1+g4;.5q%M'LMLUbRUdDDS`.hN:&]FOE@#7hLX$P3m\&,6Y7#1W\R
!W3!!!SIIb!<3K#'`o3l)u1BQ*#S;_!u;Xk)#4sN)Aj5)'s/2V&Pf^N_oS/s'DN=@#k\]0'e)'<3<_E&
.Mr[+p(%]C/;qg.g=b-2g"b5^8JVdGXUb[H.qa-PISgpl!"Sf8rrrE.p'q375Ig.Vr:U<hoYO96&,$JE
%3TH#f@/-od*^IpO#@U]&&o+B%L<UW$4@4S&.T6H%fZaa!;HTq!TX6d!<3K$'`o3m)tt6O)]//^!Yu^l
r"o8I!>u`T'aPCR[DTl%SM:iR(&\F4%fm4S![fofpc/F*((UoM%g3@`L!n]NfEC!94q\@-%gWUpCNt#K
<Z;PD&,uh5#knf3$7iRUp\OOdp@l?e&.eOG":Q,^`RFY0"PK+n%M-kqh@9c&%1<RP&ePZL%fZab!;6Ho
!U]re!<3K$'`f9nobmiN(\\XG()[t^(BGHj\eXfO#SK"]^V[U&+r'eer<W0/":u.f2*1Fk!?i*M%g*5J
ak?F@"PSeZ%M%>+d16Km*E.$&E'"aDp^dB.rs8B0":Pcslh:,H"SVMX+:\)U!tRo0e+_2mf5;N<%h>`P
#7hCT$k<p]&,6Y7#3Z'W!;$>b!;HQo%/1J;)'&8e!?;sO'`o-d)tXpI)&U7+l4jL;(.X"BE%Ubur<W0/
!Y?"soJm",((UoO%g3=fVUjGpfEBsL8.c?p&',7c&.^*U;`Ych&,uh5#l"l4#Wg?*p@n4_ptJLQ&,Hb=
$lk#GdJD5hcihn*2@g>#%L*FT&eGZe&GH\7#4V]X!!!&k!iZ1g!<3K&'`o-h*:k'K)u(-L()Rt](BPNk
(=!ZQ'a59c*?u@7p(dN3p^[H<*A]bL3<M5^&.\OI!t%]=g@X#!F;bSW&&&PX&.fNh&J4XHrrrE.p^RB2
ETm,io`OpZI2;Vg!X^oi!7UVf"4C6b&$-6C%1EdYoa_!+q>fFRncH)sjoGDipD!]K)tOsK)]/;b!Yu[k
o+qHI()GL:eeS/u!#,#?r<W0/!tZY73qPE6+qbC^%g*/RbhDaB"5Jq]%/CF@&-!4@%eUA4"oel(%Km4J
RI9eAo`Y#_+:JbW%Kd&6^!lZ$"57c5&$$3?%J1/1#2'"I!kSHg!<3K%'`f<oo,7WK(\ndI()e%](BPNk
(>oq@(&\F4%g!t63qPE6-P?pc%g*2[cJ%sD!o0:m!">A.rrrE.q$mN:%]&Req=X^Z"8Jf>%/UM;%1?4P
e+M&ifm4SJV%381rs%-VncH`0e,]LWpD!]K)tOsK)]/;b!Yu[ko+qHI()H-L`"i4bobIE2p^[H<+Z;CR
3<CB;%f-\<$Ymr?qq1eu"5T+b%'1!>&H315&,uh5#l+r4%1Jcp!;?*Y!r/K4q$mK7:qkEOci`!D)@rt\
rXSr;rt"f5rs%-VncI&9b5hPNp_<iG)]\Gf!$(bK!YuXko+qHI()HHU]G1Sa(E4D6'_W:A#lb2)%g!b-
3qPE6*>&eX%g*/8`7ah9"57u=%(m,A%gERS%hB-\%egM6"oel'%Kcr^kk=`C"8;A=(\nOC$9YWCp!<fi
>S@Y)%aPUg&/?#p%hJCErs%-VncJaiRfNHspD!`H*#nVj!u`'s)>FpJ()@h\(]P>R'a>?f0iVON,lJJS
(&\F5%g3FZ0/u#d3<:lQp^[K:.]q=UpXfW&b"rWZ`=M5E#S7LU$4%%K%hA@FrrrE.p^RE46e(f&p[nX`
i)C9`%Km1^O3Z/Ici_b/3YLQb`sr=b/6$(H*Y8kW%fZad!!!&p!rN+d!<3K$'`o?o)YP'M*>eDa!?)gJ
(BGHjX;(aM-jFXTR?(;g'_iFA#l"o4&.g$Cof3(!'+XaI")Z67g%j8'g"VuF%a>OC%gW^U#n77K$4RL?
&,uh5#l"l4$l,<!pA":`p@YI4%/CA:%1Z:JdF%d:"4>SE*UXEP%L<CcFePh);\ou>%fZac!;$>Y!<3K*
(&J^I)&sUi)?Ciqp([ZF()n+b(BGEkZ5*3N#SKUaQ^*ta.hqanr<W-."V;D!2`Wqq3<D5m)"nID%4IXn
g=cAU"khSB9G.id&(hBu&ISsR$Od:M&GQe9"oel&%L!+u`:<Qpqt1*cp<cPFpC7?7*I,QPdJM8ndF"jM
&bcdD%L3>.QDLCVIjOh!rs%E^pAjmg!!/GerrE'-ob@QH*#fjn)?CltoG%HD(E44e(BPKm(:t=O'aPFB
M3jNqGq0R'(&\F3%g3F].lKBa3Wh>n)A)QP%gt:ccIpq*g"P05f",'%%c.`B%fd4?$3CSA%JLD5"oel&
%L!:K;oe>!qt:0ad9dLqp'qWC.=].\e'l^ne'ZC46kTt>XUYUD7@'jJVg]p$p^[<.l2^2Op]:ErTE+Zc
rs\N7!Z2msr#5\W*?+J`$l0Tt)Aj;-(Dn#/(`("(kS4@:.WCK5NE$u5p_E`5oa_0:'dYOkr\js<1+*hL
o+)9>07LIVe(3*s`1'73%d";A%gWaW#mq(J$4d^C&,uh5#ke`<%15=th!FS&na>>B9b.^+%L3FO+(1YR
aN4V/_R+YF&?63F$70hcTpSjrpC@3-o)ReN!!2ruVZ?)ars\H5#8nI%*??+=(@W%@()@`*r>PbT(<RBK
'a>@.?#!.\'_`@@#kSW7&/,p),q1/a)%mMN%grg\4`64HQ%)XS%M%n;]FP2X%LNLM%M8@FrrrE.oaVB>
#T-R(Zb!N2?69L`ndZ!7&M@""H?N[Y(_!k`ndYg4/m`Bi*;0mB#,D74!<3Jr'a#3d'c-0O!YuOdr>,2D
XVCsP()Rc"p(dN3o+(p7&.T?N&FU,8&./jZ(DI8b%]0a:&cE:>&,Hh:"oel"%L<CI$PFBo$jR40%L<IN
$P='e%1<TZ%d4B*$4daX%JC;3#-@m4!<3JT'r)ND'_E.=#kJT+&,m.)%fd1?%\sU:%hK<E&,uh5#k8B-
%13FN%I4K+%1EUQ`=C`7rseT1rs#n3WrW/.g(fM\r<W<3Je.&UrrrE.T+8jNrs$4<U&b3%it[.\r<S,g
h[f_jrs5P5]ak&Ha8hV.rs\6/Jee%qr<SGpedqcars5k>Zk!*?d/]7.rs\Q8Jed_hr<Sc$bn'gXrs61G
Wt,.6JcO[.rsYb>^D6\Qa:FgPrrrE.l4/CUq@<N0MZD<.rsZ(G[MA`Hd1;HPrrrE.o+$?^nIGR'PQ8r.
rsJ`=]+hF_rtG>9rsd`nNXl$trrrE.rXSr=Je./XrXSr3SH-S."UPJF&J>ht(8quN'bUudr<390$4RO/
&;C_u%gr[M#6Y/5"UGGE%>kYT%Km.F#Qk1+!4r47"pPMG*@8uYTI0jh+qtIpr<3<1$PO<pnJQorr>?%]
(_-iX!s8Z/#RD(])O)2q)[72r$j[(?"0V^1!!NB(!!Xl6f0>Td$pHT`!W`9$!<E0()(GA4Jh6OF"=YN)
!!2ut!Wj8eS12l8"",?$!OVp,!<)s#"=H>uM*pDm"$\[V!W)j!!uiX>X"D7A""GQ)!W)j!!uNC8bq#M=
""5?$!Ta<5!;-<o"XcH!P!e%m"$\[W!W)j!"</a?Zn8mA""GQ*!W)j!!Z3:7egm.=""5?$!U]r>!:0[f
"XcH!RmY[m"$\[W!W)j!"</a?]e-NA""GQ*!W)j!!Z3:7h^ad=""5?$!VZSG!94%]"XlN"UdN<m"$\XU
!W)j!"<8a>`\"/A""GW+!W)j!!u`I6kUVE="=PB"!<@]Og&M3W-p'_s6c)1m4uElQqZ$^"*%*8_/YFZt
.jGB&qZ$^")'pa%.tT;M.g%1C$3H(bci=+i3'ao>\O-E]/dqIT!Ylt2fI`FA!\#5sq#CI1,:WI>Jh-ID
![f#oOoWN&!Y6tK^I,7n"$epf#5nQ#!!EZN.4d$./a"\f.O5`2q#CO'*[`EeXXh@@"">K-"Mt/*!!E?A
0Kqem6\@`+5m0J5,msbL!!NH;+"8`lPqCoG"YM>N(^U6=!!NB9*[`Ee[k#-B"=bZ6"p)mIN;s(a)D4-=
qa5s&q*P9K2'iY4pAbC"&KiAM/M*PHfI[7V.3fZ9!qu[!!tQG".4Zmb/%-r2.OQGX#gr^*!!!$#$6"RH
nL4Pi+VP"N!!NB.&fVi1W?';*!ur*d"7uQs!='5V)B$^:X;V-T$j52`JcPTH!W`WHN@F'?""GH-"S;Zt
!='5V*?2:)`Z5.$(C^K=!!NB.&fV`,e/G)#!Yl+GirFZ2p&KU~>

%%EndBinary
grestore
np
368.676 174.685 mo
300.537 174.685 li
300.537 174.211 li
296.037 174.211 li
296.037 174.685 li
228.009 174.685 li
228.009 34.0181 li
368.676 34.0181 li
368.676 174.685 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 1.32416 429.032 ]ct
[142 0 0 142 226.018 253.681 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 213 
/H 213 
/M[213 0 0 -213 0 213 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 213 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 213 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 213 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 213 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOL)!X/i:X9\q7
#RUh=M#[PY"onq/"p,&6!o3jY!!36,"ka+."p+r4!lY/Y!!36,"i1E."p+r3".TA[!!3<X>Gtj0=rdY8
!1<fg"!K_m4hNoZ3thY;!5\^;"!BeG5ik643YVUg!:'Ud!uiqm1'0'?!qu\[!!3RLea_J*h#btl#0m4_
!!<L"O-7VKifaJ-N%>+.!9X=a#u?VGWg!ULNA1V6!0I6`#X36Kp2dW_"*/?,"k!C^!!3OJe]cn+h?)%l
"fVL^!!3BuMl;gBMCo#3!0$s[#Y^6RPd$ARLb8h]!4Dk/#<ctOFkUs?F)3-*XT75Y!Xj"uW87O$!CR*L
!!3BuMuAj@P6-Uo"PNj]!!3F"NRX3CPQHXn"L.s]!!3BgDQ@m`F`hbA,m9,+!Xj"uW87U&6j;EIXoJM.
98hGdd?=Wh/d0/o`W-&G9T?iPl')7*/d.^Fmf3Co4`76A"*89)"S2V]!!3OJea;5+h?)%l"j-h^!!3Bu
Mo:h@P6-Uo"JGh]!!3F"NMr'CLb8i)!0mNc#<ctpFh)VsF)3-*c2bQY!Xj"uaPPn4!mj==V#]ZY!XDAV
W07:?/d2%OOT5Fg9TA_0[$1WJ/d0T&\c;d:4`8JdhK8pACaB4`!94%\$ZX^qh?;1n"TSO^!!3BuMtrR@
P6-Uo"P*R]!!3F"NR3pCPQHXn"K_[]!!3BgDQ.aZF)1k'"H*6]$ZX_qhQ5Q8cpS&k!3uS+#>:!)PLYiu
MCo%:!8@JT#Y^5YPl?mKLb8gg!!3BgDQ.a\F)3-*h>j\Y!Xj"uf\Y$4!mj==`W4!Y!XDAV^m"#H!fAT5
SH/*Y!XMJZW0@@>/d1bGR/d9n4`9Y0]laEuCaB5,!5\^;$ZX_8hW<SqcpS&2!:'Ud#>9uRP6-Uo"SVn]
!!3F"NU`7CPQHXn"O7"]!!3BgDTHt[FTZ]$,m:%Ek5YPkERh#E!mj==qZ)`Y!XDAVoolbH!fAT5dK$iY
!XMJZb`pqJ!f/H3W;trY!XCl+WHAAcCaB2a!0$s[$ZX_mhQYi<cpS&g!4Dk/#>:!%PM)-$MCo%6!8dbX
#Y^5VPQ6L?/d.(4!XCl+rH55b"*89)"PNj]!!3OJe^WI+h?)%l"gJ'^!!3BuMlW'@P6-Uo"H*6]#Y^5V
PQHXn"Ps-]!!3BgDV0*[FTZ]$,m;3f`W-&JERhk]l.uKg6j9+]mf3Co98fa4!fAT5o)P0Y!XMJZm?G8J
!f/H3aoK9Y!XCl+`-(3b"*89)"JGh]!!3OJeYq=+cpS'3!0mNc#>:!FPIQeXMCo%W!58F7#Y^6!Pi7i.
Lb8h,!9X=`#<ct(FTZ]$,m=)FOT5FjERja=[,(l26j;!=\c;d:98h#Xh3.nt/d/-RirB,d9T?!8"GeZ5
!!%uY!XCl+q/rrb"*89)"P*R]!!3OJe^31+h?)%l"g%d^!!3BuMt*"QQ10t;M?,=4MZ<ea9TB"8op!R^
n<=!1/d0l.Z2aq24`9e4jEB[/nT=qTCaB4h!8@JT$ZX_fh?)TjhTagWh;$o[hYu@5cpS%q!!3BuMt<,6
Q'IKTOog`1Q1C+?MCo%g!3Q;'#Y^6LPQR,5QB^Zuj-'P0PEYR%!f/H3`W4!Y!XCl+o5t.YG'.iREVseY
EcZDIo5t.VCaB4T!:Kmh$ZX_hh?;Zkf[%U^_un*/gYDDW!mj==o)P0Y!XDAVoTKKDPDk!4Df<p>"*B-V
Pk1(?MCo%S!5\^;#Y^6MPQ[89O+r,7H2)XfH[gm8Q1L4ALb8h(!:'Ud#<ctsFTco2@mi#q-j1tR9PeqF
FTZ]$,m<rBPlLjnERj[;!SG?kY0*XDZ-D%ph?)%l"jR+^!!3BuMtE28P`'N`fhh69!a9o4o9065/d/!N
k5YPh9TA\/"-npn@`hsXB7Z6;PQHXn"T&1]!!3BgDY8,TFa%7E$H`PS%Q\M"FTZ]$,m;Wr\c;d>ERj[;
!m\'Kh5ThA"/`NXh=TP*cpS&:!94%\#>:!HP6-/7:<HB89jia@oTKE8/d).SN;s"c9TAk4qih/6BOAni
!af]%o99<4/d0`*[K$@64`9k6!^@+ui<SWQ!X06>oQ:7WCaB4d!8dbX$ZX_hh?)KRX3%=CW3+M(o\KSp
!CR*L!!3BuMuAk8P6@,4F]D5[:]aKoK_(B/MCo%c!3uS+#Y^6NPQR27I:;2Ek$S6sA;Bc@!f/H3YlNMY
!XCl+olUC]E%hS&ap/"Q$;5I7FTlo1F)3-*MZ<edERj^<!o;&&af,??ZIJL&!mj==h>j\Y!XDAVoofNC
P'L#&ktpA9!`)pPo9065/d0/o`W-&G9TA_0"-o(#B$ar^?ijYJMY!&6Lb8h$!:Kmh#<cttFTco/3!ol4
#6G)=;=nu5F)3-*o)P0Y!Xj"uoA0Pu\uPb/c)CcE_V+P;!mj==aoK9Y!XDAVoTKEBL1=(Wekc!8!`Nop
o9065/d.jJlMptl9TA\/"-n[]@EW$\@:4;@o99<4/d1nKPlLjj4`9n7!d@HXrs-aP!s]&UAFt!HF)3-*
c2bQY!Xj"uoA0T)d_<*BZLb@'[DUSdh?)%l"f24^!!3BuMtE29P`gT2?-HIR>],AgP6-Uo"T&1]!!3F"
NV/M=Pa.GgG0=V%DKq03PQHXn"O[:]!!3BgDY/&SGB$1r&`+&e%g!@j>4Zk=F)3-*W;trY!Xj"un_O<$
f$)VEf%ffP"OKO?!!%uY!XDAVq31]>"-f"0Ls:\WL5:qUnrj-4/d0`*[K$@79TAY."-o+5N8f]\M$&Zq
P*PU&!f/H3XT75Y!XCl+o5t.ZF_Fn%;?Kj$DKk\p!HW&X,m9,+!Xj"urSI2'bMVdF!mj==g&SDY!XDAV
nWW$uk*5A!!fAT5YlNMY!XMJZnW_.\o9B6=!f/H3MZ<e`4`9e4s*)Y4nT=qTCaB5@!3Q;'$ZX_LhU10]
cpS&W!6,!?#>9ujPNe84MCo%&!:Kmh#Y^5VPQHXn"S2V]!!3BgDXDS[FTZ]$,m;?j_>jWFERi"ajk^'c
6j97alMptk98fa4!fAT5pAgHY!XMJZnW^PJ!f/H3c2bQY!XCl+aE?Kb"*89)"Jl+]!!3OJeYq=+cpS'7
!0I6_#>:!JPI-MTMCo%[!4i.3#Y^6%PhhQ*Lb8h0!94%\#<ct(FTli&,m42JN;s"fERjmAYhfH.6j;-A
[K$@698h/\folJp/d/9VhZ*]`9T?!8!/LY."H*6]#<cu'FffcgF)3-*g&SDY!Xj"ueDAa4!mj==YlNMY
!XDAVX-<OH!fAT5MZ<ea9T?!8!f/H3h>j\Y!XCl+fQGVb"*89)"NCG]!!3OJe\L&+h?)%l"e>Y^!!3Bu
Ml;g@MCo&'!1<fg#Y^6FPe<4^Lb8hQ!5\^;#<ctCFlmfKF)3-*T`FBY!Xj"uW87U&6j<;bPlLjj98i>(
\<?uO/d0H"^&S3?9T@,XiKOD"/d/!Nk5YPg4`76A"*89)"T&1]!!3OJeb.e+h?)%l"k!C^!!3BuMp.C@
P6-Uo"K;C]!!3F"NMr'ELb8f1!0$s[#<cu#Fg6&kF)3-*ec<,Y!Xj"ud,*I4!mj==XT75Y!XDAVW074=
!A4M5!!3F"NW#*CPQHXn"PNj]!!3BgDU`g[FTZ]$,m:IQgAh9_ERh,Hrn[_'6j8JK!XDAVW07:?/d1#2
XoJM/9T@\hd?F]g/d0/o`W-&F4`8&Xl?*2MCaB4T!:Kmh$ZX^qh?)%l"nM_^!!3BuMsZ_@P6-Uo"Ng_]
!!3F"NPq(CPQHXn"JGh]!!3BgDQ.a\F)3-*pAgHY!Xj"un_O9&bMDXD!mj==c2bQY!XDAVn<;Oio9A^-
!fAT5V#]ZY!XMJZn<D+]n!!m0/d2%OOT5Ff4`9q8r,p2,n9"hSCaB54!4i.3$ZX_fh>uHhh;%JS!SuQ$
h?)%l"fVL^!!3BuMt3&4P`s:R!L&c<P6?aq"98F]!!3F"NVSh8PQ@&6bEDskQ1:(?Lb8h]!4Dk/#<ctq
FTH]/iGn1'!HWJUFTZ]$,m:=MhZ*]cERj[;"5V__dEKo<dFd7Fh>kn'6j8JK!XDAVrKHu>!gJe'b^T\C
KSf5_!fAT5g&SDY!XMJZo99?BP)>%WJ`qXdK7o9TPQHXn"L.s]!!3BgDY%uQGAL>Mbs):q86g6/FTlo1
F)3-*MZ<edERj^<"PqeW[]I]P"K]5agYMMY!mj==h>j\Y!XDAVoTKEBOF1A5l;?S="B8oaP*GU&!fAT5
`W4!Y!XMJZoTTKDP(7C[dUE#]"ClG,PEkd)!f/H3SH/*Y!XCl+oQ::\Cc`::bQe7W),"snolU@XCaB5U
!1<fg$ZX_gh?)*3VuE[@W<9)r]@c`3!mj==aoK9Y!XDAVo906,>u&pHpJ:rh9kB4RP6-Uo"JGh]!!3F"
NUrA:Lhg@)b[:NZ??)"sPQHXn"SVn]!!3BgDY%uO8J;%-bQe4S"WCb?FTZ]$,m;Kn^&S3BERj^<!o1ku
fW"G@"/rBOh=TP*cpS&6!9X=`#>:!JP6@,4F];/Z:]jQnK9Z"l!fAT5qZ)`Y!XMJZoooQDPCR/b?ijYI
L\$`3Lb8hY!4i.3#<cttFTco-1C49A#OVfu"q+)rFTZ]$,m:1IirB,gERj^<!o1o"af,B@YLMD#h?;1n
"TSO^!!3BuMtrS8P6@,4GZIV_:]aKrKCb9.MCo%_!4Dk/#Y^6NPQI,6I,A>s?ijVEL\$`3Lb8h4!8dbX
#<cttFTco-1'n0-#6P/=969cK!HW&X,m9,+!Xj"urSI>+!o;83af,??]@ZZ2!mj==g&SDY!XDAVoTKBA
JR217:ZY@QArH8E!fAT5YlNMY!XMJZoTTEBLht1@!b$,0p6>Q@!f/H3MZ<e`4`9n7"*[<L#Kd5P#9.%B
FTZ]$,m<')XoJM2ERj[;"5:r+YNi:NXoko=dG4?M!mj==`W4!Y!XDAVoTKEBO*P&5dT63F!b-bEo9065
/d.^Fmf3Cp9TA\/"I5+$Ch:h$"(uS/POk"?Lb8i%!1<fg#<ctsFU!&)3YMl.$I/t\$l;NUoQ:7WCaB5,
!5\^;$ZX_fh?2Tac-+_]prWZ]cIh[D!mj==T`FBY!XDAVo909@OG8,,GQN);MXcl3MCo&+!0mNc#Y^6L
PQ@&4!fM_^c@5nIKoY\f!f/H3c2bQY!XCl+o5t.ZDH/mS2Y8m02aL_jo5t.VCaB4\!9X=`$ZX_eh>uNj
bMVgG!mj==qZ)`Y!XDAVoooB=aHQ[inWO$3/d0T&\c;d;9TAV-gQh/knWX*2/d/-RirB,c4`9h5!dAj7
bBEr4noY+WCaB2a!0$s[$ZX_mhQYi<cpS&g!4Dk/#>:!%PM)-$MCo%6!8dbX#Y^5VPQ6L?/d.(4!XCl+
rH55b"*89)"PNj]!!3OJe^WI+h?)%l"gJ'^!!3BuMlW'@P6-Uo"H*6]#Y^5VPQHXn"Ps-]!!3BgDV0*[
FTZ]$,m;3f`W-&JERhk]l.uKg6j9+]mf3Co98fa4!fAT5o)P0Y!XMJZm?G8J!f/H3aoK9Y!XCl+`-(3b
"*89)"JGh]!!3OJeYq=+cpS'3!0mNc#>:!FPIQeXMCo%W!58F7#Y^6!Pi7i.Lb8h,!9X=`#<ct(FTZ]$
,m=)FOT5FjERja=[,(l26j;!=\c;d:98h#Xh3.nt/d/-RirB,d9T?!8"GeZ5!!%uY!XCl+q/rrb"*89)
"P*R]!!3OJe^31+h?)%l"g%d^!!3BuMl;g>M?,=4MZ<ea9TB"8XHWdB/d0l.Z2aq24`8bleo_(9CaB4h
!8@JT$ZX^thYu@5cpS%q!!3BuMl;g@MCo%g!3Q;'#Y^61PgP]sLb8hM!6,!?#<ct?Fm=)OF)3-*SH/*Y
!Xj"uW87U&6j</^R/d9n98i2$]TWDS/d0;s_>jWC9T?uTjcfh&/d.jJlMptk4`76A"*89)"SVn]!!3OJ
ea_M+h?)%l"jR+^!!3BuMo_+@P6-Uo"Jl+]!!3F"NMr'CLb8i-!0I6_#<cttFgZ>oF)3-*dK$iY!Xj"u
bhh14!mj==W;trY!XDAVW07@A/d).SN;s"c9TAk4Y`o3F/d0`*[K$@64`8Vhg3!L=CaB4d!8dbX$ZX^q
h>kn'6j8JK!XDAVrKF=H!fAT5g&SDY!XMJZe<JLJ!f/H3YlNMY!XCl+X*"SgF`V@F"H*6]$ZX^qh?)%l
"l96^!!3BuMqF6@P6-Uo"NCG]!!3F"NPLeCPQHXn"J#P]!!3BgDQ.a\F)3-*o)P0Y!Xj"uo%sB%s4klS
!8[2%!mj==aoK9Y!XDAVnrqOeop#!1!fAT5T`FBY!XMJZns%1[nWX*2/d1nKPlLjj4`9h5!-cM.noY%U
CaB50!58F7$ZX_fh?)Ndf@ngIecOLYh=BD(cpS&6!9X=`#>:!GP6$i+bD-+UNq&;7MCo&/!0I6_#Y^6N
Pl?mKPE:dJM#iNsnWX*2/d0T&\c;d:4`9h5!chgRhG`lA!a98Yo5t.VCaB4`!94%\$ZX_hh?;Zid_W?8
ZNI\UfA,uS"OKO?!!%uY!XDAVq31`?"I,%$DdLXl"(H8-Pk1(?MCo%_!4Dk/#Y^6MPQ[88M0!LmC?oU9
Bmbj0PQHXn"K_[]!!3BgDY/&SGAp;%'?h!h'J*GZFTHQ"!@7l,!!3OJec"A!h>u-;b,5B>WP[?Eo\KYr
6j;9EZ2aq298iG+"-eOO:?>=8:]sNhClahQP6-Uo"L.s]!!3F"NV&G;Q&BQfb?Y6W@!RctpQYZA!f/H3
MZ<e`4`9n7!d@W^a9D\lAU!fi"*89)"Ps-]!!3OJeb%]#h9)n!l)E[A"/iERh=TP*cpS&W!6,!?#>:!I
P66tm<DV"=q+q)nL@^T1MCo%&!:Kmh#Y^6MPQR,!A7*Je!aTJqo99<4/d1bGR/d9n4`9n7"*-:,#6"kP
#6P/>:il;P"*89)"Ng_]!!3OJeb%]"grHJFWV3:nW3+J'o\KYr6j97alMptk98iJ,"I,$k<):Y5!`;pM
o9065/d1nKPlLjk9TA_0"-o'uA'&*[?=eo`PQHXn"O7"]!!3BgDY8,TGAo5B#2'7P#6P/;969cK"*89)
"Jl+]!!3OJeaqVucEbQk"/iTYh=TP*cpS'7!0I6_#>:!JP67#4Hs+Qe"&<0XPk:.@MCo%[!4i.3#Y^6L
PQQSO?sqi"mpQ<+?YteoPQHXn"K;C]!!3BgDY%uQ5Rmu&bQe4S"qt,2FTli&,m42JN;s"fERjmAqq_D-
`3@Cb"1$/+h=TP*cpS&g!4Dk/#>:!IP67&-EEM0tlV[ja=aZ<ooTK?6/d/9VhZ*]`9TA\/"I5$mAn0%o
"Cu.pP*Ya)!/LY."H*6]#<cu'Fng(]G@;p/b6S4W%Q\EMolU@XCaB5<!3uS+$ZX_fh?)BS_WJSq^&l4"
g[a2&cpS&B!8@JT#>:!HP6@,1HZ*]EC]\L,OnFq;P6-Uo"H*6]#Y^6LPQ[83K6DC^ErpZ@P4Fh=Lb8he
!3Q;'#<ctrFTcnu4XD9;+QFRG-qA1HFTZ]$,m;3f`W-&JERjO7dbXfV!SlT&h?)%l"e>Y^!!3BuMt3&5
Pa%BUP5gd:P6-Uo"S2V]!!3F"NUi;:Q'IStPKoBlQ1:(?Lb8hQ!5\^;#<ctqFTQc2F4PC+ErU@SFTZ]$
,m9nAlMptoERh#E!mj==pAgHY!XDAVnWUJH!fAT5c2bQY!XMJZaHYYJ!f/H3V#]ZY!XCl+WHA;aCaB5]
!0I6_$ZX_ihR),@cpS&c!4i.3#>:!!PMME(MCo%2!94%\#Y^5VPQZdp"98F]!!3BgDY\F[FTZ]$,m;d!
[K$@:ERiFmg"leW6j9[mhZ*]_98fa4!/^e0"H*6]#Y^6VPcU)NLb8ha!3uS+#<ctSFk1[;F)3-*YlNMY
!Xj"uX5<j4!mj==MZ<e`98fa4!fAT5h>j\Y!XMJZfTadJ!f/H3`W4!Y!XCl+^iepb"*89)"J#P]!!3OJ
eYq=+cpS'/!1<fg#>:!BPJ!(\MCo%S!5\^;#Y^5rPi\,2Lb8h(!:'Ud#<ct(FTZ]$,m<rBPlLjnERjU9
\D@;66j:j9^&S3>98glTiKF>#/d/!Nk5YPh9T?!8!f/H3qZ)`Y!XCl+ol[Zb"*89)"O[:]!!3OJe]cn+
h?)%l"fVL^!!3BuMl;gBMCo#3!0$s[#Y^6RPd$ARLb8h]!4Dk/#<ctOFkUs?F)3-*XT75Y!Xj"uW87O$
!CR*L!!3BuMuAj@P6-Uo"PNj]!!3F"NRX3CPQHXn"L.s]!!3BgDQ@m`F`hbA,m9,+!Xj"uW87U&6j;EI
XoJM.98hGdd?=Wh/d0/o`W-&G9T?iPl')7*/d.^Fmf3Co4`76A"*89)"S2V]!!3OJea;5+h?)%l"j-h^
!!3BuMo:h@P6-Uo"JGh]!!3F"NMr'CLb8i)!0mNc#<ctpFh)VsF)3-*c2bQY!Xj"uaPPn4!mj==V#]ZY
!XDAVW07:?/d2%OOT5Fg9TA_0[$1WJ/d0T&\c;d:4`8JdhK8pACaB4`!94%\$ZX^qh?;1n"TSO^!!3Bu
MtrR@P6-Uo"P*R]!!3F"NR3pCPQHXn"K_[]!!3BgDQ.aZF)1k'"H*6]$ZX_qhQ5Q8cpS&k!3uS+#>:!)
PLYiuMCo%:!8@JT#Y^5YPl?mKLb8gg!!3BgDQ.a\F)3-*h>j\Y!Xj"uf\Y$4!mj==`W4!Y!XDAV^m"#H
!fAT5SH/*Y!XMJZW0@@>/d1bGR/d9n4`9Y0]laEuCaB5,!5\^;$ZX_8hW<SqcpS&2!:'Ud#>9uRP6-Uo
"SVn]!!3F"NU`7CPQHXn"O7"]!!3BgDTHt[FTZ]$,m:%Ek5YPkERiXss52A`!mj==qZ)`Y!XDAVoonC!
s-;,u!fAT5dK$iY!XMJZes-2uq39^"!f/H3W;trY!XCl+eoh"9eo_.;CaB2a!0$s[$ZX_mhVd5ohqQGu
e_f!8!mj==ec<,Y!XDAVfTQQ*ObJ@FQ'7EbP6-Uo"K_[]!!3F"NS'I!PEql<RZl?f!/LY."H*6]#<cu'
Fkh*CG'.Y:F*?2Y"*89)"PNj]!!3OJe_/d^hp@a/AcdLog=Y6`cpS&B!8@JT#>:!.P6[A-B2hf9FcY:@
rf[D@/d.(4!XMJZfou`*T?Gm>e?bLoPQHXn"Ps-]!!3BgDV9.4Fp;hG'b;QpFP1d=F)3-*`W4!Y!Xj"u
g"ltgN]e!`+(N%ShW`kucpS&.!:Kmh#>:!.P6[.Y5;+TD;g?rY!fAT5o)P0Y!XMJZm?I"&#FE`db/qu]
Z.P9BLb8hQ!5\^;#<ctXFTQY?!WE'"%Uo!Pk&gcICaB4X!:'Ud$ZX_Nh?2`R8e1h,!udBRhqHogcpS'3
!0mNc#>:!FPNn>=Q[2.R.kE2)A;lf-P6-Uo"O7"]!!3F"NS9U!Of[-Url>2dbaOalPi7i.Lb8h,!9X=`
#<ctYFTQbt"8i-#203rqFTZ]$,m=)FOT5FjERja=k2$1"XYfq^!drDQg>2nX6j;!=\c;d:98hMf".F0k
/H.4'.9q[orfc0%!fAT5W;trY!XMJZg6;Z#][H`!!n<d)g6;_r/d).SN;s"b4`:(<icP9G;>U=p+)c>W
FTZ]$,m;d![K$@:ERie""6-mV$iUG6&W"s;hqHogcpS&>!8dbX#>:!/P7!b&67aZ>/1b7hQ.hE%M?,=4
MZ<ea9TB"8hNS)'Z.8fo"3SrYPM26&Lb8ha!3uS+#<ctYFTQbm!WE'%!!"QkG2%-AF)3-*YlNMY!Xj"u
g>3.neTW>I#nKY7h;$ldh?)%l"cE?^#>:!/P6mM2>r=)\.nO`FfolJp/d1#2XoJM/9T@bj!L'#XeBc4W
b14)UPQHXn"NCG]!!3BgDVB47G&eZ&!!*1%n9+#="*89)"J#P]!!3OJe_/dai5'kA9k1!Lf\Q\V6j</^
R/d9n98i2$m?7g@HX065;eq5TfolJp/d0;s_>jWC9T@_i#a;@>f[\TkS<NW1jcfh&/d.jJlMptk4`8qq
#^0`&"p5?*Ed$/Z"*89)"SVn]!!3OJea_M[h?Dia\[9?2fA6SU6j:j9^&S3>98hGd#*jscE.!e5plj[#
!fAT5V#]ZY!XMJZfTZT(T=2D5QBTsc!f/H3qZ)`Y!XCl+ol]><#'Ori<+g>sfl[C<CaB54!4i.3$ZX_K
h?2Zoio0ajh;/4[6j9OiirB,c98hDc"I5FEQ^-0d"H"f7!!%uY!XMJZq39d$"I"q/Od"C]!f/H3ec<,Y
!XCl+f6%(:rc\EeF`lD\"*89)"K_[]!!3OJeYq=)ciHN<MZ<e`98ib4XHN^C/d0l.Z2aq39T@PdeW^,k
/d/EZgAh9[4`7<C"a+s/CaB4B!!3OJeYq=+cpS&o!3Q;'#>:!-PL5QqMCo%O!6,!?#Y^5nPj+D6Lb8h$
!:Kmh#<ct(FTZ]$,m<f>R/d9rERjI5]\W_:6j:^5_>jWB98g`Pjc]b'/d.jJlMptl9T?!8!f/H3pAgHY
!XCl+nTDBb"*89)"O7"]!!3OJe]?V+h?)%l"f24^!!3BuMl;g@MCo&/!0I6_#Y^6NPdHYVLb8hY!4i.3
#<ctKFl%6CF)3-*W;trY!Xj"uW87[(6j3PjN;s"b98iV0Y`f-G/d0`*[K$@79T@D`fouPo/d/9VhZ*]_
4`76A!HW&X,m9,+!Xj"urSFX4!mj==g&SDY!XDAVe<AFH!fAT5YlNMY!XMJZX-EUJ!f/H3MZ<e`4`76A
"*89)"Ps-]!!3OJe_&a+h?)%l"i^P^!!3BuMq=0mPlI$:PNe84MCo%&!:Kmh#Y^60Pl6luPQHXn"S2V]
!!3BgDXDT4FoQ[cHIm9AF)3-*aoK9Y!Xj"ug>3%ihVR#?g"ZM^p"nfe!mj==T`FBY!XDAVg62f*P`q/_
LQ.@ZfTQAo/d1nKPlLjk9TAS,lBDU@Q'@;gMMdR^Qe@T)Lb8hU!58F7#<ctYFU<89F(JEP?#4_1q/t\>
"*89)"Jl+]!!3OJe_8jfh:Kf_['R9[dG*O6gYN"Y6j<GfOT5Ff98iJ,kE?==P([XS9hSAmHB",QgQM\r
/d0T&\c;d;9T@ek%[E64EFDmI>%r>DPa.Jth37ts/d/-RirB,c4`9"s%!Q_a+U\DU#8B%)Fa)V`"`nK+
"98F]!!3OJebS(_h?DfkbcdFore^lBU;,=:h;$igcpS&g!4Dk/#>:!1P7*V:E(2,h&J5]r1L(!7P*Fac
!fAT5XT75Y!XMJZglr;6O*"8]/1W5#1IPc.Pa1$g!/LY."H*6]#<cu'Fl7BEG@r3'q>^U-8of.3FTZ]$
,m;p%Z2aq6ERik$#Md=kMi!=LM[,,sLlo$phVI#E!mj==YlNMY!XDAVh3/D7NbC$X%M9<d&J#Ek8qE4k
i04/(!fAT5MZ<ea9T@km&=&An5V"?9.k</%.Pb"WP*Ojf!f/H3h>j\Y!XCl+h/rjEBGgdMq#CL"7WN_0
FTZ]$,m;3f`W-&JERiq&"l8"YS;N4#MZeos\CfX1hW`kucpS&.!:Kmh#>:!3P6I25E@MP6q@WoA'iKdN
h3.nt/d1bGR/d9o9TAG(nrs<CQ?#5A.f(Xu/1k%bQ/.Z+Lb8hQ!5\^;#<ct]FTQc0-1q6>#?Q-FFlmfK
F)3-*T`FBY!Xj"uh;/7dX,Mr2MZem#b2(n1h?)%l"nr"^!!3BuMt*#!P6@&'58+Y(&d/^bClah;P6-Uo
"O7"]!!3F"NS]m%Q\nNjp+$5&FHVpgPi7i.Lb8h,!9X=`#<ct]FTQhd!V??n,A_S]FTZ]$,m=)FOT5Fj
ERja=l.uK_Q&>9n",O59h;6uicpS&c!4i.3#>:!3P67%c+VFD\!Y7kY!0l?(!fAT5W;trY!XMJZhNS),
D`@>>""7-,Q/7`.Lb8f1!0$s[#<cu#FlmfIH6;_Y!WuMJhfT$BCaB58!4Dk/$ZX_Rh?2QBO,E[i",i#+
eD8s_cpS&>!8dbX#>:!4P6@,4:`0l=&crUoJ)-:gM?,=4MZ<ea9TB"8j-0Y2P?fg6.fq.bJ_cOlLb8ha
!3uS+#<ct^FTQc+#PeAr!!#:@FTZ]$,m:IQgAh9_ERiq&"5Br;MY;r1MNcECiSORj!mj==MZ<e`98h\k
"I+m5'GL0Q!tcVuP2;B(MCo%g!3Q;'#Y^68PQmD5;(X7J/,(Oq1O52@PQHXn"NCG]!!3BgDVoR<G@CXE
!!+cop3#YC"*89)"J#P]!!3OJe_]-bgT-9jp59'2P0Vk=hqeF]6j</^R/d9n98i2$o909@M`qgI&d/^a
F-2^EP6-Uo"Ng_]!!3F"NSfs&Q&e]nod^.r1O>7Mqip3,!f/H3T`FBY!XCl+hfT!E@0,p!!\SG9i,o-C
CaB5Y!0mNc$ZX_ehX95&h6Dutp59'1QIF[GhqeF]6j:j9^&S3>98h\k"I,!=()-BS"qVu)PE_8piKF>#
/d/!Nk5YPh9T@qo"I5$J/h6QF"=c?XPa1-j!f/H3qZ)`Y!XCl+ol]SC!dA>\nc/_MF*HPb"*89)"O[:]
!!3OJe_T'`^ljTKMZS^3f\PBccpS&:!94%\#>:!3P67%T)\McV!Y.2Ch3.u!/d).SN;s"c9TAk4k*,q4
A2Em/!\$Zph37ts/d0`*[K$@64`9,!!I#(I!<)ru9\smoF)3-*XT75Y!Xj"uh;/1[T(IpB^Y@T$h>kn'
6j8JK!XDAVrKH6)!gS*aoF_41Ng/Ca!fAT5g&SDY!XMJZhNS,.Hp0%W/,^t$.OnthQ/7`,Lb8h8!8@JT
#<ct]FTHkKo)Jh%@s?mS"a+s/CaB4B!!3OJe_T'agq/]*pko31UXS#T!mj==h>j\Y!XDAVhNJ,-NE7&2
')<.B&2SZth3.nt/d0/o`W-&G9T@nn"I5*U0e)oK"=bigJWf\jl')7*/d.^Fmf3Co4`9,!!dA5`oDenT
Eo(p@F)3-*o)P0Y!Xj"umG@?h"P9l>M2M4h"cA/+akY_.h?)%l"j-h^!!3BuMqsR#P_2IB&JP'T"VD:p
CQOeVPN@u0MCo%*!:'Ud#Y^66PQd>+;_TXMq^Vdu4*-IJh37ts/d1nKPlLjj4`9e4m<&JV8-8Jb![29%
hK8pACaB50!58F7$ZX_Oh?2<:Q](cu"-01uh##seh?)%l"f24^!!3BuMqjL*P^cLR&eGWe&.fX:CQI56
!fAT5qZ)`Y!XMJZop"[)"I4O@3@aqU""lu\O5#m#Lb8hY!4i.3#<ct[FTQbP#5A0#+(]S;hK8pACaB4`
!94%\$ZX_Oh@&/ma0DA,R%:1gdG3I4"OKO?!!%uY!XDAVq30j&$^?E[8MMM:.m$dYOkQ!#MCo%_!4Dk/
#Y^64PR<\2D,`ka3'BrDHiT8^PQHXn"K_[]!!3BgDVK:9G>T:]r;Zp#$TDhTFTHQ"!@7l,!!3OJec"@\
h?i#kdEB\Xe_As:g>2nX6j;9EZ2aq298hMf"dG+)G]7O'F+B16PhM<&MCo%:!8@JT#Y^63PR<\=Kme&`
G_(p=Q/.](PQHXn"H*6]#<ctYFUE>1:c0OD/4*ceGM@6BF)3-*h>j\Y!Xj"ug"l_b!8[V1s4u>a!mj==
`W4!Y!XDAVfolZ*P*M5pP`h=$PNe84MCo%&!:Kmh#Y^62PR!J?Q'@MuQ^-3f!f/H3o)P0Y!XCl+m<.f=
#BtH>F`hnRH.d<BF)3-*aoK9Y!Xj"u`89V4!mj==T`FBY!XDAVW07:?/d1nKPlLjk9TAS,\<I&N/d0H"
^&S3>4`8>`icP?ECaB4\!9X=`$ZX^qh?)%l"oA:^!!3BuMtN:@P6-Uo"O[:]!!3F"NQdXCPQHXn"K;C]
!!3BgDQ.a^F)3-*!!%uY!Xj"uq;/@4!mj==ec<,Y!XDAVd$*.H!fAT5XT75Y!XMJZW0@:<!A4M5!!3Bg
DZ+^[FTZ]$,m;p%Z2aq6ERiRqe_UAS6j9gqgAh9[98fj7rf[D@/d.(4!XMJZW0@@>/d1#2XoJM.4`8np
dWGY5CaB5(!6,!?$ZX_4hW`kucpS&.!:Kmh#>9uRP6-Uo"S2V]!!3F"NU;tCPQHXn"Ng_]!!3BgDT$\[
FTZ]$,m9nAlMptoERh#E!mj==pAgHY!XDAVnWUJH!fAT5c2bQY!XMJZaHYYJ!f/H3V#]ZY!XCl+WHA;a
CaB5]!0I6_$ZX_ihR),@cpS&c!4i.3#>:!!PMME(MCo%2!94%\#Y^5VPQZdp"98F]!!3BgDY\F[FTZ]$
,m;d![K$@:ERiFmg"leW6j9[mhZ*]_98fa4!/^e0"H*6]#Y^6VPcU)NLb8ha!3uS+#<ctSFk1[;F)3-*
YlNMY!Xj"uX5<j4!mj==MZ<e`98fa4!fAT5h>j\Y!XMJZfTadJ!f/H3`W4!Y!XCl+^iepb"*89)"J#P]
!!3OJeYq=+cpS'/!1<fg#>:!BPJ!(\MCo%S!5\^;#Y^5rPi\,2Lb8h(!:'Ud#<ct(FTZ]$,m<rBPlLjn
ERjU9\D@;66j:j9^&S3>98glTiKF>#/d/!Nk5YPh9T?!8!f/H3qZ)`Y!XCl+ol[Zb"*89)"O[:]!!3OJ
e]cn+h?)%l"fVL^!!3BuMl;gBMCo#3!0$s[#Y^6RPd$ARLb8h]!4Dk/#<ctOFkUs?F)3-*XT75Y!Xj"u
W87O$!CR*L!!3BuMuAj@P6-Uo"PNj]!!3F"NRX3CPQHXn"L.s]!!3BgDQ@m`F`hbA,m9,+!Xj"uW87U&
6j;EIXoJM.98hGdd?=Wh/d0/o`W-&G9T?iPl')7*/d.^Fmf3Co4`76A"*89)"S2V]!!3OJea;5+h?)%l
"j-h^!!3BuMo:h@P6-Uo"JGh]!!3F"NMr'CLb8i)!0mNc#<ctpFh)VsF)3-*c2bQY!Xj"uaPPn4!mj==
V#]ZY!XDAVW07:?/d2%OOT5Fg9TA_0[$1WJ/d0T&\c;d:4`8JdhK8pACaB4`!94%\$ZX^qh?;1n"TSO^
!!3BuMtrR@P6-Uo"P*R]!!3F"NR3pCPQHXn"K_[]!!3BgDQ.aZF)1k'"H*6]$ZX_qhQ5Q8cpS&k!3uS+
#>:!)PLYiuMCo%:!8@JT#Y^5YPl?mKLb8gg!!3BgDQ.a\F)3-*h>j\Y!Xj&!f\Y$4!msC>`W4!Y!s_M\
P1c&rPjah$P66u*/d.^Fmf3Cp9oR_hqj#ct!fJZ6o)P0Y!s^u-Epe#9Er^@[G5ud=Es$H#,m;?j_>jWF
CsL_b!8%,'s4I"qjjjLT5m<q^lMptk8W;>_!0-l<s,G]l!er3.pAgHY!XMAPnW2pqs-!;D!0Yuq!ei0.
c2bQY!XC`%fl@%4r,;[VDu"D3E<9l!"Jl+]!!3<Q:>/PI:iihUrkSZNNa(16!_aL5qZ)`Y!Ws>toetqj
"#NMXC]8,PC/R,Pg,9!e&-:2Z\c;d6*AuP0"#`\`F8g7`F':X`r\rXl!](GiW;trY!Ws5gg+3=U-6OH1
+p&i2.+p-S-P$7Y!/pmY"UOo1iX#\m23Fp<Wrf8+);,;s#QiNV[/^40#20=b"rfm+r_`el/.L8<!<iP+
!8[\V!s[H_!sTcE@K'^;@5JPK"TS`,!f6mX!s\],h?3ob!sJr/#QP(\"9AZ.f`6d-">Gb3WMp!!V-"7_
!3cG)(.(dq:BF3<#i#E3!8.>R)bXT<@00[g#dXM`!!!'$":"i1!X/Z,RfJoX!\fS3ri#sq=V1*'JcN^h
!Z"*sr_NYk-jdrpJcP0<!ZOmCra5e41'sQQQN.'g":"i1!X/Z,o`0RD^]4EiN2Z`T!i9$2bQ*4pkl:c#
6;@GU!_t-MUB$JX!ZOmCra5e41(!aVJcNF`!WiK/rW`K.!s-aKJcOm4!\fS3ri#sq=V.J2NrT4s6;@GU
!_t-Mr;_EL\,ZRL:1=-0!aIJee,Y(#i;`o\":"i1!X/Z,WrS%X!\fS3ri#sq=V-/bZiC.C6;@GU!_t-M
fDpL'h#IKq:1=-0!aIJeY5j=X"9J]1#6t>9"Tnd[!3cG)0T;t0W</o!&DR8;!8.>R(.(ap:]aB?$*sVa
!!!r=:1=-0!aIJeRfJoX!WiK/rW`K.!s.olJcN^h!\fS3ri#sq=V/XSJcP0<!Z"*sr_NYk-jcLGQN.(+
:1=-0!aIJeo`0RD^]4E;":"i1!X/Z,bQ*4pkl:c=N2Z`T!i9$2UB$JX!Z"*sr_NYk-jf\LJcNF`!ZOmC
ra5e41'u;-JcOm4!WiK/rW`K.!s,;"NrT58N2Z`T!i9$2r;_EL\,ZRG6;@GU!_t-Me,Y(#i;`ou:1=-0
!aIJeWrS%X!WiK/rW`K.!s*uRZiC.]N2Z`T!i9$2fDpL'h#IKl6;@GU!_t-MY5j=X"<1*E?sj(E>VZV?
!3cG)!X&`,#6G&2!Sd[,!8.>R0T;t0W</o!&@2@h!!!c86;@GU!_t-MRfJoX!ZOmCra5e41(!INJcN^h
!WiK/rW`K.!s-ICJcP0<!\fS3ri#sq=V.2*QN.(&6;@GU!_t-Mo`0RD^]4ET:1=-0!aIJebQ*4pkl:bd
":"i1!X/Z,UB$JX!\fS3ri#sq=V1B/JcNF`!Z"*sr_NYk-je6#JcOm4!ZOmCra5e41'siYNrT4_":"i1
!X/Z,r;_EL\,ZRaN2Z`T!i9$2e,Y(#i;`op6;@GU!_t-MWrS%X!ZOmCra5e41'rO4ZiC./":"i1!X/Z,
fDpL'h#IL1N2Z`T!i9$2Y5j=X";X<u:f%6j:+-F'!3cG))bsi@?ijRg$/>N4!8.>R!X&`,#6G&2!ODcY
!!"\RN2Z`T!i9$2RfJoX!Z"*sr_NYk-jfDDJcN^h!ZOmCra5e41'u#%JcP0<!WiK/rW`K.!s,"oQN.(@
N2Z`T!i9$2o`0RD^]4EO6;@GU!_t-MbQ*4pkl:c(:1=-0!aIJeUB$JX!WiK/rW`K.!s/2tJcNF`!\fS3
ri#sq=V/p[JcOm4!Z"*sr_NYk-jcdONrT5#:1=-0!aIJer;_EL\,ZR3":"i1!X/Z,e,Y(#i;`p5N2Z`T
!i9$2WrS%X!Z"*sr_NYk-jbJ*ZiC.H:1=-0!aIJefDpL'h#IKX":"i1!X/Z,Y5j=X">Ge5WMp!!V-+@a
!3cG)(.(ap:]aB?$/>N4!8.>R)bsi@?ijRg$*sVa!!!'$":"i1!X/Z,RfJoX!\fS3ri#sq=V1*'JcN^h
!Z"*sr_NYk-jdrpJcP0<!ZOmCra5e41'sQQQN.'g":"i1!X/Z,o`0RD^]4EiN2Z`T!i9$2bQ*4pkl:c#
6;@GU!_t-MUB$JX!ZOmCra5e41(!aVJcNF`!WiK/rW`K.!s-aKJcOm4!\fS3ri#sq=V.J2NrT4s6;@GU
!_t-Mr;_EL\,ZRL:1=-0!aIJee,Y(#i;`o\":"i1!X/Z,WrS%X!\fS3ri#sq=V-/bZiC.C6;@GU!_t-M
fDpL'h#IKq:1=-0!aIJeY5j=X"9J]1#6t>9"Tnd[!3cG)0T;t0W</o!&DR8;!8.>R(.(ap:]aB?$*sVa
!!!r=:1=-0!aIJeRfJoX!WiK/rW`K.!s.olJcN^h!\fS3ri#sq=V/XSJcP0<!Z"*sr_NYk-jcLGQN.(+
:1=-0!aIJeo`0RD^]4E;":"i1!X/Z,bQ*4pkl:c=N2Z`T!i9$2UB$JX!Z"*sr_NYk-jf\LJcNF`!ZOmC
ra5e41'u;-JcOm4!WiK/rW`K.!s,;"NrT58N2Z`T!i9$2r;_EL\,ZRG6;@GU!_t-Me,Y(#i;`ou:1=-0
!aIJeWrS%X!WiK/rW`K.!s*uRZiC.]N2Z`T!i9$2fDpL'h#IKl6;@GU!_t-MY5j=X"<1*E?sj(E>VZV?
!3cG)!X&`,#6G&2!Sd[,!8.>R0T;t0W</o!&@2@h!!!c86;@GU!_t-MRfJoX!ZOmCra5e41(!INJcN^h
!WiK/rW`K.!s-ICJcP0<!\fS3ri#sq=V.2*QN.(&6;@GU!_t-Mo`0RD^]4ET:1=-0!aIJebQ*4pkl:bd
":"i1!X/Z,UB$JX!\fS3ri#sq=V1B/JcNF`!Z"*sr_NYk-je6#JcOm4!ZOmCra5e41'siYNrT4_":"i1
!X/Z,r;_EL\,ZRaN2Z`T!i9$2e,Y(#i;`op6;@GU!_t-MWrS%X!ZOmCra5e41'rO4ZiC./":"i1!X/Z,
fDpL'h#IL1N2Z`T!i9$2Y5j=X";X<u:f%6j:+-F'!3cG))bsi@?ijRg$/>N4!8.>R!X&`,#6G&2!ODcY
!!"\RN2Z`T!i9$2RfJoX!Z"*sr_NYk-jfDDJcN^h!ZOmCra5e41'u#%JcP0<!WiK/rW`K.!s,"oQN.(@
N2Z`T!i9$2o`0RD^]4EO6;@GU!_t-MbQ*4pkl:c(:1=-0!aIJeUB$JX!WiK/rW`K.!s/2tJcNF`!\fS3
ri#sq=V/p[JcOm4!Z"*sr_NYk-jcdONrT5#:1=-0!aIJer;_EL\,ZR3":"i1!X/Z,e,Y(#i;`p5N2Z`T
!i9$2WrS%X!Z"*sr_NYk-jbJ*ZiC.H:1=-0!aIJefDpL'h#IKX":"i1!X/Z,Y5j=X!A9B2W<9,s<tL)d
YQ+_?6;me]!_k*Mg]2p+f`2'm;.'<1!ad\hZN,UX!!3-(r<EB-"9Ftl[/^76)C+Mm!Cr.JUB7-$0C^=b
,Qf89'a0Hqh>dTX"9dun!YmU[r^-`O,RWi@!sAc.!TF*8!!33-%K6e'$j%SB;uT_t;D8aJ$ipS6\H%oq
rrN*#!!2ZkJcOO*!tR_4DsD3@G`;T_!fqnQl>?]BAhFDQ!/1CS!=&o2$0hiu$l8aZ!>5e*$3LSB!s61:
XoJP,'-JC^*!%EArA=X4.j+R,nf.`T*Xr4:!.k3&!!E9SDha)4M#iKlr/0cr"Ghnf@i3&_WW3)*$k2A3
!YH(Yr=]/Cr"/6,!Y#J?R/k\9!Y-A%kpl]^r$h[skUHW[+9q97JcLB&VZ6f"3I6M>Ms6-%L3+I;ScI(:
!XK2Fa:\O_%Kl;&JcPQG!Y?\-a=@<@+plBlJcLB&bQ%_H3IHY(MZSZU+85be!;-<o!<s#Da:\O`$3ncU
T)\on&LHTji@=sY,m^pZJcM_L!sKVq1>ahE0`s12J;M@*!f24lj"]7B!\>2kqZ$^#%29Ym(BP9^&H*6c
')rHS(BPEe$ig>*!!396)SI'l*$Ha\e1:2B!\#T>]c.%l)\)rH!<3)Y!o*hW!Q"j"!n@>P!W)iu&5dti
Muo#tMTC\WMMmM/N;eb;IRjbC!!<HQ4$gPF"$S:R&_I`d&crR\2S;9W5s$7mr;Zm+/P>,#fM;QF67p5.
!\>urlVGr)"&VT="oSE%!<]q:!!C+=!!0q>q#g["rW!*5&4`+aWP,54Vk&j*gl(QX!fE,7]Vkq3V3X7B
#m2DC9MaqJe4g$?2]*.J&d&^b6;I#Ec:n[B9h$-,"UPJ^<aB+L@JsU:>tZk&a"%3J<F<dTpL+D:>Z;gK
"9AN*"U2LBh#QU<!!0Y8#6b//!%][TVsLD0W<9)jNf(o9!fE,8o;Tg1#H*"e(DRZK:;]p(:]jKQ)%jq&
!tcJ?:WlT*:^Bil4UVW7(ee;K?isb00.c07j=:9g<+3FI#[q(1%1N@?"U=H$bQe+P_Z0Z<pBSVA#6k>4
!AlWuW5kn1W<9)jNf(o9!fE,8cDg31#H*_)*#KM_:V0F*:H04(kRuhe!tcJ?:V0F*:.5X&"!&C^?FsSI
?VE+(cn"lA!]3kb]3kkN;\0KA!X8ka#N,ge#/^E@!ojO<#7(M<!<F&U?)OX6W<9)jNf*dnb_lO[Oe]Of
!2g+#;%='E$nG(K]MJ]+3#N=X'(lk>&K=,6]MJo0:*p2N%Lt@'?K#;I?isb00.b-o!]3kbk[;qK$"%$l
#6t81!sStB#64u-!6,!=!knp=#71S=!rr<&!Zl3O]VYe-SW8T[Mt)],MNFODV@&o,&cr+7!"LkY:$,.$
9EI'g&]bRe&KF)/lqGi$"&2EE#lOc+&O'E*]j1_F8MD^9.fqJ(?c-1H>mXh>3=>ig!!!$&\cpaelMpnc
\ci*;!W<!#!Y[=\l;#f'!bd=GaGU.XJR)(@:<lT:8M1MSr;Zp##oFl&-2f+l,9@I0a:\Ob'HkCApE]kb
('ja;"9AoM-nN(^!A5q[/*SPe.OZo"/AEY:/1DDCqZ$Wt!pp*:!rrD>!:p<7"9/E!!!30'#K6uE#QkAr
I#,k%!f(qDap@SE!<r]'!!30%"MFm>"UPVJj:^Pe!t>\E!k\U8!r;lt!<VcpbQS%N'IUpO"">Q*"S`/?
"T\`.q>^Qt!!11AJcP3=!!0D+!s1K2M!0cUMZ\`X*s&hN[f?L2"qM3j')<.A%1NH"!8dbW&LGIJ!\#H%
irFZ2JcN+W!s(<'LX_7TMZSTN*0C6V!!<6+$kC>k!XfA=k5^5:!s'#Y.**n?-6il3!.k3&!7q2P)-DR5
L]W)p%I4"G!!<3'$4k5g!tPeF"2Y&<!!3EE-ep-;-itb1"IT7A!.k4K!!<<:/3(d5"#_S:!QG,9!!33*
#2ogP#6P,5!!/VjcN"%J"Uu$c&crUR"S)PE!.k3E!!30(#NZ-P"Tnu6!WeqoaT2>Ab5_VF!!!&n!.k4A
!<3,D!<WB*!!1=EJcO^/!!0J-JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&QN2O~>

%%EndBinary
grestore
np
300.537 174.685 mo
296.037 174.685 li
296.037 174.211 li
300.537 174.211 li
300.537 174.685 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 1.32416 429.032 ]ct
[6 0 0 2 294.018 253.681 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 3 
/M[9 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:+!~>
<~1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.#~>
<~2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!G~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
122.009 422.685 mo
2.00916 422.685 li
2.00916 302.018 li
122.009 302.018 li
122.009 377.893 li
121.905 377.893 li
121.905 382.393 li
122.009 382.393 li
122.009 422.685 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 1.32416 429.032 ]ct
[121.333 0 0 122 .018351 5.6806 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 182 
/H 183 
/M[182 0 0 -183 0 183 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 182 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
^&S38!!3'#$j-S7"U52;#RLhH$k<%Dr=BSO%hB-Y$OR.E"U,#4!s8T)!<MloLB%GX!!*'"!!*!!"Tec/
!sAc+"o8H$#6G)7#Q=r,"98Q'!W`<'rVup!XoQcJ!W`9$rW3!""p"c-!s/T-rWN<-#5nc,#5nc;"pYA:
"U"u3!s/Q*!s/H'iW+Q1JcO^/!W`9%rW3K1!sAc3#7(SA$4I=Pq@EN9&e5E_%L`^P#R:M:"9el0!WW6%
e,ZHJ!W`9%rW)ou"Tec/!sAc+"o8H$#6G)7#Q=r,"98Q'!W`<'rVup!Mu`AJ!W`9$rW3!""p"c-!s/T-
rWN<-#5nc,#5nc;"pYA:"U"u3!s/Q*!s/H'^]8rdMuWhYrW3'%rWE6,#WN2#&JlB.,:+ip2a'T(=(#ZW
E-$2GH$Xa`H?a[YGBIe9?WKfa0eFn(+rV+*%LE@D"9el/!W`>6!7CiK!WiE$!\jf^"U>DC%1Wp^'c7i0
+=/Hh/ho.?2E*TR2`<NN1cI3D0IeCl*#92#&J#9T#R:M9rW33'!WW6%nc50[!!3'!rW*W6"9\o6#mq+N
%MBHi(`OVE-n?Pp0ebC>2)[BQ2`<QO2)[6C.jlJZ().Dp%h/jM"p4o/!<WB'rW0#!JcN7[*ruBD!sA`2
#nRpo,:bQ36V1$O=C#6A@:EVM?XI2K@JaO5A.)s[AnG[hBkqU)EHE(@G'8(RG^4XbH?XFJCgpFA83\jV
,T%!s#Q=i-!WiCs!!E9%!<E3!!>u"E$OmOV'c7l2+X/0Y-RgMo-6sl`-7:/hr$hUpr@8+(/1iJ,0ekH^
1E%u&1c@<M2)I!?.jcJ_)&3\n$4$_:!W`<'!S@Cn!!<6%!<E*#%0He@$kEpb(`OJ;+s\N6-O:qA+s\H[
-7(#;-iPOm.0_7P/1iJ.1&Nd81GgmF3B/rR0et7-,Rkh:(D%/c"p4r.!Wi?&O8sk4hZ+8i!s8Z1$ks^1
1H\*$=']6D?XNe<!af>Dr*fY9lXU!*r*ggZA7]@cCM[m-F`r"UH[9s^G^4U]I<][G?Vj6R,TRI$"Tno1
!WfA&rW*c9!sJr<&/?*(+XAEa.O?Ad+s\H]-RemAqC;%c!%[sr+"Jfk.kE;+0JG7<1c@6L1,1L=2)[EO
0eY"%+W:k%$2su-!<N;8!:Tt#!<N<'!X/i>%i#m"+!`-[,UE:3"skTB-71)fkpZHW$7I;O.4Qo%0/,1=
r\Xj;2)I-I2#]ED1GLC**uPY"#Qt53!WW8n!.k3,!!NB)!sAi?%icuV6;LWi@UEDG?XR;O@aS]dA,]p]
@q9.`BP_X1GC"[dIt)opH[0j]H[TpJ>tI+'(^UBL!s/Mf!6tQX!<E?/$kX9q+X/6^,pX]]-7C;ld4,,H
r[@q".P!%Q/MAe62?#Q82Z>WF1bpjD2`ENF.3BH<$3^P2!Sd\0!!!'!!Y>SE%Mfs+,Uaub+sA-V,pk"d
./kS)-n$Mo.kWM32`<TT3]K)V&N2F$2)[HM0.8"_&IJUC!WiCe!.k4A!"f55"9f,K-8\+f?"75H?!q,N
^gmpb@U`hXAS>juFa8@`It7NJ$@R8IG^4^_D-]Xg"W\-Y"9JV?!!!'!!Y#;@%i$*--RpGf,UOogg+)88
+tG)k.k3&#/hf(>3B0#Z3&rrW2Dm3G3&WH>*uGFm!s&B&_#OK:!"T)2!soGO)'C4Q,9\9X,ppAT+=ANb
-n-Yu0JbXH3BB2_3]T/W2Dd9K2_ca&'Fk<M!WhroJcM2=%fl_7#8/7;7oa#+>[LoKA,9`IA-laT@q94f
EHQPTqL9!(H[9p^IW8[`1)UB%!s.Wdi;`iYrW3E4%M^$1.4-8c-Rl>N!%SF+.k3)&0JkaK3B9(t3=[u,
2)@'I1+F@\$O$S4!Qb<P!<<-&#7VCf+t"Z[+snWakpX\&$R[>N.P3>42E*ZX48_,J1c@-I3\r0+'b(<K
!nRF(!58FA!<WQ@,WSV-@9d/J@a\f=A-ugU@qB=kFa8CbJGOa(I<p0aHY6,/)[QZL!RLfL!<E6.%gNmp
-7:#a-n2)E#V.>S.kNG23&p^o$og1'1,V!B,S^[i!WW3$cN"=S!sT5M+"/HZ+seVQ.-Du`-R^Do0/GLH
q)SsF2E!?J2D--h$jHe7!P/8p!!!&i!94%d!X&fM2,7Ld?!q-BAG'I>@q&nYBlS<DIt7?E$\!GJH$X'n
,nC.\!S%/V!<`fG+=JQ^-7Rq(^+'C=.4H_u0JkdLpc/^@2Dd6K/0>E-!WiD_!;$6u!<NB4'd+hL+seS-
-j(hE-nGHS2E*Yj3XR`#2)Qp,&I/C<!Lj(p!!!&Q!!WK,$6_N1@KKhC@[CU2@q&t\DfpGWJG=U#IX??e
DGi(s"9I6W#lt&1%3$K?+snbO.blKZ.k)r!0/P[K3;>K?2`<EM0-h59!Wh$U#lt)2%Mg07+seT-.&86r
-R^Gt2E*WVpGrR;2)[39'a=[>q>c*I^&[X&#Qb,G2,dsi@:Ga;oje58A7oh*IeA0qI!L$Q8L"HAhZ*o`
!Xfbf-mC#fdji']"XtoP0/kl`3<hE!2D#s\!o<n_!!*B?+!i*X-]f_Z-R^Gt2?5c13X7Mu2)-9c!s+_g
PlM!i#U)cG?"*D:Q"1#,A8678oR?jg"aPK%0FJ!B!!NH5*%)pXXX`-V"=YfQ1-"qe#<4Y!2C9.C!TO.a
!<W`N,U+Sr.&JBq-R^N&2t]3:4#JlS//&3hp&K[E\Gug7"XH`L?XhDn[:BGN@qTq4JFn<pH[0-X#m08i
"p"f;*[i<`M(8HR"Y2)S1H7Ae3<hH"2(B@E!p9Of!<<WM,pXkR.)[M9.Q'.Fof<782Dcs!"P!L(!8IPW
";jX8@'!nhA-6=OBm0&s"FGB!+pI32"9AiL,pqY%Sgjjn.kES<oJm(72DZ]k!rW,d!!E?1)^Q_u.-)cX
.lB?Z3X%T&1b'%=[/bdY"onW-0N_^lM.H9i"Ckt]I=Up="F>2Y#Qa8l"9T;^-7Q_[^+'79.PNh@oJm(7
2DZBV!UKdh!YQb'-hf$C-iu._47kQ;3B&`6"Takg\,ZL0m/R4p5$VOWA<pa.@VU:@o7$diFokVR!U]pi
"W8I3S1<AF"">c]2tK$42_ZN`!VcZh!!<<@,:/F"l6l`^/N#W]3WqDu,R"4Q!1a)i!Ug!j#"Dg+rFCLj
qIBY:C4,Q$!d@oYmf3Fj*@!#@.`3_:.4k!L"#r(a#4DNo"!&L3lmRf@![fQWqE"F5"$&(c#*&\b!!5#\
@bP@_A--4YJFS*jF@cN3!;$6m(*P,i.c`&\.5<gQ3<M5n+9Cs3!Ylh*aXF8>![fZ^ni?k51*H\b!.k3s
!!3R4@CKd\A--=eJb"9lIWH4n!!3BP.IJ[>.KVOi3V,643&1g1!!39K,Glm6-il4fni?h21'l#&JcP<@
!ZtTTQ"8c_!b-8&nUCR\0(AoC%3d7F.]=fu.5EsT3<D/n'_)/'%07Y#KIH=<![f`bni?h41)6_fPQ1b3
=^pr4Jn+plEe3b1!H^0g!!3ZT.B4l?.KV%R3q>943%l';!!3]T-fHJ;-itbN47bK83]Sr4L&epfq#CI4
<aq&!k@=X(Fb0(4!H9LX!!3KL.E!^?.KV%W3q>943%ts7!!3BJ-i5<D./,+j2*:@i!]_nKTE(J^!XqJ,
l=>c_!Gd/]J+nEoJ7BPg!!36=.AA<?.KM.]n2ULs%IjE!"VoZ<Rj\:h3Uf'1.Ll=VJcNLb!X^)TaCMD`
!bQ\-np^alG=*8<!!EE1-7LEr.eG1j3:T!22`)E\nGiXn#U(Y,.)%)1.Q-`W"$AI_%,1c6!8mh[$PP'p
A#NqbA--@cJF\0mJ9F^G)=[\0!s9#Z.GlVB.KDBs3<V9!,S^dY!!<B,&L3Sii@"^U2=W^14>eE#%(Q@j
!!!B/(*+f%L1Kpe"(GqfJan3mE_SbW)=[\1!sAi?+Xt,T]da+5.Q9EZ3<_B!,97L.nGi^r":>S^.J5*D
-j(hI2EUIj"Z\=a*Z,<P!2TZ"$Pja(+[BAqA=6s2@q9J)JFe6mJ:(cn"$f(0)=[\3!sAl7$Q19?Sgr\K
!\5`TnMph52_#mj*>K%Z!;QU""U#,=$lLB@OsoWE!A?D&3X7`+/Kl,V(_!YLMZ<ed(*3Aq!\6uRJn,!p
@q0:unp^alI;MaY5QX//)=[\4!sAl9#6te\.(LhL.K_1M/iW;\!]MhZrZ2+]'b0[5!X/]5rX&]<+"$J*
O=1,]2YB-03Wh>r,out,!>l6+!3H5&$Pjc]*X!K9:1%SlA>Nf?@V'=tIt@9B"Fu#LC/Fgn!^AU]r;cKj
!WrQ2rWr]4#nS((R4@SR"XtoR2E<hk3W:r<0.$N;!Z`!bnGiUo":>#6!soP]-dX9M-j:tH/N#RNof<:=
4#\i=+!(;%!>l73!.k3s!!3ND*W-r^*?Hb!=^o6Yb%(]d@V0S)It@9B"b;)F@8B,b5QX//)=[\.!sAo-
#mU_B&/ulD.Ok6EP:?be.4[)33BHmpr]('=2C^!K*Wd>s%IjE""U#/.$3^qX,UXuhZRFNU"XbfU2**hj
3Wq;l,p"*(*s!2eaoI"nnGiUu(*35m"s"^-1J:q]UL`h(#@_.SDKU>WJG4NuJ:N,nC/mYdq*5!G2];,c
!WrQ2q?[B4#R_7c-7LM#._$r2.4Hc"2Y9!72`WcT0.7tcq&TSX'b0[5!!NB+$2=i2$kjX,-RY*+"t1iH
.kW\<of<@?3]])P-6O<Lq&]VS%&a/j!!3ND*VUTX*?HI^7fun&AS%<@#\.=TB5Vj=It@BEs*t<)IW]:'
83cf5!^AU]nGiUm":4`."U>8@&fW+q.KCp3.c)W\.k)r"0JtjN3qYK92`<69+S?cW*>K%R!!3<,$24c5
$OR:U*$cgY-n4g;VC2Zs-n?r-2`a%n3X.Q$0-hb`*V^]Y+!2=.L&epfq#CI((*3#g#TXp//j<$7@:c3E
$Y3dX@Us(dEHln]Jbad%J:N2uFCS'77R-K0!^AU]nGiUm":4Z,#6tJ>$P40t-J0fh.L@US.P!,+2`NfY
pc/U@3B&cD*ZZ@Fo,[rR'b0[5!X/]5q[30,#7CkG&JcH5-_Ddm-R^Js0fD$Q48_/<3XIf-3&<*/*[)OE
o,duM%%mTj!!3ND*Ut0T*?6+G00W)7=^GQKARf5QA.)mV@V'1gEd)n\JUmWI%"NkZIsH!B:,s[A)Ct\M
pHSdE2];,c!WrQ2nHfL-#71bM)'1%M.K1ds/&3Y'.LI[T.4Qi$0fM*Q3qkWA2E*<=*u,:m#SJ6M*Wd>s
%IjE""U#/$$4@4K$kX6r,UOle-n"^:[jVP1-R^Jt0fCsO481cB4>eoE+VbCk#SQVK!>l7D!.k3b!!3ND
*UOmY*?6+D.PsFe=^GQJA7]7\lt"FQ%:`jV@qB:hEHQPTIt<1MJ,Om/IsuW]APtcH,9.XB*ZQ4R61R8B
5;sJM!!EB,#RLh,#nR=I#6tVI',hr<-7LDq.OlmY.KD!u.1%IU0/,4B3&s#\q)JsE2)$L')\EJb#R:S@
#ne?N*Wd>s%IjE""U#.u$4[FN$4R[d+!`0\-mpDj.GH9.-k%IN-n6`"0K(dI3]fG#3Y=J83]8cE,8_(%
#RLkG#RV7gnK.cK%,1c6!8mhY$PjcI*Y9>4*$-7N0K_j&=^GKGARoAuAGB[8A,]pDAS,RjDKL&II=M6I
qg]'&GB.=u904aO*?6'r*WmB'/j]%n!^AU]nGiUm":45u$O?tB#n%7U(E4GA-3bnK.P*&!.EEt=/,gt(
.Om#&0etRG3'$t!r&G6F2`<B?,od[3$OR+D"pb#3!>6LF*Wd>s%IjE""U#.q$5!XR$471S'H8/?-71)g
-R^Ala!gp7""5WL/Hmd_2DdETr]:`T3]]Aa4>o&R/gDDQ'+>0S$Ock>!sf5J+RpNS(_!qTK)blZ!>Z^9
*Y082*?QFO/N#^_:f^h-?t0+G"D).TA7OJ,s'u%;%:`p[AnG^lDK9lEH[^JCJc:0+I<fpQAmA.s2_>.X
*ZQ+=p)X;U*\KbL5QX//)=[\.!sAnj$2k);$4@=U'H%l5,:4`d/,Lds.4ap<mOJ5er@&1*.P!&%0/,+:
2`WiW3W;&Q3BB)X2)?p8-6O6B%graM#R:P=p'Ca4+7^HS*>K%R!!3<,$1\Go$N:D>#mq%O',DQ1,:*78
q^;FngF3%K%O`_T.4Qi"0/5=B2*!`Zr]:`T3BK2Y2)?m2,8V(-$jd7I$Oc\9!!iW5'Hlof!>l63!2TYs
$PjcA*rR,s*?6(?*Zu^W/i5[W8PW2b>@(ZF@:EbYAc?6>Ac?3A@q9*IAH$'>@UoCJ+_GA#C2@a+FEMeQ
I"$QqJUr?#HZsRNC1:IK90PBh-R0Z1*:P!O*$-^uo0<CC5;sJM!!36*#i5jg#71;6&IAdP%M09i)]^"D
,:4`b-n6bH.KD$p.KLtKr$q[r!@]Pu.M40]/1iG-1,:^F3&`cU3BB,[%lQ=&1GLL1-RB`N((^ra$Mt(t
#ltY\nf@iQ'b0s=q#CI"":<ijrX0GJ$OdIV'G_K)+X&'T-7:,f-7C>l-i#.k-Rng=!%7^n*@WHg/1iJ-
1,LjF3''&\4$5Pc2)[<I0.S=n+;P^p'+G<UrX&W5n-T7'$5=WQ*s!2eYlK[^!Xfbaq]=K5,97aD*??1C
+X8<a/i#=G4?u>+9MSD_<)m"&>[CcGA7]CeC]8/QDJjB3rc/lqDf'6$A7AkK;GBSI5!(JL-m^#W*?6%<
*:P$F*WmB'/j]%n!^AU]nGiUm":3Tc,6nGZ#6tM?#71bH%1a!_'GVH&)]Tn@+X&$S+s\K^-R^Do/0HJr
0/,"30/,(71GLU;/hJP&.4?Md)]BV4(D./e$k!@?#64u,#O)Nq&g-Zc!Z`!bnGiUo":=?#lO*Y"r!EQ7
$k<j_rY74,)B9b>+!DgP,:"N]-R^Dn/1`A*/h\n40f(XB1bpg@/hSY(-mU#]*#f\/'b:`^$471?$31It
$3LP@'Hm;qp)a;P%$(Cj!!3ND*SDM**r[2Z*<.&X*W[?*rZMFk-RgMq.f(\&.Outu.46Ge+X$_)!Z`7#
rYkkX*Sqh>*$-^unj!7@2];Poo`,$q":36Yrs/Q0r!*3-rW`c:#RLhG$k*UU%hJFHrXT2C%LidR#mpS9
"UG><"pPA2#Q>%h#ltY\nf@iQ'b0[5!X/]5aU/"U!t,GD$i12:$OR7L%1WgX%M/FJ#7_7T%1WgU$hao/
#n%-t$3LP@'Hlof!>l73!.k3s!!3ND*Od*\*R,W-*$-^unj!7@2];,c!WrQ2mKq/Fr<Mm!rWg^T!YQRr
o,[rR'b0[5!X/]5V@(WV!sf5J+RpNS(_"OeJcP<@!XfbaPoej)!ur@761R8B5;sJM!!36*#g<UQ#ltY\
nf@iQ'b0[5!!NB+$%rZU$3LP@'Hlof!>l6D!0dHb$PjcR*ePL6*!.0661R8B5;sJM!!36*#c\3Q#ltY\
nf@iQ'b0[5!X/]5i<keV!sf5J+S-ZW+!2=.L&epfq#CI((*/AUkT0gG*\KbL5QX//)=[\.!sAnJ$*OX9
&g-Zc!Z`!bnGiUo":=r4JdV;\!sf5J+RpNS(_!&;S,`Tu(*2Z]M]Ms?*\KbV5kdMF5;sJM!!36*#bhXQ
#ltY\nf@iQ'b0[5!X/]5fa=5V!sf5J+RpNS(_$?CJcNLb!Xfbaa<%H)!ur@761R8B5;sJM!!EB,#RLfh
$1eH(&g-Zc!Z`!bnGiUo":;OE^'XrJ$5=WQ*s!2egAlg*huEfd(*07ncQ30.*\KbL5QX//)=[\.!sAnc
$'kku&g-Zc!Z`!bnGiUo"::>#i!KPl$5=WQ*s!2e\H%6^!"/fC*J>L(*WmB'/j]%n!^AU]nGiUm":2UG
\-W0K+7^HS*>K%R!!3<,$1\FU$31>5$5=WQ*s!2eQN3i^!Xfbai?"d9q&T8P!ur@761[>D5X.1FnGiUm
":1D%g'Icm+7^HS*>K%Z!;QTr"U#-k$MXu(#l+f0#RV7gnK.cK%']ej!!3ND*W$n9*XEc-*ZZ4>)]ft!
*VpfZ*$-^unj!7@2];,c!WrQ2ZO+qa":GYJ$4?M6!>6LF*Wd>s%IjE""U#.s$ChG0#RUnH%1j']$4-J8
!sf5J+T*>T*s!2eNrZ9^!XfbafcI:;$lpB0)]'+u&ec$#*?G&!!ur@761R8B5;sJY!;-<n!sAml$1eH/
'J2aL:dQ]J$Mau/&g-Zc!Z`!bnGiUo":<-V^BtAT$4ItOI[?CK:)sWHr!EN3$5=WQ*s!2eli;V;cN""S
(*0k*d2iE2*?5h(qZR!/(Af-T*$-^unj!7@2];,c!WrQ2mKo6e!t6kjF8^:bF'U@*q?[39+!1"p!Z`!b
nGiUo"::q4iX,hp#nKb:f)=>*eZV[Vr!EN3$5=WQ*s!2eaoI"nnGiUu(*2far#Dg[oH",U*ZPn!q#pd(
'`9!S*$-^unj!7@2];,c!WrQ2bR(lf!t./1GPcF`G&BDLq[!99+7^HS*>K%R!!!0'":=K'r!8r&!sf5C
C')f:f)4&#g<OC?r<`W4$5=WQ*s!2eVuW%^!XfbanfIcO!$(nY!$;(YVB5^W!>l%8"TeoG*W@)[*!.06
61R8B5;sJM!!36*#jr!%#RLeC#f6o)#m1GcEch+u"*AK7#Q+l/&g-Zc!Z`!bnGiUo":=N("pbPE$k!CL
r<WB0W<re7#RXMZf_O&"f?[>!rX&`5$5=WS*s3T,(^u-!^&[s/!Xfban/_iU+"T]G3\Da'rZ;+]r>YeX
YTE`a"!&C$$hXZ($lo6f!ur@761R8B5;sJM!!36*#k&',#S%^j'b:`\#mgmr$,m2Q#S^`kpN$FY@M/tF
#ltY\nf@iQ'b0[5!X/]5q[3$("pkVJ)&a5&rXAc5r<NB0X9o(9$6H_2q:,l'e^h8L#mq"F$5=WQ*s!2e
TE(J^!Xfban/_`R.9gFtAdMpM:dR)l,pONTr>tkV!$/Ef!Z`<uo*#+1rZ2.]*\KbV5kdMF5;sJM!!36*
#k/-2#S&14/1W.q*Z5Y%%LNLJ_[5K4!XLT)oQ($h#5ni/&g-Zc!Z`!bnGiUo":=Q)$OI=h.Olkp,p4'=
&cN4=$iUM4#Qb8;$+($A#RFPeo[O1M"UYSB$5=WQ*s!2er;_EL^&S3B(*2lc!ZOF<rF?URAnP[`>>dsR
1b9pu+WhdI*uuCCqA]JUr>rfs!Z`9oo*#@3+!)IC*\KbL5QX//)=[\0!sAl9$1\B(#T58n.M=6`/1N+p
+<212%LrjR#m^hC$F0s=8pC2Sq/ZR2#Q4r0&g-Zc!Z`!bnGiUo":=Q)!XT_nr@%Xo&L\qO+<)+0&IT!T
$k!FM#mq"8#QP1t$I]=a#RQOHp!j?!OTu4##RV7gnK.cK%,1c6!8mhY$PjcP*Wd9KBDH*<Ac?9WA7/V?
9LLru/L_qi+s8!M*ZlIE*Zc?n*;^cR*r?uW*;(<M*W[6$pDsDW*?,O\"U>PY*Zc:B/j]%n!^AU]nGiUm
":4K'!XK_rpaQ7or[e1$.3oHJ*?#\,%h/sU#mgkD#m^eD]a4`J<d+.W!H_E@#ltY\nf@iQ'b0[5!X/]5
n-T4')_(P1r@&%$-7'`U)AWqs%K6_A$4@1K$47(H$46;0q[*-,q[)g!r<`N1!"&B,":,8FUtYLl#hH!]
$47%G'Hlof!>l6U!.t7O$NV"`n/_WO/7%jX+(]"qB4bad?sQl49L_6,1b^I1-6sf[+WqmL+<M[H*r[8]
*r[2T*r[2Z*rI)j*ZlIH+!2UK+sS?X-R9iTpDsGX)\*#To`Y=)rZ2.]*\KbL5QX//)=[\.!sAo!#m(AB
-h8`&.k</&.k2tq,U+6K)&*_s&.B!U$47(<#lk80$2t21#lk;2$MXr,$N:A0#lY,1#lY,9#RUnH$k*RP
$hal.$s.TEErpGc$N183&g-Zc!Z`!bnGiUo":=W+rX&Z<-1WJ^.1@UO,pFEQ)Aj5&&eGTQ$ip\DrX&`8
$471<$N:A,$N:A*$31J5$4%%I$k*LP$O[:8$3LPGV;([n"kKX\$47%?$5=WQ*s!2eQN3i^!XfbamN)Qc
8l]/*@Uo:GpgjA8*G/qsAnGU`?sQu;;GKkT6pNjp2D['A/hJV).OchG-ibRm-3Y\D.4H_sr[\^7/M8_4
1c[Z`6q9jF;,gV$>"9n5*Wd?%&b?/2&g&/9*$-^uo0<CC5;sJM!!36*#k&'*#7qq$-RpVs.Intf.iKri
.k<(u.46Ac+<MUD)Aj8*'+toi&.]6[%/^P7%fQn;%fQnM$k3[V&.]9_&J>`l(Dn&1*ZZC-+sJ?[)[uEH
!X_YGoQ(%.#Q4r0&g-Zc!Z`!bq#L3j!X/]5mKs13*?c^V-7C>5./PG/-mp>f,p=BQ*?,n8(DRVt'+tli
&J,KO%06kFrX8c7rXB\T&.oKc&eYch'+u#r)B'P8+!)OL,UFE<q[39/!sf6qh"B2'es6RK$4$tQ+RpNS
(_!YLMZ<ed(*38noH"G^*[<0p6r6ul?t*YWA+*t-Ac?<@B+8HbAS#C_@U`_P?<pf@r*'/)rEBb:?!^iE
?smDP@Us%]AnM$Trau.@!bOtDp`9JW*Z"JRrWNQ3'H\A;*$-^unj!7@2];,c!WrQ2mKj.)#mq1V)BL1Q
r[@jt.IJ\a.f_1#/H%+!.fCdt-mpD@-3,;',UF]]-71)f-n$Mn.Olkr.OtEJr[\%$r$qe")tjR>#W-_t
Erp>@#5ni/&g-Zc!Z`!bnGiUo":=E%!=TGE'cJ5=-71)h-n4R4q^DLpr@.^o"",HC,lT+g,R,P?,:"Q\
,lK"o,UOf`-RU;jr@%^rq'c=a$2=i0#RF_ho[O1P"pt\C$5=W\+8-cW(^uH*XT/D2(*2]^&KMi3+!`Br
5tY'Z?XR>Q@q9*2AEmapA-#^Tp`9MX*ZPO["UGGT+!)IC*\KbL5QX//)uTd0!!39)#j_j1#7(P?#n.:W
)'0qI-RpPq.k3(0.dnnS.KUk%$2=f/#8Uonp2^:F'aFUC!>6LF*Wd>s%.O<!"9]%r$4I:L$4II\)''nG
-RC/,..\kX.I&;^,7F8R":,D]^Y/A3$.lj8#mq"F$5=WQ*s!2fli;V;cN"%](`aX[*YBD4*?H@O/iGpa
:K:V*?t!JRraZ"=k[`O\!Daa1*Wd?'(\S"5#8I+X!ur@761[>D5<h+NnGiUr":4E%q?[oB#R:S@$4II[
)&jYB,Ub)k.Outu.4`Cf!\>E#p'Ca*2>2(mE&e1$#m(_]*qLES*>T4V!!<K2#mo`$%graP$P!^_(`OP?
,UOic-iPLo.Fop:-itb<$24c0#RP(jf(mhuf$@e/rX&`5$5=WS*s3Q+(_4[gJcP<@""5<6*8qqZ*??+@
+!N'a1-.]k:/Y.t?!^rJ@U`hXA7K.\@q4G-$Y*[WA7K.\@q&nU@0'I_oc=2U*"rSR"Tnr4'-7#m!ur@7
61[>D5<qIfnGiV%#mfJr!=&o0#7h+I%M'6g)&s\?,U=`c-n5NP.k<%t.k3"t/)Vle.k)qt.k2ts.k)qr
,S::S#m(K(EVa_ZEH"8Q#Q+l/&g-]d"!&C#'_)/'&HW4E#iH%+$O[:K%1Nj]'c@o3,9eBZ-71)f-7C;l
r[7aqhC&@Qr?qn".4-Di-mB;s$3CJEJHF9Nf)=,$f$qrrr!EN3$5=WR*s*Q((8q4t!!G2L+<2Bn*p=[E
*?,t=+!DmW.k`Y;4[DS0:/Onh=Bf!7?!^iE?t&tB!+Yq9!b5\Kra>k9?sin>%UE:C=]SHt:J+/G5Wq%S
oH"/V*ZPk$#Q=l/"pG>Kq]5_W!Zis[oKWOD5=&F2nGiV.(^Sh%!=&o0#7CeE$4.+O&JPoq)'&Vs$R-fA
,U=Z`-n$Gl..\kg.OYBI.46MB-k@[P,UFZ[+<;LB)]BM+%0uM3":#>tAo[fk"`\Nm3XZ5j#ltY\oH",U
*ZcOBnGi\/)[coWisPPgrX/c7#n-_B'G1rl(`=52+!DaM+XA?\,palc-78X=!%Ign#Uq/M-R^;g-R\m?
%OEAG,9\3Q+<;F@(D[_roEkd.$4gjce("BI"OOhs$jlk>!sf5J+S-ZW*ZcXHL&epfq#CUUE'YQe*$*NM
ruM+ZrZ)Rl+!;^N,UOrj/1rV31Gq-P3W;&V4$,Pe4$#A]2`<KK1,:R</hAJ!,U4HU+8d,Z*;LZM*XE\u
&.AsX'H8.k*WmB'/j].q"[>7<=*$:i!!=#i('r@q!XAr9r<EE1#R:Y7$4mRS%M'$\&J5Zj',2,q'c%Sa
(D%>s'GM2p',(uj&ePZd%LigE$N180#P&0/#RD81;d<O)4W+G/q?[08+8$ZY*?H:K0,O-Y#T,34$OR.G
$4>;jr<rN1!"8c7#7_4T&.oNf'DrRH'G_G_()%Dt'GV>s&eblj&J5N`%1EXQ$46Y<rsS?(#RLbfD4du6
SS\BV#l=r2#RV7go,e&W.5Mj7!1X#o13\"3+W_[EmiL+&r#PVRq]5MQqAnW<#TY!/*?6(@+!:>#!ur@7
62X"G5R0M=5XSb&G;\mj";NRK)[OIjr<N<-kQh(m!!rQ/jp;7s"UY_K$3g_0#ltY\pDsP[*ZcCQ2_l6?
!!a8s2'*/5$4,JqjpLPbrsJZ3i!K_q#R:_Q((1<Qq?d<1$5=WT*s<]82DZ3K!.k3b!!k6#J::BE*Zc<H
*kEBm*VCHU*$-b!q*56N5<qJ)@=E`M1@Y>I'J;C*+92t*#lt;:oa(X3+8Hra*??1B+Y5T50bs3Y#Sf0W
3?nq?$4+<Pb6e7U$2+].#RV7gp)aJZ+tPc91_naFJcO^/$6F,7J:_Q!,9@gEXrbq2"<AO*1dV"($U6j@
5t+^nJUi5g..I9B%kK\$4"_6UiX(nW!>cjT*X`u/*ZcCO1cdWV/eRUR$4AOJ3BAf3$O[4GSI4<_":5DB
(*NAo#Tb-81cm`Y0,;"tK)bl^$s.t/ItN/U2^9Cc*#t"\nf@lQ*[O&L5lX(J5RBhWC4:_`It2#KnGiRk
+oXJ*4#eW%$4+NU\Hr9E*W-rY*W@)_+"&^$3rV,?-OoSG!='eI3X@i,-l*4!$4$q9$A8`e#RUSC*rR/\
*r[5b*?c[^3BR4$!@nVG!2TYs#q9imIg:LWI:#&_+!:J%miIc9"WSR,2F0V-56jG=6Ut-mIY%KJ"+YM]
)=[\."Ud$_3<hT*-Pd-t#c%d^#n@:[+!)ID*?H7D+=Js(3rV,A2`)E\q#L3j!WicdrAk-E2^fLO$4?b<
RgSEf"pbPD(*F\?r>u1a+so!(48q8C4#S,hYlK[^":Go(E.Iq;!.Y<,IVVY4,9J$,*/u$<*Y9;4*[*:(
5<hCu5t"IUFFJf=Ifjjk2Au#b"9S]>0KB"k#<Omt*YJed#f-hb#ltAJrZ)7c*ZlLL.l01HrAb!>1aWtI
nGi[q!u<[QrAk0G3A2Kg%LNRB#l=si$31A2$3:tdr>u(^+"%.@2E<kt3WqQ'-Pd,O!3H5)$Pj^;COQ,1
$%deS@7Dpr+<DU'*:=lB*Y9>3*ZcL]5X7V&7Sd9+I"?kHIg(:A:-UZTr;cKj"Tnl3'J;?B3<hT-2^fRV
$_Rgg#ltJNrZ2:d+!E*e3BB5!3<_>s,TRU/nGi^r":>eq3VtiC4>nW/&e,0U$N:=e$F:'N#m^kF$l:!-
*ZcLR.5NnE48V&A2'j:\%.!tG!7(WL$Pja'-W>6dIg^g[JpCs&2CTgm*Zk8"d2p:K&0)Z2*Zlgl6UXF@
?uULEJUmWI#'siM5X.1FnGidr":,5C+Z)1V3=%Z-4>n]2'FbD,#mV%]+!;^R.kq)c3]d-u#<4[q+W_X=
%IjE'"U#,>$mdbmr&P3I4?>DP+;GCo$4@4>#f$f!$NCD2$47@_+<MgS.lB7I48V&D4#\`9*?Q+,aoI"n
nGih&(*+G;*B@VVqL8g&K7eSj>Xp\$,Q8bb*rR&Y*OQsV*WR5Z*"F#2+!2gf7T!K,G(,!nJGXfuIX>s1
r]gNL2];,c#m1;9#mU_M.5j0_3=Ir14#eo?*"i\f#m^h!$*X^D#RM"W+=8Qk2E3`YqDeX;2_cZY*Wd>s
%IjDu"T\`4rX&`E/3#`g3Xn/54?"uD*Yo7p$4@1Jr<NB0U^@/1$46Y:r<`i@)'UFW0K2!R48CoC2`)g&
*?Q@?%&a/j!!3ND*W@)`*?[IRG^fO>&:]4]K7eSj?;<X:-6aQS+!1;!XrdH[%NZZ5+!;aS1ItkiG(,!n
!.jur"b(rICfE_!5QX//)=[\.!sAo/#mLVA(F_:&3;PWE3]fD_0IS"Y&.JsQ#RJNYf*Mci#RLhJ&f`AU
2E:[sqDe^=2E3B<+8m5^*>K%R!!3<,$2t89$ORb$2EEqr3XIl14?"uC+W1q%r!N<,XpY%3q[*N8'd+q[
2`^k!q)SaC2_ud'*?Q@*+!2=.L&epfq#CI((*3;o"rn[E=E&\;q0s$-JV/W*G\gSX5;Of9+WqjK*Zk.t
!$/ir!$2%Yr>beX%j)l9+XJZr5>>C"H%CQuJbX]uIXQ?M:dOtD!^AU]nGiUm":4r4#6tJA'I5@k3;>KD
3]fD`2(^'q(_R>f$4."%$,QuY#RLhH&/#m&,qV);4$#Ft3<_B$1b9ppq]5eZ'b0[5!X/]5q[*H4(*tXp
pGr^E4?PY`0IS%]'b:]\r!N9+!"$FJ!"&K-q[*N8$kF-k+XdLL2ENr]481c>3&WE8+<C>$!>l6<!1X#j
$PjcZ*X3T).7@WeIJA:/It*$$K7nc&Eb8HJ5rUGG,p=ES*ZlIF*qpWS*S;D5*VUQQ*Y]\<*ZuUL,q:Q-
5ttNpFF8UlK7\XKIg(:NI<KF.!CoBM5QX//)=[\.!sAo+#m^bA%N-ZM2`Wkm3=S#34$,G]0e4Ij)&!Pj
rX/W2!!ppXmKik!rX&Q2%1Wp_)]g7T0KD-T4$5S!3<qN'2`*-8+WpM$!Z`!bnGiUo":=i1"qDV'1c[NW
pc8mH3]oMc3&<*5+;u".%h8OHq[3''!"%9b!"&B*q?dcA$OmRY(`=JD/2]@I4?PYbpGrO@3Ar]B,97g#
*s!2er;_EL^&S3B(*3/k$6:'./OWl`H[^HnpO<3oJc:9:JUM`[AQqu$4uY/F-6scY+<VaJ*ZkM,*?H7B
h&I=R*Zc=D+!)LG+<VgO,UOup2a9f0>\.huI=_BM!J,doIg(:JF_OrMofrRC2];,c"9Sc4#mpG7#RC\B
%iHZI2E:=h!':*@(HON60e4Ll)]'/"%h/mR#RUkD#RLbB$J,S#$4$nD#RC_D#RUqK&.oQl*$6IW0K1sP
r]:*@oJm(52`*-8+nZlX*>K%R!!3<,$24c5#mq4`.5EkD3]Zmp!'C0B%m)^-0e+Op*Z>e,%h&mS%/pS=
$O[:K#mq"Goa'df#71_E#mq"I$iUJD$jmFP%MBTs*@)s]0fCsPr]C0BoK!7>2E!<>,p43KpE'DQ%,1c6
!8mhY$PjcU*XNi+*[s3LATW9Jo7%p6JUrH,K7e`'G][b4?<0im69@(\0.\P!-6si\+sA'O+9!DS+9!A_
+!;[K+X/*U,UOie/MAk;4@2S8='oKSFa/=cK7ei0JUr@CIg:FJFCe<@83c]2!^AU]nGiUm":4Z,#RC\B
%2U-:1,f+kof3(63]d4$(HON51+at$,9ImC().Am%LrpU$OI.H#knZ&#knWA#RLhE$O[CR%hK?f'cJ&5
,:4ll0fM'QrB($?oJm1:3ArcN.j>uXnf@iQ'b0[5!X/]5oEkp3$4dpr/MoFJ4$3'qs#^0A&3Dg01b^F0
,U+<M(_m_t&J"dL!Y,PFrXAT0!"8`4!"8T0rX8i9$4d%E#7_:X'G_N)*sa)<.4[)12E*_r4T@M83X%T+
4#]&KrZVCb*?Fbo!>l6U!.t7O$NV"`nfA/Z*#p(O4]5g0G^Ou0In,$?JV&N-KS+l-IslTcF`D;5A7&SF
<`Dpl9LqZD7R]^46:!n(6UX@47n6*D:Jk(l>$PEFBl7s6G'SLcJV&N-KS+l-JUmNFqL8m%IXQE[A5YQA
+<)j$5QX//)=[\.!sAo##n7.F#7:tY+=]'%2`NfWnMqFI3]oJc4?GYd3B/oR0ek=3.OQMf,9\-N#9=g)
)]BV4)Z:Nr)AsG3)]Tk=+!2XN,UFff.k`V31cRHT3]oJd4$,Pc3q53=3&rrW2DHX((_@#['(I"E*>K%R
!!3<,$1\H&$47.O(aCOb2`Wo[47P@#4$,Jc4?GYd4$#;Z2E!?F0.SG"-6si\+WqgH*ZZ4?)]Tb7*#fk;
*?H4B+<_pS,UOrg.k`S42E3TR3]fAb4$5Vd4$2sn$9L7/3AiTD,8^t!!XTG]nK.cK%$psj!!3ND*UXsW
*?-"A-o=CoAoMs@IK=qIm!f"cr.+p$K7j)T!eZ,WnUUanK7j)T!eZ,Wr.+ium!o"`%t&S?AlqP].3BQL
*ZQ4R61[>D5X.1FnGiUm":4E%%gWFG#n7Rf,:P<'2E3]W3:&['3rM/>4T7DB4RkH44T7GA4T.A>3p\j8
3&ruX2`*6<,T@@+$N:84#mh4dnf@iQ'b0s=q#CI"":=H&%LELM%hp$00/,:D3B0#\loP&+!':*Ar]C*A
!'9X3!':*Ar]C*A!':$>ofDk/$p-I03]K#Q0-qYT%L`7C!sf5J+RpNS(_!YLMZ<ed(*38nn/`/^*#fn@
.5F1b>\S/#H[L9lI^=P'IL:LLG&_5%:dQrf+T`Z'*;gi[*$-^unj!7@2];,c!WrQ2l3Rt,#6kG@%2'O#
,qUf,2E*VL3S$2$2E*NN0eF^n)A3Pf#R1M=q[!99+7^HS*>K%R!!3<,$0hlr$4R@R'H/,D/i#:D3BB,[
ZT8XX3BK5[2DZs6,8q:+$OI.Jr!EN3$5=W\+8-cW(^uH*XT/D1(*2KX$QU3+)]g1P0fqp(?3k7`FE`+[
I=?YEIfOr<IhR9[I=-EdFDkl$;b9,,.j>rQ)]\Sn!ur@761R8B5;sJY!;-<n!sAnk#o<jP#RC_C%MBNs
+snfn1,LmJ3&ioX3B5,@"#r;$3"n;22`<KJ0e4Uq*>fA!#mghB#7'r/!>6LF*Wd>s%IjE""U#.l$4R:J
$4RIY(`aeM0/5:Ar](-C3'0/_3W2"a3WM8@3YFG73B8uU0J=h!*uG_'%1!:I$hju1#RV7gnK.cK%.!tG
!7(WH$Pjc?*Yf\8*#fk=+XScs4@W+L?Y*tkFEMhUrI"`rIt%BH!.Oos!.Oosnp^XgrI5$#It)osIX_9E
'RY1LFDu#,@9HDs4Z4o?+rqXB*$"Ji!ur@761R8B5;sJM!!36*#jr#i#p'?W#7(P@#n7CY(E+A?,q:N$
1,CdH3&`cU3&ruY3;ki;3:/a+3;kiU3&ruY3&`fU2`<KJ1+t.+,9RsC'G(ZZ$3pe6#Or*%&g&1d*Wd>s
%IjE""U#.e$5EjS$4RFU'c.l7,q:K"1,LjI3&`iXr]1<F4$,J`3]fD`mlCJ03sIc.3]T5_3W;)=3=n//
2Dd-B/h&(j*Z#P)%LiaD$31J($3LP@'Hlof!>l6f!.k4@!!3ND*S2>4*W6ro*?QFM-7^i24[MY5;-$n/
@V'1eCi434rcJ*]rHJ3_rcAcnEGo]1BkCma>?Fd!8jY[%1G&_W,U+9Mr>b&C!ur@761R8B5;sJM!!36*
#hTFa#7154":,>B%1a*a'G_Q+*ZlUP-RgPs/MAb20ebB\1BTBh1c"tb))<s%0eb:5/M&A!-6sfX)]BP.
'+YKZ#mpt:#6>#6km7A'+7^HS*>K%R!!!0'":<K`)%-cZ$k3^\()\)4+<i'Z.P!&%/h\n61Gq#e2>oH2
2&S5-1GLU<0J4q-.OQMe+s7g@(DRPm$k3OMrX/Z5q?la"!sf5J+RpNS(_!>CPQ1am(*2reg`?S=*#on:
rZ!:+*?H=H+sS?Z-RgPs/MAe41,:XA1,:R<0.e_*.46Gg,U4KU*uuC#*!.'!*8_e;*!.0661R8B5;sJM
!!36*#gWe]#6tM>#7(V6#7CeD$47(H$OdFR%hS^PrY#5ErY#2B$P3gY%LigS$4.%H#lFo-#5\Ya#ltY\
nf@iQ'b0[5!X/]5i<noY!t,GB$2t83$iUJX$OmLR$k<aX&.oKe',2,q'bh>q&eP]e%h9$X$k3US$OI.J
q[*<2h[0Gk$5=WS*s3T,(^u-!^&[s/!Xfba],pbgr>bVRk8rh.!ur@761R8B5;sJM!!36*#fI&J$2b&,
#k\H$#l=kT#ltY\nf@iQ'b0[5!X/]5q[1"Dr<rQ2r<q$\q$I30$5=WQ*s!2eTE(J^!Xfbal5kj)!ur@7
62X"B5QX//)=[\.!sAn($.0%[&g-Zc!Z`!bnGiUo":<`gS-f?($5=WQ*s!2er;_EL^&S3B(*1I;XW@Qa
*\KbL5QX//)=[\0!sAl9$%`KT#ltY\nf@iQ'b0[5!X/]5[gKhV!sf5J+RpNS(_#.!JcO^/!XfbaVB4&)
!ur@761R8B5;sJM!!36*#i,fQ#ltY\nf@iQ'b0[5!X/]5PmZFV!sf5J+RpNS(_!qTK)blZ!>Z]/*q:9R
*$-^unj!7@2];,c!WrQ2]*YtR!>6LF*Wd>s%IjE""U#/&$A/Zc#Qb>I+RpNS(^u`2V#UQ)(*2?TPTBoH
*\KbM5Qa892];,c!WrQ2R0hRR!>6LF*Wd>s%J^#"!!3<,$&o;U$3LP@'Hlof!>l6M!/ggY$Pjc[*eGI/
*WmB'/j]%n!^AU]nGiUm":2=?^^1#S+7^HS*>K%R!!3<,$0hkU$3LP@'Hm;qp)a;P%$(Cj!!3ND*SDL6
*rR,R*WmB'/j]%n!^AU]r;cKj!WrQ2OU:"R!>6LF*Wd>s%IjE""U#.Q$G-ZD#knZ.#RV7gnK.cK%.!tG
!7(WH$Pjbl*mYo+*<I9'*<$uT*WmB'/j]%n!^AU]nGiUm":4E%P6q6roa([4+!1"p!Z`!bnGiUo"::q4
i!TGh!"&W3rWr?-!sf5J+RpNS(_"OeJcP<@!XfbaPofK;rZ)7a)]BS2)B0_<q]5hZ*\KbL5QX//)=[\.
!sAnR$+L9H$5"4$,8q+#p^$s6+7^HS*>K%R!!!0'":9eirs/o;$5b9U4Y.HY#l=r2#RV7gnK.cK%&a/j
!!3ND*V(8;*Xs,0*?,b)#mU\@%Mg!(r#PhX!Zis[nj!7@2];,c!WrQ2WX7Dd#nf$qC2n6.=#1Ha#ltY\
nf@iQ'b0[5!X/]5i<lIi%1!4G)dB5[d*Th/=r7PC$3LP@'Hluh"!8U%%#+br!;QTr$PjcM*rd7U*rI)Y
*<@&iq#pd1)uL`Z*$-^unj!7@2];,c!WrQ2`!O<f%1!kQFE_hJF*)VI<#Gu=#ltY\nf@iQ'b0[5!X/]5
q[2p%rs>8($O@"F/"kPLf@JO)g&oos-j]bY!sf5J+RpNS(_!&;S,`Tu(*2fa!ur=&*r[,Z*MXYX*??+/
pB:R+*;po\*$-^ur':!A!^AU]nGiUm":4B$!"-1Ajp;+q(0u1\Es$Sj'aX^D!>6LF*Wd>s%IjE""U#/"
$3LP?$4?b<!"&9)YR1O>$7)h2f)!o!g9)Y,rX&`5$5=WQ*s!2er;_EL^&S3B(*2fa#TtQG,U"6N*?G,!
!$18E_B&e"*?,U`"TT/5*WmB'/j]%n!^AU]nGi[o":,;?n-K=,%1WaQ#RLj4#m(Q.Gl;^\ErpGW$N(22
&g-Zc!Z`!bnGiUo":=K'#R_(Q$k!FM#mpS:!"%6adg?3`#S2mLpXK;rOSoLg#RV7gnK.cK%,1c6!8mhY
$PjcP*Y0556sX,"8j+pY,U"6O*Zk5!!$0<*j;nCD*?#1U"UG>N+!)IC*\KbL5QX//)=[\.!sAnu#mgqW
-R^2\(_I2arWrE.WsJhKEHLnq!c9.er<WK;+7^HS*>K%R!!3<,$1J94#RVIr,pOBG'+YK[$O[:Kr!39/
]F+<=":,;oce%pA$.d9[#7:eD$5=WQ*s!2e\H%6^!"/fC*Uk*^*&hJ@AS,ReA6i,*4u=f;+sHq-!?E6Y
)uq"h*X!K)'*SR4"TT89*WmB'/j]%n!^AU]nGiUm":4K'!XKMmr[SL1.k2ni*>]A!%13@H#m^mt$-ihY
#X<P+ErpGK#Q4r0&g-Zc!Z`!bnGiUo":=W+"pt\D'IbIZr[A%",p=3F'G:<Q":GPD#n$P8!"$.B!sf3R
h"B2$eoq9)$4$\?'Hlof!>l63!2TYs$PjcP*Wd9MBDZ3CAS,ReA7,aJ;+<`./h/+j+X$b+rZ:eR!$0c7
!$1kTp)a2R!"nf+!"SuL!ur@761[>D5X.1FnGiUm":4K'!XK_rq^N70.kE8%.3frT(D@Di%13@I#RLdW
$1J6&$<)0@Erf;Ir<WK;+7^HS*>K%Z!;QTr"U#/$$3CMR.JkOl.1%CL,TdpB'bM#crX8c7r!N0(!"%?d
!"&H,q$R*.":,8AS_Nhf#hGXT$47%G'Hlof!>l6M!/ggY$Pjc[*qgWV*BIg+A/o/lAnPae@U3#28O5Hs
0.S@q,9\0O+<M[H+!)I$*o\.>*W@)d*?H:D*ZlIH+<C.s!Z`3hpBCL!!"JoK!ur@761R8B5;sJM!!36*
#k/-%#8Si_.M"$[/1`8"-mKiT)&<ku%1`@E#RLeC#RLeC#n$,-lj3_##mgM:rWr-&!Xr:UolC.U>Pnd.
&g-Zc!Z`!bnGiUo":=Q)!Xf\kr[@Oir@&@--R9oY*#TP,&J,<Y$k!IP$Ocn?!"&T2iWoMjrX&W3rX&Z6
$N:D5#keT-#SEuhp!j?!WsoCC#RV7gr#bVS!>l6+!3H5&$PjcO*X!WY?XdO9A-$7R)J3SoAn5@X>?+Np
84#I"1bgU6.4-;c,9nBVr?2(]p`TPXqB-=n+sS?Y-7LN!0Jk^L5!1D=pDsAV*"hcG!"SuL!ur@761R8B
5;sJY!;-<n!sAnu#m:ST-RgM8.N9lg/M/M*.Ocen,9\*J)Aj2&'+bW_%LidR$4?P7q$?a%#mptG$O[CR
%1a$L'*]3g(_6r[$2=f.$WD9AEr]8=#ltY\nf@iQ'b0[5!X/]5mg91**[`<anL4;a$n*JM,U"9O*>fS-
&eYK_&J#6W$k!IN$iUM4%0$\1$NLP4%/gMF$O[:L$k!FR&.oNf'c%Z%&de:>!sfC.g\'(tf;&<P!sf5J
+RpNS(_#a2JcO*s!XfbamN)]X/NZL%>@:oNA7P.?s(24Bs(D=C&nGH[?X?u?<Duaj9hS&J6ps=,*C)hQ
5!;"j5!M:u6psI684cEH9M\Pd=^,3>@U`mHAcZ6ppDsAV*Y\,K#881#*ZQ4R61R8B5;sJM!!36*#k&'"
#7:bJ(*"GB-RgJo/+>%f.i^)k/M/J&.4Qbp,pX]Y+<MXF*?6":)&O2.)&F.h(BbTm)&aFm*#'D7*??4E
,:"Ta.Ocer.k<2'-kcj[#m(B$GP-"YF@?H5#m(_]*qLES*>K%R!!3<,$1/')&/?00,UXrgmO7l[#:LrG
-7'ua+oWPk*ZZ4>)]BS4)Aj8.rYGYS(`F:k)?Lit*"3i.+!2UK,UOf^-7:5?.01\-pBh!.$$tA!eHj`T
#7:eD$5=WQ*s!2eaoI"nnGiUu(*2c`$lp?0+Xf*18lJr#@:SP4r+5h=rFbS2qe,n?r+5b9!bG:Np`9MX
*Z,.T"T\iFrZ2.]*\KbL5QX//)=[\.!sAns#nI:H#7:nQ)'1"J-n6\q.Ojj:q^VLos"41#r[mgor@Rmt
!%n+!q'lFr+:RuN!XKuiolC1O-O9SV!>6LF*Wd>s%IjDu"T\`4lj=41$4@:V(`a_E-7:/i-n4C/i[FjW
qC2.e!?qgE$3UV?6.4BZeHsgP4p;9##RV7gnK.cK%&a/j!!3QE*V(9G*Y9>4*[)j_3C?M>=Bo3B@q9)`
A-#[Rp)X5R&+p)+&cEaN*!.0661R8B5;sPO!!39)#jDX/#6tM>$4RO\)BL"I,pt,k.4Zksegfu8!@%sF
#m(Q6G5$%ZEDR#?#ltY\nf@iQ'b'U4!X&W4kR%M%$47.L&/><d*[;gTr[.ds-n$O[-ibIa$3Cd-g%X"u
esd3L$3LP@'Hluh"!8U%%>Fks!;QTs&f2Q/j;o-Y*$$(C,qC`46V:3U>$PEB@UinY@q9+[ct!,draZ%=
62M`$*WmE()@Q9C!X]hfrZ2.]*\KbL5QX/0+7T=4#6Y=n#oNsR#7(VC$kEsd)BKtF,paog.4Qbq.k2tu
q^U/H"tM,O.Oc5?p'Cg,)e='cEroej#5ec.&g-Zc!Z`$enGiXs"UPM5$KVU.$OdLY()e29+X/6\,pt&h
.4?Snc6rfE.4?P^p'Ls/#r'$Df)*u#f%%;`#lY/5#RV7gnK.cK%\Nfl!!=Pj*?=AdoH"bg*?6(@+!N$^
0K2-^7nli\=Bf$:?XWkAs'l"<raZ+@A7T3AAH$*;A.N0[@UW\Q?sd5G>?Y*,59fbA"!&F"%Jp;3"pGGS
+8m5_*$-^ur':$B"$]%8/b&fA&I.%t":#2;#71;8%h0$]',VQ+*ZlRO,UXuh.K1gr/,gsu.P(EHq'l7l
r[\!ur[A:,.k3"s.4HYm,UF]Z)"S%8#U<XPEs-K&>p9IL#ltY\o,[uS*>fI[!!!W1#i,gh$OR4O$474N
%M9El)]Bb?+sJ9Yr[.Ul![]6Br[Ido![fBEq'l(er[@su-7:/hr[.XjrZV@\%J:&2#RET$eGRl#e^:Z_
#Q4u3#RV7gnfIoU*#8DPJcNLb">rFd*?<ZPrZ):b*$-.D+XAHd/eTio3'0;j77TpB9i"Va;cHas<r5r9
<`N*t;Gp@g:JOVX8Oc'34#f&O/Lr7s,U)_""<AO''+4^D"9o2H*$>)"!ur@761dDF5<qM52t6kN(DR/]
$.oOb#7154(^UKU$OmUW&ebrp(`=;5*??1A+!;dP,:!.4*[W3Z,U4KX+<M[H+!)ID*?5t8().Dp%hB-Z
$OR+Do*GO((.D\L#&nO!@m^t7q?[08+7pTW*?H7F(\%J.(`<\f#hB@]$iUJJ$OdIS&J>`k()Io.)B0\<
+<VgN+sA*Q+<_pQ+X&$P+X/'Q+s8$N+<DUE)B'G.'GM/k%h9!W$h=W5#RD](]$&IHbIN!F#Q+o2#RV7g
nfIoS,T5>:JcO^/"Z1*W+!)EH*r?r^*#ot>*ZcF&+T<P`+p]D<,U=TY+sA--+9io0*Zc=A*;^cD*XWo0
*ZGt5()\)6+8[)]*$-^uofr[F5X8:g2XpbL(G$:.h?iZXrs/Q0q?I-/#71YBr!NH1rX&c9$OR1Hr!NE0
!sf2>#l=l,#lY(t#mge?'e2!q-PH^hq$@'7+8$ZY*?H7I/f4$X"W/m/#mps]$Mk/-$N1A4%K6b=%1EXS
%K-\1$Mt5.$LnH1#RCb[7U9:g+:&;N$3LP@'Hlrg![f`@\H%6^!&=b&FZpif*#seV!?N9Z*WR;X*WmB'
/j]4s#<tF<6WJAT2=UYL'eqKY$bZlC$2b%X#lk80"ono&#ltY\pDsP[*ZcCM2_l6?!!a8r2&Zc.#RL/3
Op_3pr<30-q$I*-!X]Vap)aJ[+!;sh1`2PZV#UcTFb+g/-6=3Jk8oj/!ur@862<bL5<hCu7U6+DJT`g=
!!O#g3]J)eS-dmU!>6LL*XEc-*Zljl3AD6D!;QU#(c462*tAVb#a5VZ$3LP@'Hm2n!$;+]"X5ET3]%YX
!/gg_,B/-`J7CG[+9*=6*r6o\*?H:Y62NnT5<hCu6VqWMJ:DSgnGih)/3#[O.M<'o\I$(Y!XKP`q]6+c
*?H7D,V_;?3%bj6!"'8k3BK5M((1HT#kA=]$3UYB$5Xi_+8d2c*[`^(3B8f/NrZ9^!=rE6IgC[O<%fC9
*#p![*h=>T*$-@h62a%S5<hCu6;;!;Jc:-"A0(UKo`,!q,lTe,4#\;p$CD.\#m1D@*$>,##TXp,*Zu[Y
3BI."!@SHJ!"B,Z3'')_2C&nC$4$nDdgE5b":,>C*?P"u"<Ad@2`q""!A"ZG!.k3s!"]DgG(>'lJV85I
1*dq_*#p!<*l&g/*$-4Z5sR\"5<qJ"78RWDJUm`L!dI<SnGit$%5Tq'3BB5Y+qb1fp^)]^":>qe*ZbV.
*?H7D+!`?s3rM&?2]`Ct!"]2A2*3i[4$5DI'FkHW#RCaD$IK1`#RUqT+T!5a*Zugc2`pt!!]D,0aoI"n
nGiY!&jUU<IgCUXH=9/k+<DR&*2Xe<*X!H(*[!-85Q3nP6:tBuI"?hIIft:I=#Lrd!!<<+(c2+N#Wb%*
-lNU&#n#AmWX0+A'-8/7*ZcFH+t56+3rM&A2`2ru%IjDu"TniF2*:du#Wk.-.2rd+$OQe<Pm[0k!!rQ2
!>ZaT*sN]*,:G?-48h2C4#nf,%&a/j!!N`G*'8+grI5''K7S#C4XqWV+!1A#NZJ?D*ZcIW570Y@5t"=G
B6SoXJGam"F]:Ra)=[\1!sAfE0KB"k#Wb%.0d@GE$4+3Lbm=dc'-/,8+!;[R.lTLMr&Fp?1aa:Y%IjE$
"U#/I1]09<4$5S\,T.-l$N18($CM5(#RUnH(B,B\*ZlXU1,_3Ur&Oj=2?P9I(^u-!^&[s/"q)1e*A1ZE
qgSs(KR\#H6SBc/*Zk8"!$.sYn/`,]*$-.C-9"4W7SR$#GCP0pqgSftC.gfV2];,c#6P)7#7r4?3;bcB
3]f>V,T74%$J,Tl#n.(J)BU(E+t,*'3BB5!3<qH$0-VGX'b0[5#R(>;$P=aG4$*=$$9L@21FO1T%1<ON
r<NB0Q3n00#RUnH%i6?/+XSWl2EEo]r&P'F3%u["*uGEZ!1X#p$Pja(*?RR_I/8=!JV8SuAl:fG-6N@3
*Zk8"!$.^R!$2"X%3?Q4,VVS\=CZ>sJ:W7MJ,Oj&Hui@T5X7Om)=[\4!sAl9#7;>"2u5NA3]fAZ.NfN=
$OR0N$/#Um#RhIj+snfp3B9,]qDeg?1+44c*ZYt)nGigu":5DC#oYKXqDo$H4?GGR,8q1($O[:Kr<NB0
p^3u-!"&T0%13FM$ksa2-ndJ:3]f@u3X@]&-m0NP*uGFb!.k3b!!3ND*W@)_*@+-jI//7&JV/W+G%O]A
2(Bjo+!)IDr#>\WmN01c!$1tW!$2%[$m-T;/3m6JEI!%bJUmTH"Fb`<>=JKU!^AU]nGi[o":,;?"pkMD
)_O'/qDesF4$,GZ.j5cC%LEIJSI#`3#m^kE%i?WF0f_6T3r(c=3&`WB+8m5^*>K%R!!3<,$2t88$O\"/
3'6st%m)m93]8N7*#9(q$47.J$2b&/$/Gs:$31D1#S.4K$4@1J%MBa-0/bXJ4$33u"?81e,9?_)!>l7"
!.k4/!!3ND*W-r_)^IaZFaef8Iggm\KRnMi@SfEM/LD\@+9*DY)uq#/*pXjI*VpcT*r[5e+snp$6W%?8
If=luJG=TsIWoU07/K4N5;sJM!!36*#lP&6#7(\T-o3jX3=e/44?>DU.3KNA%h/jP#RRF9$4$qF%1j-k
+Xo3-r]9d6"?&1m-mAI/!Z`!bnGiUo":=u5"pk\X.lB=Iq)SmF4?GVa1+FIe((^oO$Mk#.$,[,J$31D/
#l4l5$kO3o,:YQ2r]Bj8"ZnOs-m0Q-*s!2e\H%6^!"/fC*Vpf])]pb/C3Y4%Ih@3^K7nf)F_Y2X68pPI
,U"<Qr#YVQ!$0Q1!$1hSq]5q`+X&*]0/s8):gRp[IY!0)JbFQrIX,m>:&$sT5;sJM!!36*#l=o5#7(VJ
*\B3.p,NXE4$5P`1G0sq)A<Yl$k!F'$.&th$4@7Q&/-!(-8%,73]oJbp,N:73&<!-+8HrZ*>K%R!!3<,
$2Ou6#mq:g/iPdOpGraF4?GV`2(p@$)\s%t%/gM5$iUM.#QP1\$31D-#lP)1$iLDA$kEsf)C$U_2E*]Z
4?NC#rAk-E2DZm2+!(/!!>l63!2TYs$PjcX*X<Z),;r>0Fa`q4!e>iS'n_0jIX#dC>>I^P2_QX-,9\0P
+!)O%*WR57)uq#V*Z,t?+!;[L,:4ln2a9c.>\7r"IY!0)K7SRGIg1=GDI61,5PRJG5X.1FnGiUm":4c/
#6tJ@'HJVY3:o3E3]fDc3]JuN.jQ2T(D@>j%13@Jb6e%P'+,!P%1j'a(E4DA.kinA3]oJc3qPE:2`EKA
,Tn3'*Wd>s%J^#"!!3<,$2+]1$Paj;2*!Yh3Y+;74?GVb2_cj3+rqR;&eFsM!"8Q/!"%?b!"&B,!"8c7
!=f_O(`FA>-nI/43BK;b4?N3s#WOn(1Fsgp*?Fkr!>l6M!/ggY$Pjc[*r?ua*#p+U7pBhSIIhpiJ:W:M
K+rf`G]@J->#S*`5<(JQ.Oc_l,U+E0+T<J_*qLKR*r[8Z+;>tC,UOlf.PEV=5=J:F>%;;gG^Y)?K*$UT
JGF]mIgCLPGAUS^9gM#95QX//)=[\.!sAo'$2t/6$5"4'/i5QY3WD/=3u9n:2)-[3,U"0G(D[Vp%h/pV
$OR.G#n$V;!XK)=rWrN1q[*6-!XT/=r<X8I#mgkE$OmLR&.fHh(E4A<-7LN$2`Nhr49%A53=%T'1bL'u
,9J$"*Wd>s%IjE""U#/'$4%"P*[rg%3B0(l3r_;?4;'\62`!'9-6aQP)AX)$%hB-Y%K-_4$N(;-$N(;/
$N1AG%1E^W%MBNo)B0hF,q:N)2E*\q4T@M53XI]!-7'r\*??4Dp)a;P%$(Cj!!3ND*V(6Z*?6+H1Itef
FaJOcoRHji"b;/TJqJaUK/\@1H?XLNChI6a>#eHr9h@iC5s@Cn4$#D_3B&lW3BB2_4?Pen6q9gC:Jt1r
?=RVaEHQJOIY%KN"b_M[JUr@@IgLRMFDP5R2'a4nnN[.?2];Poo`,$q":4Q)$O6nC$kjU,0/GLG3:Js.
3r:uS3]K#S1GUU7.4-;a+<MXF)]9M0(DR_b'a#-b'bpW^()@W$(E")0*?H:F+s\Ka/2&_61cRHUrB($@
s#TX0$90q%1G:-s'+G6\nK%`P'b0[5!X/]5nd5^3$471V*@WX!3'$Fg!]rJ)r&b*D3B&iR1,1F6.Oc\h
+X/$M*ZQ(9)&O2.(Ddo''c7`')&O2.)&aJ9*ZuXM,:4ih/MAh93&WcYr&b$A4$2pm$9L=.2)$F"'ak?\
n/hZJ%.!tG!7(WH$PjcN*Xj#.*[EC&:h"9aH@C>/IfP#tJcCB%K`6W(K)L6#JH(,pIKG"KJGk'!K)UE%
K`?]'JH15cIh.!SF_tSa5;4B'*$$%@/j]%n!^AU]nGiUm":4H&!!`o;#71bM)'11[1H%3PlT+l(r]:*B
r&Xm@r&Xg;q`+R8r&Og?r&Xm@r]C$=m5Yh>3B9#V1GC4")A!;`#6tM@&g&1d*Wd>s%IjE""U#.t$4%%Q
)'^Xc2)dP\3WM2=48q>B48h;A3rM,A3BB4s3<D6&3W2&>3rM/@48qA@3rh;.3YFM83'&uU0In@b'FY6S
$OI.S+RpNS(_"OeJcP<@!Xfbal5gKW)]TqH00Dm1AoDj=I"-To]mo^)rdG9(H?F1<=\M"4-QX6Hr#Pq[
*\KbL5QX//)=[\.!sAnq#nI7G#R:VC&JlK5.5*M92`U@g]f?W`2E*NN0I\:g)@m5`#6kA;r!<B:+7^HS
*>K%R!!!0'":=?#&.8dP$4RUc+!iKn1cIEV3'"6)"?AM)3B%=(1G1!s(_dGe$4@7?$3LP@'Hlof!>l6D
!0dHb$PjcR*qUKb*?6">+=Jp)7o<Q)Dfg5NI/SN3IfOrsIh-sRH$!t;?W'EX0.A"a)]SMm!#u%]/j]%n
!^AU]nGiUm":4,rrWa,C#7:nP'cS;B.PEP72E*TU3&ruYh)Xd](H=E83&rlU2Dm9F/12V](_I5b#RCY>
#PSN*&g-Zc!Z`!bnGiUo":=/s!t,GB$4@4P&f2N2.5!>32E:[r"$/G'43'At4$,Ga3]oD]2Dm0A-mB`M
'+PBV#mq(8$3LP@'Hluh"!8U%%#+br!;QTr$Pjc@*ZH+>*#fk=+=Ad!4\&@P@VK_!FEi+YI!pHmIt%6D
!.O$Z&q5=ZIsuipI=-BdFE286@TlT##sU=#-m9WO)]Tjg*WmB'/j]%n!^AU]nGiUm":3ol('k-M"pYGA
$kO'h)]p:Q/MAe51c@6Nr]'p<!''s<r]'+%s#Bs;"#r;#3;tiK2Dm9G0.n\!+WMC7&.JsR#6t/4nHf4/
+7^HS*>K%R!!3<,$2Y(k$31J4$5!XU&JZ-(+se`l0JbOE3&ioYr]1'?48q;?3rh;*3XIl03]]8^3]K/]
r](HJ2Dm6D0.S@m*uG_+%h&@DrsSZ1q$I30$5=WQ*s!2eTE(J^!Xfbal5oC8*ZZ4?)]Kh@+XANj1HIin
9i>"q?t3hbDK'T9FEDYLrcnHhqg8?hrcfK.GBJ"LEH#f3C1Uj[=Ahpe69@(Z.jQ;]*#fh:*$+>d!ur@7
62X"B5QX//)=[\.!sAn_$2k)M#RCYA#n.:T',DH**Zu[Q-RgT!0/,+81,:XB1Gq,c2@2<$2)R3H1,:R<
'JD*l.ju\h+s.dC().;j$jd7I#RLA6l3RJ(+7^HS*>K%R!!3<,$/#Y($4@1J#mgqG%1E^Z'c%`/+<`!W
.P*/)0JG6\1^#Zo3&`bi3$C1<2`EWP1c.!D0JG.4.ju\f+s.a>'bh/e%1<FJ#mq%JlO!_"$5=WQ*s!2e
r;_EL^&S3B(*1^BruM"W&f_l4+!;aQ,UOoi/2&b92E*TUr]:'@r]1TN3B/rU1GLO6.4-;c,9\-Lq&J?7
!ur@761R8B5;sJM!!EB,#RLgc#lt8:p]h98$4.%I%1NgZ&.oQi',:E\r>,AI$ksBh'GD,k%LrpU$OZk>
p':'no*GF1+7^HS*>K%R!!3<,$-ikX$ht&8$OmLR$kEj[&ek6Z!#GPMr>>MMrtbSK$5*s`%LijU$k3OM
q?d31i<fYm$5=WQ*s!2egAlg*huEfd(*1.2r>k\Rr>YMOrZ0E.!ur@761R8B5;sJM!!36*#i,gM$2k,.
#l"Z'#knT(#lP"X#ltY\nf@iQ'b0[5!X/]5]F+ZHq?m0-q$R-0nI"1]!sf5J+RpNS(_!qTK)blZ!>Z]/
*q:9R*$-^unj!7@2];,c!WrQ2]*YtR!>6LF*Wd>s%IjE""U#/&$A/Zc#Qb>I+RpNS(^u`2V#UQ)(*2?T
PTBoH*\KbM5Qa892];,c!WrQ2R0hRR!>6LF*Wd>s%J^#"!!3<,$&o;U$3LP@'Hlof!>l6M!/ggY$Pjc[
*eGI/*WmB'/j]%n!^AU]nGiUm":2=?^^1#S+7^HS*>K%R!!3<,$0hkU$3LP@'Hm;qp)a;P%$(Cj!!3ND
*SDL(*WmB'/j]%n!^AU]r;cKj!WrQ2OU:"R!>6LF*Wd>s%IjE""U#.Q$EXX;#RV7gnK.cK%.!tG!7(WH
$Pjbl*kiZt*$-^unj!7@2];,c!WrQ2mKnRR!YQRro,[rR'b0[5!X/]5V@(WV!sf5J+RpNS(_"OeJcP<@
!XfbaPoej)!ur@761R8B5;sJM!!36*#g<UQ#ltY\nf@iQ'b0[5!!NB+$%rZU$3LP@'Hlof!>l6D!0dHb
$PjcR*g.TE*V:BQ*!.0661R8B5;sJM!!36*#c\3`$2b)'#ltY\nf@iQ'b0[5!X/]5i<l=eqZm0.q$I30
$5=WS*s3T,(^u-!^&[s/!XfbaN?7m:"<AO(*$"qs!?N9X*WmB'/j]%n!^AU]nGiUm":2pP_$LDR#n%4V
'+bKW#l+c-&g-Zc!Z`!bnGiUo":=r4M[B^q#mh%X*#]S'!=0#/$3LP@'Hlof!>l6<!1X#j$PjcJ*h=>[
*??+<(D78j',DH+q]5hZ*\KbV5kdMF5;sJM!!36*#bhXd#n%"I)DFTS9LCKO$jc\9!>6LF*Wd>s%IjE"
"U#.b$Ea^E#RLqk=+6?tIoe*0$2b,4#RV7gnK.cK%/g0X!58F7$Pjc(*l&g"*??(8%/U20%2U#^*WmB'
/j]%n!^AU]nGi[o":,;?L^=4j&27=0GQ)dhEEY%+#l=o/&g-Zc!Z`!bnGiUo":;OEd0^?h#o6UEdG!@0
g<Zj"'FF^F!sf5J+RpNS(_#.!JcO^/!XfbamN2?J!?<,o*oe:E*??+6#PeN)#88-V*WmB'/j]%n!^AU]
nGiUm":4B$rs83&WsJn7%R"cTqf;m`D*/13r!<B:+7^HS*>K%R!!3<,$180"#lt;<XU=\-"pbMKDU."f
rRD)&g!":F$2t86#RV7gnK.cK%(Q@j!!!B-(*2ib$61-4,9\-M*??+?VB,j\*?H"#pB:U'(ENJr!ur@7
61R8B5;sJM!!36*#jr!!#lY/5#RLbBed9P,!\n\<q/ZUZDDV.r!>6LF*Wd>s%IjE""U#/&$N:A>#RUtK
$O[:J#m^j7$3^\@$X(m/q:,T"bub5M$31>5$5=WQ*s!2eQN3i^!Xfban/`&Z+"p#N4>SH6+s7sK*$#)#
*$)+%"!&C$$hXZ($6/sc!ur@761[>D5X.1FnGiUm":4H&%1!Oa)\s"q$OR1G#mgmJ$1J6'#SgfmpN$FY
@20%G#ltY\nf@iQ'b0s=q#CI"":=Q)#m^nO)B0J,%LrpH$3UV@#RCa@$N1;7#RM]bg%X#'f!l_,$47%G
'Hlof!>l6M!/ggY$Pjc[*qgWl*@tE,An>=P:d[5t.jlPc+<MXE*??+>*O?dg*?>sj"oST0(*=S=*$-^u
nj!7@2];,c!WrQ2n-Kg7%ONbZ.OcVa)ANkq$k!@J$4."E#hfU8#lui(oQ($h#5ni/&g-Zc!Z`!bnGiUo
":=N(":ue*-R]TQ,Tn$@&e>H]$OR1I#RLeC#RRgE!sf09f_*c#e6N7c$4$tQ+T*>T*s!2eNrZ9^!Xfba
n/_WM6"p7.!+l.A$tEXI;+Wr00InLs+s@(3+!)CArZ2"YruJco!Z`6mo*#@2+!)IC*\KbL5QX//)>sR.
!!36*#k/-%#T52l.M40_.k<"n*uc(3&J#9Y$47(FrX&Q0_$TlC!X_PDolC1V9aCV'!>6LF*Wd>s%IjE"
"U#/$$3CMP/,Ue*-R^Ah,Tn*D'bLrd$k*OC$NCD2$3(;2$2b.I$3LP@O50EY#hG(C$47%G'Hlof!>l73
!.k3s!!3ND*Uk*O)aS*3A,p3?Aenre?!1&u6p*@]/Li+o,9e9R+!2OF*;U]R*;poW*qUNN*W-oR*<I9'
*;1EU*??+0o*#@.*?H7A*\KbL5QX//)=[\.!sAnu#lkhC/bpk+.k<2'.k)ej+<278'G;#W$j@"G$4-tF
rX&E,h$No`rWrQ0oa([-=*O=Y!H_HA#m(_]*qLES*>K%R!!3<,$1J9(#T5!=pa?t,-R^>i,U"3K()7Jo
%h9!U$k!CM#mq"Fq?d'*r<`!$r<`K1r!<-*!X]8?p'Lp.#S*Zap!j?!W<`h<#RV7gnK.cK%*AR%!:^$j
$PjcP*X3W9>%1uPAbT^8Ac63TA7AkL<`)R\5<Ce[0J4k(-RL,b,5rba+T<JO*r@#g+<VgN+sJ9Y-7:2k
.k1NFp)X8U)\;ND!"JoK!ur@761R8B5;sJM!!36*#k/-'#S8:2.J51i.h=3`.Ocbk,9\'G(`!i!&.f-W
%1EUQ$OR7K$N:A3#lb8#$2k52#lb50$3CSB$iUP9%1Wa<#m(K8FnKeWFBJtL#ltY\nf@iQ'b0[5!!NB+
$1A3+&0iPO.4Qbqp*^e+-R^>g,pOQT*>oV,',1ug%h9'X%1EXQ$iUJ8$OR1HmgB""$OR7K$4@4M$k3XU
%fQt>%Lr+=":,U8gXZ#J#hGs_$47%G'Hlof!>l6D!0dHb$PjcR*rR,d/kAlB?!q,PA7bFEs(2+?(1^l_
?<^N2;,'YR76j$u3B&cN1,(@7r@J"#r[[st""Z#U0)[F:0ekF>2E<i_5X\+79i4hh=]S$@pDsAV*>7rI
!"o2O!#u%]/j]%n!^AU]nGiUm":4H&#6tn^+=&<`.Intf/,h+6.k2tt-70u]+!)C@)&O/*'bqAprXf/B
&cN:K&.f?]%Ls$]%hB3_((_&i&.fEd',;9!(`=;5*ZcIK,U=?=p'Cd-96^#L!DNgt#ltY\nf@iQ'b0[5
!X/]5mKs@6*?ZOO-7:2j.OcepodC_+-RgGl-RC)b,U+ER*ZQ.<)AX&%'GD,m&JFsP":bqP%Lr@J(D7>m
&ebrm',2/s)&aJ6*ZcIJ+s\BP%/1)2#Rc[Jp!j?!OpDC%#RV7go,e&V*uGE@!58I/!!3ND*UXsV*?QLW
2aL/;>$YNFraZ"?nmq`2q.:%HA7B"V?sm>J>[(B8rE9,%#?b25>?kE=?N+:8?smDPA7bLI!bFhAr#YeX
!Z`9toE>L*(*=S=*$-^unj!7@2];,c!WrQ2mKj:-#n.@Y)'0qI-RU>lmOJ2dqCN++.Ocer.Ocbm-RL,c
p`p(j-7(#d-7C;A.0D%K.P(?Ir@7me#keQ*1N`;2!c^%#r<WK;+7^HS*>K%R!!3<,$2Y)#$4R@S'cA&9
,:"Wa.4?Vpr[I@cqBl\"-mpAg,pjob,pXc]p`p(h,UOfb-7'u;-N>In./G=j-ikb;pBh$/#[5j2q:5Jp
#h*&a$47%G'Hlof!>l6<!1X#j$PjcK*WR2j*$-4L/iQ!c:K:V)?X[FCAH-6,AGBa2B(fg,A-#^Sp`9MX
*?#@["UPA?)]p+B*$-^ur':!A!^AU]nGiUm":4?#&I/RI#7:nN'H.r6+s\Nb-n-V*.dS\`.e>+j,7=/O
!sf]PFSBhYEFBRer<WK;+7^HS*>K%R!!3<,$0V^+$OdU\(E=MA,UF]_-RgGF.4QhH.DdJ5,khWK#RVcd
f_<o&f!ut1$47%G'Hlof!>l7D!.k3b!!3QE*TeFB*>'A<.5*VC7S6QY>$PBA@:E_VrFGq>raaAd"D).S
:*93O"!&Eu#l"Q*"pbtdrZ2.]*\KbL5QX//)t<n2"9Ji8$0_`r#Q=u@#n%4T'Gqc1+<i*Z-n-Pn.kAOf
!?MU@#lul$rH%mX"*&09#lFu0&g-Zc!Z`!cnGiUo":=&p%LW^X',MW/+<r*V,pXfbr[@aps!msrnL3NJ
r$_au.OQ;EpBh$/$=2!0q:,Sub?bGQ$3LP@'Hlof!>l7"!.k4/!!3fN*T8%[*?6%>*ZuXU0/P^S7S6ES
<`iR2?=.)K@:E\VA7PCFo4@f0pgaA6ra>t<?XI)<0(^1d*"iPR"Tel6'`9!S*$-^unj!7@3$@_k!XJl6
iX#Sir<O8I$4RIV',;B(*ZlOK,U=`c.4HYp.4Zks/);ZY.4Hbs-n,'D""5?*#PJH+#7a.=qJudZCdJI6
r!<B:+7^HS*>T4V!!3?/$/>k*$OI7T&eu6'*?H@L+s\EY,UOic-RL5j-n+m?o.'G_$RdDP.4-Dj-70u`
,68u$oEk^3HcjpkrRM,'f#W1Kr<`W4$5=WQ*s!2f\H%6^!$q[g*ZWoU*ZZ7@*?H7E+snZg0JkdP5Xn::
:/=_d<EE:*>$G6:ra#G.ra5Y2rE]D-r`]k9=B/<u:JOPR7RK@%3%=J@!Z`=%$Pa*V#6kD<#RqIg+8m5_
*$-^uo0<CB5X-mk!!3W:#hoXc#Q4oH#71\D$P*d\',26$)]Tn?+!DdO,U=T\,UOl=-i,7j.JtUm-NGLm
,S)1H+sA-Q*Zc4=(`=)&%L;V4%1!D)?Ys_%EGo]"3Xl>k#ltY\o,[uS*>oIZ!!<c<#mg,0k6_1qr<aGO
%1EaZ'G_K$*$$%A+!;^O+sJ6V,U4Q[,:!+4rZqIhs!.If!$hIg"!]!7+oNJe*ZQ+7(DdPQ$4[=J&S\Yq
daQ[nb-GRi$2k22#Qb>I+S$TU+<))_!2TYu2*i?**9/+1*r[/s*#ot?*ZlLI,9nN_.P*/)0JYIB3&ru[
3r;#W4$#A]2`<KK1,:O:/Lr7s,pFKT+!)ID*?=Vk$6:0/)A<Ym%M9BnqAo_Y*\KbN5QF"N5XA@-nGiY,
'*nln$3(8-#SdRN$4.%H$k3^W&.]<a&J>ck'GM8srY>YP'c%Q"'`A[F')iIJ&.]9]%1EUOrWrQ2rWiK/
nd,[0#oc!&<`VsW)[H`G#ltY\oH",U*ZcF?q#L3j";r*b$4+rb!"&W3!=9,4$O."J%M'*`')iOI(D[c$
(&f!W(`4&('c%T#'G;&mrXoDH%h/sU$4Hb=!"&E-q?dW:#n&G'Pbb(<Cb>u"r!EN3$5=WQ*s!]+YlK[^
"Z1!U*Zc=#*m#K"*UFdA*TeCJ*?Q@C)]Ke>!$D%Y!ur@761mJH5<qJ3E&[:e";iU($O=`ZrWhs!m0N^s
k6VA!#7D.V$j[.6#ltY\oc=8W*Zl^\(\%J/(+pF1$4-#+cO0OUrsJ`3fEqli#7(eX(_-cUq?d<1$5=W\
+86iY,qg-s!3H5+1jF%)+s%^DhB&1.!ur@762*VL5<hD$<d&^Gr;cKj"VraE(CCD3$1S?$#QP,'#ltY\
p)XDY*ZcXb1)KH\#8]9T)%$]V#gE^f$3CM>$24c/#RV7gpE'V]+!2UQ2DlB=!.k3s!!k6"JTXI3+!)H9
*kiZt*$-b!pco*L5X7kFH%C&lnGie-0fh-1%L<=2$&&Ze&g&1j*XEc-*[)sj3A20<!!jAo3&Vff$47*@
$I9%]#RV:hocF>].l]OE(<QW/!:^$r*cc^\I:+uX*ZZ8l*oA"?+#-(Y5RTe@5X7b:C4:\_F!C,S#nAUH
3]JK"%1*<h$)e.3#SnNY*XWo/*[)d^3'&rN&+KW"%LFgN3B&E*$47(GN!f"\!>cmU*rmA\*sO&J3B9,V
&#]Jm!"9->H@LHsFAXe=*uu@!*eYR8*$,/*3^N^0%6m'B5XeIXG_(?oH=73O!"/oZ2E3`[1ER5<#RIaC
apA+V*$>,#%36H1*[)dY2``rY2Ceq#!"8u[2`WlZ2C&tF$4."($C(r$#RUtY+S[#]-SIG>3WhB"/-Ub.
^&[p.%Ol+=It*$#E`4kD+W_XDRNC`8(*"A<00qig5<hCu6Ut!aG_(BpIsYo_mf3e/.lTFJ3]o,<&e56T
#g`m^#nn$q*Zc=B*ZcCH-7_#93]T/Y.22.M#8A^I4$#A]1^53A%1<LL#`/oc$3UVA$54QZ*t',4,qq5;
3BB5[0,C/[RfF'%2.q>dIt*$#FBq3c,Tn*J*$+ntNZJ9B*Zlp356O5:6UaZO>&&;5JGt$#HYbhImJmb6
/2]=G3BB8Y,oR='#mgmB$.K7^#SI%V&0;l7+X/?e2``u[3B/rK)ZoF-&K!#Y4$#D_3&N-(&I]!Q#m^k&
$D.Y.#RUqP*rR/j+<MpY1c@?S3]]>\0-(,l!.k3`!!E<T@sNP&Iggm[IVr(I/gMS]*??-T*jQgu*$-.C
/3Q6`6UjaM@s*6OJGt$$IX>T]"76'i!>?po2)mQU3BB5]/g(o@%13CI#a5Sh#ltDGrZ2=e+<i-_1H7EV
r](*@2(9:Am/Rh$(+D+$4$#D_3]So>)\EGc$4."Eb6l,o!!rQ2#ne1"+!)RP-SIFX3W;&B3B8T+!ndR*
!8IPW+B!')If=g-J:W;uDHK7].3p#W*??+>^E1rI%icQ1*[EI*7S$9XB68QQJc1'%IXH*:-3<B3":ZV.
2`L[q$p6X3/g;2G%LWRL#RL&/SI#`1#n.Oi+<i$[/N#LK3rM&B2`E?9&HVk2m/R5!,;;+T3Y",12DHNt
'+PEZ$4."E#d+Nt$4I1G$471W+!DdT-SI@V3W(o@3&)`k!O_u[!;um$$T;@1IX_6F&V,IbIWApp4u+Q4
+Wh[E*?6&n*rR/Z*"Eu0*Zua]5YkEhDKpV]Jc(!$IXQ6F4:UHR"p>\k0K1pMr](KM4?GMY-QX'9%L`[M
#m^gg$,[&Z#RC_B$kOI(.4Qu03BB5!3<_?$0.@\@k5Y\i(b..!3]m=%!]`;&%QQ<s,8q4*$k!FK#mgkC
SdPH&#mgnF$P!mk-RUJK1c@<R3Vti?3AN$&#Ef(Y!!X#t?uC=>If+[+JV&K$E+2^42_HI&+WqgH"<AL&
*$)+%!$2%Y&KMl5*ZuUN.5!\X@;g@=JUr@LIgLRPHuWU])$'^;jo>Sk)(I3r2`U^q%QZ^72_c^&)A<Vk
$OR.GrWp+BlNn%,#R:YA$4@:S(Ek7^2`Udtr&G!?3&`K@)[c]<!:g*o#9,*G2`Wnr3XRl.3]JlF,T@L3
%K6_8$N:>5#RCaB$Mt/1$2t51$3(A3$O.%R(F1Rh2Z5Z63X7`*2DH[%$N[:.JcH#f3*0a7IXQ\CIhI9_
JqAGqCgBh(3A2j.,9\0N*;plZ*#p!3*WR5[*;plb*ZcFI,:+in3^Z^J?>b%=JUr@KIgCLOI<K7+4;\+W
!!``H-7UW,2`U[p&NW!93&E36*uG\(%LiaP#RLh9#i,g?$2k,=#mgkE$4RLX',ho?/2mGfq`+p?3&iZE
,o[-khuEue)CR-n3]K.s3W_<&3Y"/.0IS(a((q/f$k!FM#lP&2#RCaL$31D3#lP&=$47.K$k3^[(`O\J
1cYFoq`4g@3B8u".Oc5CL&dqJ#m_eC?YFP0I=?YBIh.'\Jq8ApDe*!E5rg_Q.3o'A+sA$L*;^cV*<.&-
*rd8[*;^`k*ZcCH+sS?^/i,OS9j2(HG^b3qJUmTH#_%2NF_kJW-k,YHl2Uti%id#I0)dd03;Y]N3]oJb
3&NB>,97X:&e>H]$OI+F#mpJ7aU.nO(C19Q#m^hD$OmRW&eu?+,UtK,3'',`3r1iC2`NcQ/h.qT"TdBY
#6PMX/1rb?3Vb]N3B0&[3]AcD,p4*@'+tc_$OmIO$4-M8":,8>#n#,grsAZ1q[!uE$4@4N$O[FV',MN0
-7^l13]T5\3Vb]A2``cJ.NfB/!TF*2!5SXA&1BqOB5`*GI=D!A*.WTlJq8ArEbf)b9gq3)1G1.),pXZY
+<VaI*ZXhnr>b>Ioc=#Q)'9tD+sJ9Y-S$f*3'Kc+=(5rdH@CEsJq8IJIgUXRI=60L?qN*g!nI>V#881.
.kih?!]N%tqDfES4?P\d3&NEA-R0ZP()%;k%LrmT$4."E$N:A)#jhrk#lY,J$4$qE$4@7P%1j-c(*+G?
-nI&13'',`4?E9u"ueJ#2_Z^1"!A9a!S.5X#7qn*/MT.D3''.t3WhB%3]d7#'f7Tp-6X?J(DIJn%1EXP
$OdCL$47(3$1.uu$2+])$5j-X$k!CN$k3a['Gqc.+X\co2E3]W3]]5\pGrR?3]8N@+r1Ld]`<WahuF,n
,!T%:BlSHKI=?Y?IfY(Nrdl2BIXH?[Ch6mR:eF/@3AiQF/Li.r-7'l]+sJ0S+X-:s&g8DB+X/*T,:+Za
-n6i&1,V*W$UmZb='fHSF*N(]Jc:6%JUmNFs*jrq#BXZi<^J2F!RLfT"V2Ot/1WA43&`cU3;GQH3]]Ac
4$5J_2)-[4,p=<L)A`u#'+kcd%h0!X$k*LN$4@.I$Mt/,#l=oQ$47(I$47.L$k3[U%hK9a',;<'*$-7M
.P3>53B0,_4?PYcpc/aB2`E]T0J+b%*"`DVhuN9I$j@.]-7g]&2ENlZ3BR$ts#L'>+#l;?2`*3?.4$2^
*#]V.'+tog%h9$W$O[@M$4R@N%/^J0$iC>R$k!FP$471L$OdIS%hB6b',;B'*$HOS.4m532E*ZVr]:'>
p,WO?3B/oJ.jl;M"TatjJcH>^!!Eua5#Pg$D01,SI=6QnpO<6pJ:[WM)hEHcHZj@FCM.-`>$"Tu9hIrF
6U<q#4Zkhg3rM&X3]fGd4[)(r6UaO<9i+_h>$kcPCMe'7H[L9nr.5!$J:R?Cs*jrq#Bk-!@okuM(B=`_
!"K&:&03#H.PEM73B&lV3;,B43rD)c3]K&V1bgX7.Oc\i+WhaG*#]e8(`*u((DR]$(DRZ$()@W$()@]&
(`FA4*$$(B+XAEa.P*5-1c@?R3rD,?3qYKB3&`cU3&<3=.juDQ#mA?M%KQkL)^?mb/Mf=H3&ioYp,`46
r&Qo"3B/uV1,:L8/1Dnl,U4HS*ul4=)B'P5)Aj5*'bqK"(`F;3)B'P6*$67G,:"Q^-nHu(1,CmL2`Wnr
3r_553Xn)13&ruU1+4V"*Y\tbnGn.@^&[*l%L!Ce1eCb[B5;O5I=?TmrdOKhrdb$"pjr[#J:E#rI/\Hl
Hi&*gHiA<pI!pHnJ:[KIs+10"q1&6js*jrq$@6i6ARo"=4!bXK_#OrG"qDFm-7gVt0JtdK2`L^qo/Ze2
r]C3C4Sq5F3]T/Z2`Ner2Z#B22?l-#2`NcW3r1r=48qAA3q>923;tiF3&ifQ/hAM$+WCq!"OI/>!"]5<
&/ZQ>/M&J/1cRNV3&s"i3rV,>3;>NA3&s#[2`N]R2`Neo3=7`*2`<QR2`WoZ3;>N73;tr/3XRr03]K,[
3&<<<.0V1H)\EAZL]E#,rW!?4'-f;":L%FDCN+HCrdOlqrdO-^m==DM'7PCYI=?TmG][n:@UN8,3%,XO
"7cH4!!WN2%i-01-iPY#0JkXG3&pmrr]'.&nN-M,mlCD-r&5*F2`3?C.4Hbm*Z>Rt"9H"4%0HkI(EOeP
/Li>*2)[K#3B9&Y3]T5_krS>pkW0D>4$#D^3''&Z2)-j:/1`1l)\NM^huJ?/S,a*%$l1*A5"SXXA7oUl
E-?JQr-nZos*juse:7IH!I]FqI1L[MFE),0A78S96oQS:%L1&UirB\q#nRdh+<r?f.k</(1,LmJ3&pgp
q`*7hr]'d6&ND^-2)6g9/1N1s+W_L7$jHj:!#kqB$5"!o+s\Wh/M8Y02)R<R3]T5^3&irZ3BI.$ofD1q
#!4n,3]]5]rAbEJ2DHp?.P<2",9Id;%1!%:\c@<^[f@?N%2Bp51Hn?-=C>TJAnYstE,p,HH@1*gIsukG
IK"]`J,auqI2IE\H[0j[FDu)5B4PFX?;sWe3\Vm#&.&H5!"8i-!X/i<'GhZ2,pt2A.g@FR/MAe62#TB4
3;kf83:Js-3;b]Q3&`cR2Dd*?/M&G'-n6Yn+WhR9&.8^H!Wh!Ta8d+\"pthP(EFVF-nHo!/1rP/0JkRC
2E!NU3BI+!"$/G'47G9248h2>3;toC2`<NL2D?d<%kB%X.4cej*ul%/%0lt:!KmG7!7:cX!XB/K(a1:^
3'Kc&9iG(t@/aUC@q9+^Bl@s4GBnFZrHf!"H?jd[G'%bCCh[Qm@K'XF>?Fj"91;$'0d[t['FY-IpAgT]
&Hi:E$P*md)&s\?+seQa.P31L.0(k#/MJq7r\X[6rAP9I2Dd9J1c$j?0.e_)-RU>lr[/.!+WMF<((^r`
#mCG4!O)R`!##A8"UPPI&/H-%+!DjU-n-Yt.P1QL/hAV01H%0N3B0#X2`WfV3B&iS1bpd>/hJM$.Om&%
.46>b+W_L:&Io6U"p+i,k5^)6JcOs6/HGqV#7:qP'GVE%*$Hdc2*!c_5X@_'5sRXt4$#>Y0I\:k*?#\-
&.JpM!s/MG!3uS>!<<-$!WiN0#71YD$OmRY'GhT()]\esrZ(nT%i5rm&e5<Y#mpnA"Te])!58HI!#P_:
!<N?+!sSu:$4@4N%MBNo)B9b=*?H:#*>'50)&F#$&.]3Y$4$kA"Te`+oDjICJcO$q/HGqV#7:qP'GVE%
*$Hdc2*!c_5X@_'5sRXt4$#>Y0I\:k*?#\-&.JpM!s/Ma!13a$!<<-$!WiN0#71YD$OmRY'GhT()]\es
rZ(nT%2T`k&e5<Y#mpnA"Te^n!8mho!<<-%!sA]1#71_F$OmRY()Rr0*?H4B*rR)k)]KY2'b_,h%1ERL
#6tD6!Wg^LJcN1YJ,~>

%%EndBinary
grestore
np
122.009 382.393 mo
121.905 382.393 li
121.905 377.893 li
122.009 377.893 li
122.009 382.393 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 1.32416 429.032 ]ct
[2 0 0 6 120.018 45.6806 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 9 
/M[3 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa]~>
<~Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IU~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
634.676 446.685 mo
466.009 446.685 li
466.009 278.018 li
505.502 278.018 li
505.502 286.33 li
593.817 286.33 li
593.817 278.018 li
634.676 278.018 li
634.676 446.685 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 1.32416 429.032 ]ct
[170 0 0 170 464.018 -18.3194 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 255 
/H 255 
/M[255 0 0 -255 0 255 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 255 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 255 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 255 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 255 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&nGr(ZOob1Uh>jk`!!*'#nGiOiPQ:=U!!1pVZNC.-nGiOiPlUCU
!!/2^JcLB&nc/go!X/c9%$qFo%0[4M$3pY7irB,`+"FcKr[@dOp&G6s!!<B0$CD.i#m:S?#6b1g!!33@
+h8`o+TD]?!!NB(!WWB+R0;m[!WiE(irB)^&\/_U(]OVp!6Y?D!=0+G$i:>3!r)a#!<s/Y/MoLORm6:)
#<Y"&/0,6'!Tj@a&sp8F]tO9Us!7@>#6=o7'HA>B-CcIM-O1qB+WV4(!<M<_!tK^LS\CWiSGsW)!!`N,
"q(qU(`8e]lPTpD((q,b"TSSc!!<O&?=:NVpgO19N<%!!!sBr(0>K:90`MLV!!iT.'eDC.4?Ym"5Nb68
4?GYb,Rst?!!3h'^VI\Z_>beW!!<6(%3,9j![K*>TI8qN#UUfC+X8-H#m'2h!Y9mS_4gOqruV":!s&H/
&cNIG'bqOY)!;_A)&Er#',1o[!p9Ob$;P!G@J"".&s313!!3<O0>fL80`MFU!!NB6.6'FSN^3)!"[>%+
*<lQ/!!3h']sYWU,QK+e!!NB/)^?RTO!sHF"XG67'ES="!!3[_S[G-j*r>p@!<s&I',ZfKmMQ0F&ekWT
!U0Rc$;P$<@fg-Q&qp>L!!!&a!!3<O0=N\91&hOW!!E?;00MO]5jCT;5<^G%!U9Xd':Z\F_#D.L,l@WF
!Xp%p-BT_@-j(\?)$]=*!Y9mR\Y/noruV%;!sfJQ(Qo[")$:Zj%Ku"r!X_\2\mtYJrt:.gb5_SI-SN(d
q_A*Vr;Zp#(,A"85ik655<CD%l2Ul!S%ZJMqS<+Vr;Zs$%3?cBPUPT@"",62#O29j%t^@cT_Y8\*rH!?
#S7^fPo8U"!uM[_!pTae$;P$DA,'R6&rcn3!!3<O0>B791&hOX!!3cc4dA:i5QX%q#3u6j':Z\N_"PSD
,lI]E$QLIY.,H?R+rCIK!!3[_S\^ulT`6)3!!3E;(7,op)$1K`"7#pg$;P$HA+X:2&s313!!3<O0>fO9
1&hOY!!3KT4buAh5Qa55)[#F,!Y_':[D2bf!$qOD!sTYi-]0>;-j(hB'*7G"!Y9mR[@mO@rW!$'%N$%@
)<i"@(_dA[li7(o:1:S@!b2iUK`KF!!X0r)[kS1D0aJ$b!!*ur5)_bh5Qa/,$3BMo!Y_':\A8*Z#:(Pp
!!*TR-&j>7-j(V:#6F2l!Y9mR\Y/no#9Fod!!*H?(609n)$1Qf"RH*i$;P$@A,Kj:&r?V3!!3<O0=rt9
0a7mh!!!HW5*%tf5QX%k"RQ0j':Z\J_"thN,U<?i#T4tN.,ZKT+VOqE!!3[_S\:]lTEZGY!!!05(QfTm
)$1N^!UTjg$;P$DA,'R6&rcn3!!3<O0>B790a7mh!<F&q4d/.e5Qa/-#6F5m!Y_':^qfZZ"sbGp!>-M%
PUP<8"!\rl!U]ph%t^@gT_4r^*Zb=_#n[r<);?#2'bg`NmJm:q:1;"LoOIn6OT<u5!!2Kf!X0r)__La;
rs/]1"X?0b5j:N95<TY]mJm;%S%Z5F!$h^n!s98a-\s27-itbB%da5t%t^@[TEZGY!WilJ(l9-n)$:]n
"Te#k!X_\2[UTAK&e]lucN""M-SMq`#;Iq=#S7Ou5)MVd5QX"j"RZ6k':Z\F_#D+Q,U<[&)^^Ikj!XsP
(BX")!Y9mR\Y/no"We]h"q_Z1)<)M8'FFs1!!3L&@CftHA,d0u!6Y?D"Xbt81&E[/#RD4_1d@!ci'7?'
.L#5?!Y_':]YOBZ"XG?(%j36\.,QES+rLLN!!3[_S\:]lTEQAX#6tnZO;Zmm!YGqEmJm:q:1:kHpga=:
N<%!!!X0r)^G5I;":,8Q*'03Igctp%/dC_D!Y_':^qfZZ"XG?)&1&]f.,--O+W^dS!!3[_S\^ulTEQAX
$k*jfPSr0m!Yc4KmJm:q:1;"LoOIn6OT<9!!X0r)__La;rs/ZK+?tQFkWf231'd4I!Y_':[D2bf"!eQp
-AEr3-itV:"RZ6k%t^@[TEH;W$k*u.)<Me<'G1E7!!3L&@CBYI@hKE.!7(WH"Xbt41&j!.#lc$'5ib03
4>R<3!!3h']stlW_#G\['o=@!-itV9"mu?l%t^@_T`(P`*rcS))<)M8()-l=!!3L&@CftHA,d0u!6Y?D
"Xbt81&E^*#lc$+5i=m/4>I62!!3h']tD/W_#G\['oaX!-itV8"mu?l%t^@cT_Y8\*rcY/);Z54()$f<
!!3L&@D67HA,d1$!65'@"Xbt<1&!F&#lc$/5hnU+4>I62!!3h']thGW_#G\['p0p!-itV8"mu?l%t^@g
T_4uX*rcY3);5r0()$f<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."#lc$#5j1H74>I62!!3h']sYWU,Q]5+
'nn(!-itV8"mu?l%t^@[T`6)5%#,Y^)$1Qe"7?-j$;P$<@fg-Q&qp>3!!3<O0=N\91&hOZ+G`;D5QX&'
$17cp':Z\F_#D.L,l\U9.,u]W,9I*W!!3[_S[kElT`6)5%#Pq^)$1Qe"7?-j$;P$@A,Kj:&r?V3!!3<O
0=rt91&hOZ+H/SD5QX&'$17cp':Z\J_"tkH,l\U=.,QES,9I*W!!3[_S\:]lT`6)5%#u4^)$1Qe"7?-j
$;P$DA,'R6&rcn3!!3<O0>B791&hOZ+HSkD5QX&'$17cp':Z\N_"PSD,l\UA.,--O,9I*W!!3[_S\^ul
T`6)5%$DL^)$1Qe"7?-j$;P$HA+X:2&s313!!3<O0>fO91&hOZ+G<#D5QX&'$17cp':Z\Z^];.8^]5V]
,S_&J.-Du[,9I*W!!3[_SaE'OTq@t:U$JBO*rcY')<Me<()$f<!!3L&@I.M(ABeTc@hKE.!7(WH"Xbtj
1#Ohf1@6gr1&hOZ+G`;D5QX&'$17cp':Z]'^]VKn`Q$oV!Q)\B_#D.L,l\U9.,u]W,9I*W!!3[_SaN-Q
TrG&ljJrBaVkTpUT`(P`*rcY+)<)M8()$f<!!3L&@I@V-CMnEHjF78UEG8nQA,Kj:&r?V3!!3<O0CCOs
4\/gijCeTu90;]!q_A*Vrud7ci'7?+1(!@K!Y_':n%]"F_Rea;"1u4b`UptB_#G\['oaX!-itV8"mu?l
%t^AATECadXKLQ_"fnW+WM,sYT_Y8\*rcY/);Z54()$f<!!3L&@IRb/Aoj3/ihcmTUQBS/AGB[0A,d1$
!65'@"Xbtm0`s73T"j:-"j"EI;Dg9+1&!F&#lc$/5hnU+4>I62!!3h'^$rf>aM56ri4/s"]Z7kb_"PSD
,l\UA.,--O,9I*W!!3[_Sai?TTrbDrhl6dXX/hulT_4uX*rcY3);5r0()$f<!!3L&@I[h0@==ZFhkgLT
TmC8IA+X:2&s313!!3<O0C^b"0PA&@bMUGD]jEVp1%R."#lc$#5j1H74>I62!!3h'^%&l?`4idlhRN`t
^;RkW^]5V],S_&J.-Du[,9I*W!!3[_Sai?TW3!"uhPp[VX/DTZT`6)5%#,Y^)$1Qe"7?-j$;P%#@g$4\
Su/LDV?3fiDt%6<@hKE.!7(WH"Xbto0`it%\(o+-bI'n21&j!.#lc$'5ib034>I62!!3h'^%/r@^W3jq
gpmKq`kh8^rkSOZrtUA=j!XsR*sM'4!Y9mRnt6&VXfL0U!Nr-gT`(P`*rcY+)<)M8()$f<!!3L&@Idn/
@Z&m:!NCeFA,Kj:&r?V3!!3<O0Cgh"0S[]mgr]]BHSb@Mq_A*Vrud7ci'7?+1(!@K!Y_':o=tLD`59-r
gpmKr`522`qS<+VrtUMAh^AON*sM'4!Y9mRo:Q5YV6Hqugo:FVXeYZaq4Ra/rsXo*hAHA1'*IY&!X_\2
o4%o4As9*kgnk.NP%j`%pga=:N<%!!!X0r)o.^>$3MjgOao]hX48L]+1&hOZ+HSkD5QX&'$17cp':Z]+
^]VHh\[pS,!k?+bqnVp@s!7UZOXSs4![AcjmJm;!Jt;J*!MZdOWWK6)UAU\WT`6)5%$DL^)$1Qe"7?-j
$;P%$@fg(URG+M>Vj;,sA+X:2&s313!!3<O0Cpn$/jZkebM:5AbGmc*1%R."#lc$#5j1H74>I62!!3h'
^%9#B^V[du]%jgt\AZ5Q^]5V],S_&J.-Du[,9I*W!!3[_Sb&KVT:r?cgSt=SXeYBYruV1KL)K+k!YuFO
mJm:q:1<a(!b,i0g84qNP%jGr!b2iUK`KF!!X0r)o.^A%3iL-Cgr]]BSicKts"XNZrud+_j?Nc/1(!@K
!Y_':n\>4H\@UJ+!k67eo>(@@s!7UZM(%C4![AcjmJm;!Jt;G)!O/NVWW96oT`(P`*rcY+)<)M8()$f<
!!3L&@I[h.M5]1+!i^ocojdo0rt:.gb5_SI-SP!E!f4n?gr]]CIl-jRq_A*Vrud7ci'7?+1(!@K!Y_':
o"YFDa1f*q\DOgu\A#rU_"tkH,l\U=.,QES,9I*W!!3[_SarEWT;eolWiP$W"0&H%TD5)TT`6)5%#u4^
)$1Qe"7?-j$;P%#@g-7_Su/B_hkgLTS8r09A,'R6&rcn3!!3<O0Cgh$/QB7&bKJec"3e;M1\rj#1&hOZ
+HSkD5QX&'$17cp':Z]*^]_Ko]=GK0\cKI`q7u^>s!7UZOXSs4![AcjmJm;!Jt;G)!M6IMWWT3#WhK<_
oq;=+rsY&.g)0r-'*IY&!X_\2nRDW0Jtq2"!i_lEqd]8.rt:Fo_Z0`A-SP!E">Fu6b0&Yc"3SAo1]9'"
1&hOZ+G<#D5QX&'$17cp':Z]*^]qWl`ko@"]&^I*]">i"mD&]I![JKqKdc+4![AcjmJm;!Jt;G)#+hEf
YGeG$jJ`9_XK&@qm\'S$rsXW"jr"49'*IY&!X_\2nRDc4AUTl@VPN:M"Jh`[H=cPT!b2iUK`KF!!X0r)
nM(5%1M3`)`lI/["NA0X@5[O/s"XNZrud+_j?Nc/1(!@K!Y_':nA#7E^r+45`Q$rY!Q;bB_#D.L,l\U9
.,u]W,9I*W!!3[_Sa`9VStMjYYH+bdXTGQ'V!t&UT`6)5%#Pq^)$1Qe"7?-j$;P%!@g6CNCj1GeM<0Kp
KQh0>nmhT-rt:.gb5_SI-SOsD"u%Yp=`T%Eja[GS=["J01&E^*#lc$+5i=m/4>I62!!3h'^$WVl^[o8;
_#G\['oaX!-itV8"mu?l%t^A>T`:YESc58RT_Y8\*rcY/);Z54()$f<!!3L&@I@V*@GbGm@eF7+A,d1$
!65'@"Xbtk0`isZ/`SA`/M/[M1&!F&#lc$/5hnU+4>I62!!3h']thGW_#G\['p0p!-itV8"mu?l%t^@g
T_4uX*rcY3);5r0()$f<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."#lc$#5j1H74>I62!!3h']sYWU,Q]5+
'nn(!-itV8"mu?l%t^@[T`6)5%#,Y^)$1Qe"7?-j$;P$<@fg-Q&qp>3!!3<O0=N\91&hOZ+G`;D5QX&'
$17cp':Z\F_#D.L,l\U9.,u]W,9I*W!!3[_S[kElT`6)5%#Pq^)$1Qe"7?-j$;P$@A,Kj:&r?V3!!3<O
0=rt91&hOZ+H/SD5QX&'$17cp':Z\J_"tkH,l\U=.,QES,9I*W!!3[_S\:]lT`6)5%#u4^)$1Qe"7?-j
$;P$DA,'R6&rcn3!!3<O0>B791&hOZ+HSkD5QX&'$17cp':Z\N_"PSD,l\UA.,--O,9I*W!!3[_S\^ul
T`6)5%$DL^)$1Qe"7?-j$;P$HA+X:2&s313!!3<O0>fO91&hOZ+G<#D5QX&'$17cp':Z\C^]5V],S_&J
.-Du[,9I*W!!3[_S[G-j*rcY')<Me<()$f<!!3L&@CBYI@hKE.!7(WH"Xbt41&j!.#lc$'5ib034>I62
!!3h']stlW_#G\['o=@!-itV8"mu?l%t^@_T`(P`*rcY+)<)M8()$f<!!3L&@CftHA,d0u!6Y?D"Xbt8
1&E^*#lc$+5i=m/4>I62!!3h']tD/W_#G\['oaX!-itV8"mu?l%t^@cT_Y8\*rcY/);Z54()$f<!!3L&
@D67HA,d1$!65'@"Xbt<1&!F&#lc$/5hnU+4>I62!!3h']thGW_#G\['p0p!-itV8"mu?l%t^@gT_4uX
*rcY3);5r0()$f<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."#lc$#5j1H74>I62!!3h'^$NPo_#hEf_<er;
,Q]5+'nn(!-itV8"mu?l%t^A=TE(_HTECm]U7ptIruV1KL)K+k!YuFOmJm:q:1<L!!+b,$!b5_Lm:-3-
&e]lucN""M-SOg@i\U`n1GL]S1&j!.#lc$'5ib034>I62!!3h'^$i`<_8OCn`oY8Da2Q!5nA,%=s!7UZ
M(%C4![AcjmJm;!Jt;A'"eMKjXfehgYQV),VP'XRT`(P`*rcY+)<)M8()$f<!!3L&@II\0A8ZRBLPY&H
"+kc5Ab'@/A,d0u!6Y?D"Xbtl0a0@#=`]+FjadPU=@"c"oJ-4trs8WIN'Q;d!^&4EmJm;%S%\=,"iA9o
]",<2\-0CS^W44a_"tkH,l\U=.,QES,9I*W!!3[_Sa`9UT<,,rWi5!X"feW)Y+VK_T_Y8\*rcY/);Z54
()$f<!!3L&@IRb1B768DVQ8dW"K%uaH"cq^pga=:N<%!!!X0r)n1b)*B!KD!bN-kNbK$en3&C@bpG)[R
rudCggctp'1(!@K!Y_':n\>:Da1Jpmi4/s"]>VP^_"PSD,l\UA.,--O,9I*W!!3[_Sai?UT<P>qWSjcY
WMuqmqk3VTruV1KOr;sk!YuFOmJm:q:1<X%"+d5EWSjWUWMY5Wr+#A/rt:Fo_Z0`A-SOsD!d2H)hT>o>
D)D2Go.g7Nruct[kWf231(!@K!Y_':o"Y=@`P1-<!k>k\n%\oK![JKqKdc+4![AcjmJm;!Jt;J*!hQ?m
go:IUXf.r_T`6)5%#,Y^)$1Qe"7?-j$;P%#@fg+_TA6:FWLe5$@fg-Q&qp>3!!3<O0Cgh!/lfX?ao]4P
1\*:#1&hOZ+G`;D5QX&'$17cp':Z]+^]V?i]"6\-!k?:eo>(@@s!7UZM(%C4![AcjmJm;!Jt;G)!N`6S
WWB*(o:Z&TruV1KMAbCk!YuFOmJm:q:1<[&!KX26V?3`OAbBR2A,d0u!6Y?D"Xbtn0`mHYbM:5Ab^q\F
1&E^*#lc$+5i=m/4>I62!!3h'^%9#A^V[h!gURBq_nl)_qS<+VrtUMAh^AON*sM'4!Y9mRo:Q2XU9:KM
WWK0$U\LMXT`6)5%#u4^)$1Qe"7?-j$;P%$@fg+RQ.i):WK_,mA,'R6&rcn3!!3<O0Cpn#0KZ5SgWBTA
TKE!)pG)[RrudCggctp'1(!@K!Y_':o"Y@F^q%&3\HB@W_nl8dp;$\RrtUYEgF*+J*sM'4!Y9mRnt6#Y
X4jQUX0&+jrLihVruV1KOr;sk!YuFOmJm:q:1<a(!b#o:g84tMQtp11A+X:2&s313!!3<O0Cpn$/jQhe
bM:5AbH*o,1%R."#lc$#5j1H74>I62!!3h'^%9#B^Vdt!]%jgt\AcAT^]5V],S_&J.-Du[,9I*W!!3[_
Sb&KVT:iBegSt=UXJPEZruV1KL)K+k!YuFOmJm:q:1<a("(Gr-W8"0NVikZ^@fg-Q&qp>3!!3<O0Cpn$
0K>iLbM:5Ac'gW_1&j!.#lc$'5ib034>I62!!3h'^%/rA^W*gq\D=[s\AuGW_#D.L,l\U9.,u]W,9I*W
!!3[_SarEVT<,&mX50cWWNW#fT`(P`*rcY+)<)M8()$f<!!3L&@Idn2@YptZVqn3NWIshQr+#a>M#b^!
!X0r)nhC8$KZ;3Yh9#fCG;JqIq_A*Vrud7ci'7?+1(!@K!Y_':n\>:H^:Chdi4/s"\A,uU_"tkH,l\U=
.,QES,9I*W!!3[_SarETSYiOFWWT6"Y,:rdq4Ra/rsXo*hAHA1'*IY&!X_\2nm_`1ELYd]"0&8fDtmi;
A,d1$!65'@"Xbto0a04&Zc^J7hoZ#EYXeLDpG)[RrudCggctp'1(!@K!Y_':nA#1H^::_`i48s&a8*OE
_#G\['p0p!-itV8"mu?l%t^ABTEUmdXJr5!iMlsXXK22joq;=+rsY&.g)0r-'*IY&!X_\2nRD`3I\*L8
WSs]UW1J;3A+X:2&s313!!3<O0C^b#04q]8b0&\d!m.rYr%[dtrs8WIKL"`d!^&4EmJm;%S%\:+"3&0i
]ApI)]=Pu#mD&]I![JKqKdc+4![AcjmJm;!Jt;A'"/i?'XQ-8^WiE>&m@aJ#rsXW"jr"49'*IY&!X_\2
mpcHCOJ/B.V?<TgNca]!!b2iUK`KF!!X0r)mkFoCR_-Gs`<3ujR8E?,s"XNZrud+_j?Nc/1(!@K!Y_':
n%](@_oBa:j2V5>_8#KTrkSOZrtUA=j!XsR*sM'4!Y9mRn"9fUTW"lljK/NaV4jOOT`(P`*rcY+)<)M8
()$f<!!3L&@II\.?taG'j*_#TE+WSMA,Kj:&r?V3!!3<O0CLUu/N?7*B&mV->Y$b,o.g+srs8WIN'Q;d
!^&4EmJm;%S%\7*!PcG/^B)-do>(4<s!7UZN@<[4![AcjmJm;!Jt;>&!M>tBT)kLVoUu#QruV1KNZ$[k
!YuFOmJm:q:1<R#!FfKr?ia_Fojdc,rt::k`rH/E-SOmB!&3=_!A?/#1&!F&#lc$/5hnU+4>I62!!3h'
]thGW_#G\['p0p!-itV8"mu?l%t^@gT_4uX*rcY3);5r0()$f<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."
#lc$#5j1H74>I62!!3h']sYWU,Q]5+'nn(!-itV8"mu?l%t^@[T`6)5%#,Y^)$1Qe"7?-j$;P$<@fg-Q
&qp>3!!3<O0=N\91&hOZ+G`;D5QX&'$17cp':Z\F_#D.L,l\U9.,u]W,9I*W!!3[_S[kElT`6)5%#Pq^
)$1Qe"7?-j$;P$@A,Kj:&r?V3!!3<O0=rt91&hOZ+H/SD5QX&'$17cp':Z\J_"tkH,l\U=.,QES,9I*W
!!3[_S\:]lT`6)5%#u4^)$1Qe"7?-j$;P$DA,'R6&rcn3!!3<O0>B791&hOZ+HSkD5QX&'$17cp':Z\N
_"PSD,l\UA.,--O,9I*W!!3[_S\^ulT`6)5%$DL^)$1Qe"7?-j$;P$HA+X:2&s313!!3<O0>fO91&hOZ
+G<#D5QX&'$17cp':Z\C^]5V],S_&J.-Du[,9I*W!!3[_S[G-j*rcY')<Me<()$f<!!3L&@CBYI@hKE.
!7(WH"Xbt41&j!.#lc$'5ib034>I62!!3h']stlW_#G\['o=@!-itV8"mu?l%t^@_T`(P`*rcY+)<)M8
()$f<!!3L&@CftHA,d0u!6Y?D"Xbt81&E^*#lc$+5i=m/4>I62!!3h']tD/W_#G\['oaX!-itV8"mu?l
%t^@cT_Y8\*rcY/);Z54()$f<!!3L&@D67HA,d1$!65'@"Xbt<1&!F&#lc$/5hnU+4>I62!!3h']thGW
_#G\['p0p!-itV8"mu?l%t^@gT_4uX*rcY3);5r0()$f<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."#lc$#
5j1H74>I62!!3h']sYWU,Q]5+'nn(!-itV8"mu?l%t^@[T`6)5%#,Y^)$1Qe"7?-j$;P$<@fg-Q&qp>3
!!3<O0=N\91&hOZ+G`;D5QX&'$17cp':Z\F_#D.L,l\U9.,u]W,9I*W!!3[_S[kElT`6)5%#Pq^)$1Qe
"7?-j$;P$@A,Kj:&r?V3!!3<O0=rt91&hOZ+H/SD5QX&'$17cp':Z\J_"tkH,l\U=.,QES,9I*W!!3[_
S\:]lT`6)5%#u4^)$1Qe"7?-j$;P$DA,'R6&rcn3!!3<O0>B791&hOZ+HSkD5QX&'$17cp':Z\N_"PSD
,l\UA.,--O,9I*W!!3[_S\^ulT`6)5%$DL^)$1Qe"7?-j$;P$HA+X:2&s313!!3<O0>fO91&hOZ+G<#D
5QX&'$17cp':Z\C^]5V],S_&J.-Du[,9I*W!!3[_S[G-j*rcY')<Me<()$f<!!3L&@CBYI@hKE.!7(WH
"Xbt41&j!.#lc$'5ib034>I62!!3h']stlW_#G\['o=@!-itV8"mu?l%t^@_T`(P`*rcY+)<)M8()$f<
!!3L&@CftHA,d0u!6Y?D"Xbt81&E^*#lc$+5i=m/4>I62!!3h']tD/W_#G\['oaX!-itV8"mu?l%t^@c
T_Y8\*rcY/);Z54()$f<!!3L&@D67HA,d1$!65'@"Xbt<1&!F&#lc$/5hnU+4>I62!!3h']thGW_#G\[
'p0p!-itV8"mu?l%t^@gT_4uX*rcY3);5r0()$f<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."#lc$#5j1H7
4>I62!!3h']sYWU,Q]5+'nn(!-itV8"mu?l%t^@[T`6)5%#,Y^)$1Qe"7?-j$;P$<@fg-Q&qp>3!!3<O
0=N\91&hOZ+G`;D5QX&'$17cp':Z\F_#D.L,l\U9.,u]W,9I*W!!3[_S[kElT`6)5%#Pq^)$1Qe"7?-j
$;P$@A,Kj:&r?V3!!3<O0=rt91&hOZ+H/SD5QX&'$17cp':Z\J_"tkH,l\U=.,QES,9I*W!!3[_S\:]l
T`6)5%#u4^)$1Qe"7?-j$;P$DA,'R6&rcn3!!3<O0>B791&hOZ+HSkD5QX&'$17cp':Z\N_"PSD,l\UA
.,--O,9I*W!!3[_S\^ulT`6)5%$DL^)$1Qe"7?-j$;P$HA+X:2&s313!!3<O0>fO91&hOZ+G<#D5QX&'
$17cp':Z\C^]5V],S_&J.-Du[,9I*W!!3[_S[G-j*rcY')<Me<()$f<!!3L&@CBYI@hKE.!7(WH"Xbt4
1&j!.#lc$'5ib034>I62!!3h']stlW_#G\['o=@!-itV8"mu?l%t^@_T`(P`*rcY+)<)M8()$f<!!3L&
@CftHA,d0u!6Y?D"Xbt81&E^*#lc$+5i=m/4>I62!!3h']tD/W_#G\['oaX!-itV8"mu?l%t^@cT_Y8\
*rcY/);Z54()$f<!!3L&@D67HA,d1$!65'@"Xbt<1&!F&#lc$/5hnU+4>I62!!3h']thGW_#G\['p0p!
-itV8"mu?l%t^@gT_4uX*rcY3);5r0()$f<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."#lc$#5j1H74>I62
!!3h']sYWU,Q]5+'nn(!-itV8"mu?l%t^@[T`6)5%#,Y^)$1Qe"7?-j$;P$<@fg-Q&qp>3!!3<O0=N\9
1&hOZ+G`;D5QX&'$17cp':Z\F_#D.L,l\U9.,u]W,9I*W!!3[_S[kElT`6)5%#Pq^)$1Qe"7?-j$;P$@
A,Kj:&r?V3!!3<O0=rt91&hOZ+H/SD5QX&'#jqZo':Z\J_"thL,U=-@.ZPq7-itV8"RZ6k%t^@cT_Y5`
*Zb[s(loQk)$1Qe"RZ6k$;P$DA,'R6&rcn3!!3<O0>B790a%af+<Wn25hnU+4>R92!!3h']thGW_#G\[
'Tjfu-itV:"RZ6k%t^@gT_4uX*rc\4);5r0((pc<!!3L&@DZOHA,d1(!5ed<"Xbt@1%R."#Ql(f4?nQc
kWf220*^hE!Y_':[D2bf"=+Wo,q4Ttk9pBS*!Pa1!Y9mR[@d[E*XW5i(Pisk)$1Qe!q$$i$;P$<@fg-Q
&qp>3!!3<O0=NY@0eiq>(DetoMEp5f!]__6mJm;%S%Z>IrkJ[_,S(D1-]9D5-itP0"RZ6k%t^@_T`(Me
*ZbUo'c;lIiY_e0&-D8"!X_\2\mtYJrt:.gb5_SI-SN(dq_86[#SIb(5E8"e5QWql"RZ6k':Z\J_"thM
,U<a**@?gqh^AOL('<n(!Y9mR]qG1o"We]i#8.i7);Z54&J#!3!!3L&@D67HA,d1$!65'@"Xbt<1&!F$
#Qc;85Ee@g5Qa55(^'1+!Y_':^qfZZ"sbGs";`@5PUP<8"",E-!U]ph%t^@gT_4r^*Zb@a%2ThG);?#2
(_d5WmJm:q:1;"LoOIn6OT<9!!X0r)__La;rs/`/!Za9bLHt)h"$S^P!U]ph':Z\C^]5V`,QIfW+sr*o
kU6NX,m=>;!!3[_S[G*p*Zb=_$PaJ7)<Vk>(_m/SmJm:q:1:S@!b2iUK`KF!!X0r)[kS.C0aJ$b!"^_E
Ma6Di"$\jq"ml9k':Z\F_#D+R,U<?i$5t7M.-2iZ.3TQ2m/R1uJt9HFrLa?9*WQ0D%ht!@j;A%9'Ft94
!!3L&@CftHA,d0u!6Y?D"Xbt81&E[1#RCD1"<fikO?hej"$\aY!UTjg':Z\J_"thO,U<?i!u*"-OXT0:
"!f-#!UTjg%t^@cT_Y5b*Zb:]!Xog+);c;5'F+[+!!3L&@D67HA,d1$!65'@"Xbt<1&!F&#lXf*%kB]*
5i4g/5<'nlli7)#S%ZVQp;$\RrW!!,)((UshC&IT+rCFK!!3[_S\^ulT`6)4!!3<6&saEk)$:Ze$j,bq
!X_\2_IN4Jrt:Fo_Z0`A-SN@lo.g7NrW!$%))XR65jU`<5<LV-lMpu"S%[^p!5\WNs2!R-!$hOirW!$%
&0E9W.-i8`.3TZ:lMptsJt:elqP)i>ruV.>!s/`A'oNsp)$:Zk'E[S#!X_\2hdcLlhdZ^t&e]lucN""M
-SMq`s"XNZr;Zp'*]H3A5j:N:5<Lk9!UB^e':Z\o^^%`m^:_%g]>"9\j1tZ0s!7OC!s9/X-BBS=-j1tC
,74J;!!3[_S`-4KU8"3JR@0V:T:_k=T`(P`*rQ'@!XobWO;[4!";_gf"Tdoh!X_\2iF<4(@V'.bBOtab
@q+P0r+#a>M#b^!!X0r)h_G!`j"^Ecrs8N&"9ou*4?o&qk<K285<1M6!pTae':Z\p^^\/lUjHZS>%E/X
]>28!l+m/2s!7LB"9T;\,q5*-jsU?]-QsQ@kl:bqJt:no%AK;ECfjV8>A]+aT;&(FT_Y8\*rH!@!t5bU
(R>s#)$Lfn'GC]Pl2Ukm:1<-l%:X!rU;"^i^S#jaA7B$6A,'R6&rcn3!!3<O0B"Vm1GL*d$4@In1,:ZN
1&!F&#l=T*"W9!U5!PK$jZj#75<UtZ&-D(r!Y_':j1kf7W,=F)r<``@2K,Y3^qoHSp;$\RqZ$g&&02uB
.4Lc8j<t0\-RBlT$g7Ql%t^A4TF[cT?Tg"g,pO]f5%0DBTVCnJoq;=+qZ$g&#n[gf(DiV[iu&%;(`!_t
"p*rg!X_\2j'rU/F19ZLdaHUme'kUBA7K*<A+X:2&s313!!3<O0B+\f1)L&h!!<6>1,JARo.g7Nq>^[#
%O<be4c_hu56X562DZBZk5YPsS%[mu"2gX!&GZY9%SiV1_;i<2,QK+c!!WcG+!N!Y.+Td".HDlI-O)"J
+sJ*B"6TXc%t^A5TEV$?8LYu8r@/"#-7V`ASYG/;ruV":#6>#;%hfZp(=j>V(ZcM((^:]k(D%/d"6TXc
$;P$j@fp1icdV^<"OkYFARa_1!b2iUK`KF!!X0r)j=p]k0a%.M!X(86j>$Zhrs8B""p5G^0fM!Hf/<Xl
6et-269FBhn2:J-3&WB2$3B8h!Y_':jhLu9Va:pf$3Nnu^qo3LrkSOZp](O#$5F[-+WhfY+TWi<h(&LT
,O$B@+U0#4+X7sA#NYpe%t^A5TEC!@-Rnj@"XtcnL7b4(T`(P`*r#^?!=')I'G:offF\-!*8MV9)\_KK
mh#a8%hfNg$j>Yl!X_\2j^SF&Fj\XdpX0/iG%>(HA,Kj:&r?V3!!3<O0BFni0JNY%!!39X1[-Xk1&hOP
!!EK9(E+CK+T``hOklH,Ma6VPm3)WT)&3Va!TX4^':Z\t^]VEf=;(96":SeM_85KRqS<+Vo`,*t#nIU_
fbOW&7rmF7!HKaY(@2e>'+bQ[!oj7^%t^A7TELm[;_'<k.Kq7K>*bnWm@a9JruUh5"9Sc5$Otbt!Xh&$
h/!+#-ghE/$j7"G#Qt7i!!3L&@H:o"a4&N1dK@7!@Ueb8pga=:`rH,B)VlM9(@D1C!!3<O0B=hf$M+5u
&i8o0pG)[Ra8c8BB<9q!!j=ZgnGpQ/!Y_':k.h&<N["'%"!s2I_=586_#G\$!!31.T\ZXMTeuuD!6"p>
%t^A7TED!31ar#H"=?*RStbbJoq;=+a8c8B>b'WJ!h_@Qo)Q]/!X_\2k$nI#Ok0-P"4W-;@e+%$A,d1_
!!34D^tm9;`'X_#!5ed<"Xbtb0`Wcp!!"YA1%R."#fluI%tM(D\H99E&*3f>!!3h'^#m*3`EX,J$3FtS
_WAQ5,QK+2!!3XQV;8-QWDa8g!7:cJ%t^A7TEClj.Ok!>""%BEU?/'J*ln<_%X"K$V?3Sk%Hd`<!!3L&
@HM&%@_gLBo?m]NAn'n4!b2iUa8c8RN5aVq!m+m`kQ&p/!X0r)jtQll%e0N"(Gb,-s"XNZa8c8eQFP_\
!I,LH!6tQG':Z\u^]VEb3t:`f!_fl8keR25s!5Yc![3E"go:Bm([;"F!!3[_S`cXJT:A4so-shh99>n4
T`(P`*ln<_+GHZIV?(HJlN#-/!X_\2k$nC&rmUJe!mkjpl=9a%rt<BQ![a\ah9#f?K,a.Wb5_SI-SOR9
!!2Ti!<b4D1&E^*#fluH6(luC!L+ks!6P9C':Z\u^]VKS/IV+V!][<um(iJ5s!5Yc!BcS#WW@kumJt?/
!Y9mRk+Dd74XfnO""$?nU@"WLT`6(S!!,0CgSP")+R]<O!!3L&@HV,'@WBlFe+1ofEanHHpga=:a8c62
YM@8%aJ(*P!65'@"Xbtd0``s_n,NIi1[[!l1&hO$!!31/WnY&cX#1%N!6,!?':Z\u^]VQN.gtnT!]-mo
nA+b5s!5\d!WcDogSt=G0a%"I`;frMJt;(t!htE1ngX_g4H-$)T_4uX*m"B`!EPWCV?32?"7uT3!!3L&
@HV,'@<g;Me+:uheT,-iA+X:2'$1+T!GT."ao]19"n_l5!!3<O0BY%j0JW"r!&O1#o.g7NaT)AKHEu;9
!k2#8joEg0!Y_':kJ.29ZSDs[$3EJr_WAQ5,QK+3!!3IGUt_mNW(IH\!7:cJ%t^A8TECgL4t6(Q""$Ku
U?/'J*m"B`$#Q?iV?3Pa$g7T;!!3L&@HM&%CXge]o$RPW@ch/%@hKEr!!3O__qW<8aB&i8!7(WH"Xbtb
1%5/D!]&mms"XNZaT)A^OLX#T!H8h>!6tQG':Z\s^]?t:nd5G$[DM.CrkSOZaT)A\KW3\*!G3&3!6kKF
%t^A6TE7k;.J,(l-<$8*l(J!JruT8^!Z?Qcg84m]'^PhD!!3L&@HCu#c-t/5dK7L)@d7J$A,d1`!!444
aP4i=aEe`k!6Y?D"Xbtb0`V@H!!*E_l7r/jrs6^H!B6S&\H.X3mJtB0!Y_':k.h&=E>\9S!tp$r_<eu6
_#G\%!!+m<fr>('*Ua!M!!3[_S`ZRIVd_5,odU(m/8C`Mm@a9JruT8^!ATSeV?))cn,UN0!X_\2k$nO"
Z..7Op!NrmTk.^$A,'R6'$1+S4fmA[!m$cSnGpT0!X0r)jtQli)Y!e.,;S[ApG)[RaT)?CW7e]_VCho@
!6,!?':Z\t^]VNR2@]<d!t.>m_=,25_#G\%!!,obfr>+@.KT/A`;frMJt;"r!f95modU%j7uO#/T_4uX
*m"B_:6sS1!gG,7o`2o1!X_\2k$nO'FOJXep<j#kdW=nfoOIn6aT)?J\(Sn*[P@pX!5ed<"Xbtc0`j$a
!V69l!]':#o.g7NaoDJIENn-,!jtK'k5`p1!Y_':jhLu=G9I@f$3ME%^qo*I!$hOiaoDJHBVO1[!iA3f
kQ'!1!Y9mRje)^RB/:t1.Kh+SCn@B^T`6(U!!3=9T%TtBU-8hH!71]I$;P$k@g$)7e^Dq@dKA$kA7FY1
!b2iUaoDJJI)+FX!l[e=l2]-1!X0r)jY6ch+7fI4-0-f\1&hO%!!3pn\Ce=m@M.o+c2[nZS%[q!"Mqoc
+:S&Q":Q>i]Y`gHrkSOZaoDJWJ#M#"!Ep$#!6kKF%t^A6TEUs[>r!oZq^Mau-o#/#U?A3JT`6(U!!3j^
UtDOF=:ad!bQ%\O:1<0m"hW=5daQ\DdKS+Ke?WXpk[XO#rt<HS!Z79GfZF52'(,bC!!3<O0B4be'_MG+
)<WaO1&hO%!!+^@f=:p2)Xd[K!!3h'^#Zs4_S:+C'b1*K"V)5"GeClW_"tkH,g$)f.ZN&[!H]1J!6G3B
%t^A5TEUs\@lu7jr[J+$.4RGlR%il=q4Ra/aoDGkMV"^+E>\3Ga8c8K:1<-l%Bn72e'c[ne'capWb>l-
A,'R6'$:1T18`^H!m$6>nc6]1!X0r)i\:EPpAb4:1@$[h1&hO%!!,ikf=:sR.09&@`W-&RS%[jt%Dg&P
?T9)G)BLkIS\r;1_"PSD,g$)f8!hi-!fnZ/o`2r2!Y9mRj.HjRU4?<21bLF=6<Ji5U@"WHT`6(U!!,QR
f;8V.,m!]>_uKiG:1<-l"(?_qdf%Yue%gB@@d[auA,d1a!!-*,fZF<;X"FGI!5ed<"Xbt^0`j$=!W<!#
!>$q?mP4;frs6dJ!X!2?f=:sf56g<OdJs=^S%[dr$HC,gQ%t-[Yf=]!i4o=<!$o_f!Wuo)f;\nI3X+aJ
d/X4YJt:kn$DODZG]7VJP,G%Ki1U)kb5_SG@%>iG!hVFUl2]02!X_\2iF<4'?Z([cQA96_@:J2*!b2iU
b5_SHFhZJM!l%20lN#62!X0r)hD#0d-n$`&0]4\c1&hO&!!3^a[b&%k\60@/!6tQG':Z\m^]hZra2c3;
i5#?-s!5bf!Y9OQf;\nO;@W!nbl@eUJt:bk"JholUnQb?rLj03b5_SRFe[Kb!i8^&mJtH2!X_\2hdZh!
?sd8K@cCnqA,d1b!!3do`n/?7a^GbL!6Y?D"Xbt\0`Wp+0`Wuh1&E^*#g32K-(*5n!Ho:K!6P9C':Z\J
_"tkH,g-/g,)b!O!GiM@!6G3B%t^@cT_Y8\*m4Na+c"UF!GN;>!6>-A$;P$DA,'R6'$C7U-DoA:!m#j/
o)Qf2!X0r)^G5I;rs6dJ!CNU3\H.p?oDll2!Y_':^qfZZs!5bf!Bue!WW@kuo`2r2!Y9mR_4^IoruT>`
!BlRqV?)>mp&N#2!X_\2_IN4Jrt<KT!D9QHao]YY./*_Z!!3<O0>fO91&hO'!!311X4=`^XZ$CI!7CiK
':Z\C^]5V[,g65i!Eu&EWWJeJ"6om6!!3[_S[G-j*m=Tc!Ebf@V?35A"7#s6!!3L&@CBYI@hKEu!!34<
]@G%*]0->a!7(WH"Xbt41&j!.#g<8M$[f;2\H96;%.+&?!!3h']stlW_#G\(!!3LJV:DRIW(RNd!6kKF
%t^@_T`(P`*m=Tc$?)WgV?3Pb$h")>!!3L&@CftHA,d1c!!3Rc`7<!3aB&i?!6Y?D"Xbt81&E^*#g<8M
*Kdk]\H-O^nGp]3!Y_':]YOBZs!5eg!ZQime>`O['Cl.F!!3[_S\:]lT`6(W!!4*kV:;@C@MA>5a8c8K
:1:kHpga=:bQ%\dT#oO*!m#R&oDlo3!X0r)^G5I;rs6gK!BQh$\H.X2o`2u3!Y_':^qfZZs!5eg!B-(h
WW@Vjp&N&3!Y9mR_4^IoruTAa!AohcV?))bpAi,3!X_\2_IN4Jrt<NU!C3d:ao]YP,5;/U!!3<O0>fO9
1&hO(!!31(W7/9YV_8,:!7CiK':Z\C^]5V[,g?;j!E,E9WWJS>!p]j6!!3[_S[G-j*mFZd!Do-3V?3#5
!pfp6!!3L&@CBYI@hKF!!!310\C8S%[P\0S!7(WH"Xbt41&j!.#gE>N#BR0!\H901$17f=!!3h']stlW
_#G\)!!3@>UXQ4EVF(XX!6kKF%t^@_T`(P`*mFZd#&'XXV?3JX#k.i<!!3L&@CftHA,d1d!!3FT_:-O.
`D-d1!6Y?D"Xbt81&E^*#gE>N(QGoP\H-7Snc6f4!Y_':]YOBZs!5hh!Yp9bd]*=R&b?"E!!3[_S\:]l
T`6(X!!3maUsc+@=qL<+a8c8K:1:kHpga=:bl@e_R`Nq"!H/\F!65'@"Xbt<1&!F&#gE>M0V$P$!J)6a
!6,!?':Z\N_"PSD,g?;i/<A2Y!I#FU!6"p>%t^@gT_4uX*mFZc.uVfP!H]4S!5nj=$;P$HA+X:2'$UCW
26,*I!m$<Bq#J;4!X0r)__La;rs6jL!E#`A\H8ES!UBa6!!3h']sYWU,QK+7!!,][dAd83-NWQ6d/X4Y
Jt9<BruTDb!D&L'V?2i+!UTm6!!3L&@CBYI@hKF!!!-0/dE2No0ELSAcN""M-SMq`s"XNZc2[nLE3Ra#
!jY0!mf:W5!Y_':\A8*Zs!5ki!X351dAd8D4pUQWbl@eUJt9HFrLj03c2[nKA=h2G!h_[]nGpc5!X_\2
\mtYJrt<TW!X3ncdE2O.8dY%gb5_SI-SN(dq_A*Vc2[nZLptdB!k;VMo)Qo5!Y_':]YOBZs!5ki!YTpZ
dAd8I=:b$(aT)AQJt9TJq4Ra/c2[nXHDAlb!i8p.o`3&5!X_\2^16qJrt<TW!Yq!AdE2O2BG1"=`rH/E
-SN4hpG)[Rc2[nsS%6nU!IYm\!6,!?':Z\N_"PSD,gHAk.?:FTW<%&Wp]/85!Y9mR_4^IoruTGc![ru(
dA[2GE#ABN_uKiG:1;"LoOIn6c2[l!WmJliab_&7!5ed<"Xbt@1%R."#i5RO!<Giid('4fRjde-qZ,%E
!Y_':[D2bf!$pD$nGrYZQdD`6X,\Iq!W2rF!!3[_S[G-j*o6ne!<GQOc_^`$,k1p6!71]I$;P$<@fg-Q
'&EWY!<H**d)lF3W\*`ArW(7E!X0r)[k[n;rs7Ta!s9)S,4d/a-7=2KcbKUk="Ehh!?rB^$j4iV!Y_':
\A8*Zs!6S(!s9&L*:k?V+X1cuc`7,@8gj0R!#ktT$N\TS!Y9mR\Y/noruU/"!WrZ<n.Gb*O3a6rP!'NM
&d&^U"p3-O!X_\2\mtYJrt=;k!W`B/nd,C($"9LQXTG7X$hFZ-#mgk>!RLfJ"Xbt81&E^*#iksh!=LPd
K9u/!!hHa9cbon%X.JsR#+V3JIT@]ud/X4]S%ZJMqS<+Vj8]>a#UiA`J+8*kR&80,!0-W&rdk8tBh'3K
d/X4YJt9TJq4Ra/j8]>a"r8gU9Cbm\;Ij[kDZXc^;>*ib:]sES/JJ<7!!3L&@D67HA,d2&!!NB*$Pjd0
ngFPh4@d^g!Cep>./YIr,TIR-!mpuL"Xbt<1&!F&#iksg$q-5g]s,9K^BM<a\qW$IdJs=^S%ZVQp;$\R
j8];j2gCd^n=7[opmh2N"eD3PDCc"?!!3[_S\^ulT`6(o!!<EM8RLppb@(-SpL+/16lH0U!!3L&@DZOH
A,d2&!!367,-``m/HR"'!n%&M"Xbt@1%R."#iu$h"?Vsa_5G'N^V,RS!!:UL!Y_':[D2bf!$pY+"9UE*
StW'T!hZ$*!?qTo!!3[_S[G-j*p!A)"!(-G@AdT9@UT=*'EZ_`!X_\2[UTAK&ea:+"9K&[/hj1X!&+L,
+:A5!!!3<O0=N\91&hO@!!='Y]>:A["Mhd`>n>Ba!Y_'<\A8*Zs!6\+!u,(0Tr4OeTV.pG9b#PO!Y9mR
\Y/noruU8%!t74u@Am]8@fp1J0*p#,!X_\2\mtYJrt=Dn!sT_t0W?f*0`s*](Bi1e!X0r*].s1;rs7]d
!Aot<_#(nK]nd]X!!3e'^V%AY_#G\A!!+WrWM'*\!hF9Idf9FZJtK`Jq4@U-jT#?#94=l2q-sJ771RcH
!XVS-^16qJrt=Dn!Y$A,X>0K)!\GT$df9FP-8*%fpG)[RjT#<KUTD9*^]V?B,luKq!Y9XD^mXnaruC,#
!B,\7T_>#\S:Ma_e,TOYA:;:Eomm&[jT#?+;dlk>oj\)4:DEo[!!*Bk_+aJprsn,j!YHk6YVGc)""bl.
!Rq)N"Wo#--M&Sa#NYpd6DC3i!Pb3,,luKq!<X1G*rlKF#3>gc2M@ft!1X+F*Waaj!<X"B)#jd$!!4?C
@A@<7@8%@9e,TLM%^clM&H`-s!!3`\/u13)0eF^Z!Rh#K#IXp<#laqe!!4d5^SS^K^qdX7)i"FO!!4Qj
T;J:\TE:[#(5MtJ!!4!/@]*`7@fg((%Z(2B!!3QR0W6`(0`ipJ#DrN;!!=!Q[)&cXr4iEL[8mcq!8IPV
&m(EnX.]?_".toN%#b2@!!<Ti?"'gEqI9V:>V$,>!87DT"W]3LXYKW+"#)5@"-*B7!!E<YN4Qj/_"kbK
_7"e6!KR65!!E<QFIAi,T_P/_TpTO3!K[<5!!E<?6XF3+A+sI9@9Yu-!KdB4!!<ZQ/MOIbp+Z\(.inor
OoY"Pj8]>h3esfH^8o'R]sang.g:M)irB5g0lDr?Su\OfSs5+H,QIt"!9*t^"!9s5>[OO@"(,A:4olB"
KE0s2"T],W-nI$P0`j!\.KUXu!JLO2!!E?H=*]h,PQ?\b!`'R5K`Ks0"9KN6A9Fr#!-A<P6kKKT!8IPV
&hH7>X%iaf4"1Vn!8@JU#SnL/X=+3",TRU(LB,s,!t#\Y)6XkZ(`3hhL&fj+"9A`=',7YarY#;B"G[!.
!!<B4$k9HMr<r]5"Gd'.!!!,)#5eZ+"TjM\JcLB&JcLB&JcLB&JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP<@JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&nGn.@JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP<@JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&nGn.@JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP<@JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&nGn.@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP<@JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&nGn.@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP<@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPHDJ,~>

%%EndBinary
grestore
np
gsave
593.817 286.33 mo
505.502 286.33 li
505.502 278.018 li
593.817 278.018 li
593.817 286.33 li
clp
505.502 278.018 mo
593.817 278.018 li
593.817 286.33 li
505.502 286.33 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 1.32416 429.032 ]ct
[90 0 0 9.33333 503.352 142.347 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 135 
/H 14 
/M[135 0 0 -14 0 14 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLl4
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN"TJ,~>

%%EndBinary
grestore
np
1 dict begin
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf505.046 286.018 mo(R)shfalse sop
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf522.422 286.018 mo(e)shfalse sop
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf533.047 286.018 mo(c)shfalse sop
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf543.671 286.018 mo(e)shfalse sop
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf554.296 286.018 mo(i)shfalse sop
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf560.92 286.018 mo(v)shfalse sop
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf572.92 286.018 mo(e)shfalse sop
.74902 .678431 .654902 .901961 cmyk
CIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf583.545 286.018 mo(r)shend
grestore
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: IAAAAA+TimesNewRomanPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CIYEJL+TimesNewRomanPS-BoldMT gcheck setglobal} if
1 3528 8 <0002005cfff303de03c30031003c024a4015061010390420103932403c44
348b3593079b35033eb8ffc040614b35b639017e07a62dac3cb72dc62dd8
21d72dd835e62d09350745074a134a1749355817660895009b35a501b601
b6080c330701803e99049a2d9c3104003e503e6316603e72179615af01a5
3abf01e03e0a0816503e743b03480802151215023bb8ffc040c41739ef3b
013233080908072b2c282b2c252b2c293c33ab33bb330304333d334d337d
338d339f33ad33bd33ce33dd33ed330b703301333b140821086508750804
02083b084c087a0889089f08a608c808d908090b081b0870080314120803
180d261f2b2b2c2929662f3b48023297005d2f2f021840292b340f181f18
5f186f189f18af18bf1807df18ec18fc18031818400e103418021f07020b
0f2c1f2c2f2c3f2c042c4429430f251f250225ea00002f093f097f09bf09
0420097f0902000910090209b801bb4010403e803e02403e603e023ea815
01151bb8ffc0402850283fff1b011b2b0037103702373205402325346f05
f0050230054005500560050405193d385518b80131852b4e10f45d712b4d
ed71f4712bc15d105d71f45d5d723c10fd5df6e45d003f3f12392b2f5d71
2b103c10f4ed10ed10fdf4e410ed1117395d717212395d71721139390111
12393910c908103c0e3c3c005d2b0172b10602435458b40c181d1802005d
59313043794032383a1c230a1003040f251d2621250b2639260e1e111e00
0c20091e0122233a03371e00101c0d1e010a220d1e0138043b1e00002b2b
2b012b103c2b2b2b2b2b2b2b818181810172715d0072715d01712b00712b
2b2b25062322263534362535342626232207061514171615140623222635
343636333216171615111416163332371706062322262711060706151417
1633320249ab88506ab80135174028412a1a1c26493b3f5572cc6e859b17
0e0a140d1a1b1e326b44505a0a793b2721192d328a97694f6bab8e5e6a37
291d1218151f2b2831454c3348834671422a97fe9540211025184a434b95
0139475136372e231b00>CIYEJL+TimesNewRomanPS-BoldMT AddT42Char 
CIYEJL+TimesNewRomanPS-BoldMT /CharStrings get begin
/a 8 def
end
CIYEJL+TimesNewRomanPS-BoldMT /Encoding get
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CIYEJL+TimesNewRomanPS-BoldMT*1 [65{/.notdef}rp /A 3{/.notdef}rp /E 7{/.notdef}rp /M /N /O 2{/.notdef}rp /R /S 13{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s 2{/.notdef}rp /v 137{/.notdef}rp]CIYEJL+TimesNewRomanPS-BoldMT nfCIYEJL+TimesNewRomanPS-BoldMT*1 [24 0 0 -24 0 0 ]msf403.674 371.352 mo(a)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/CIYEJL+TimesNewRomanPS-BoldMT*1 uf/CIYEJL+TimesNewRomanPS-BoldMT uf/IAAAAA+TimesNewRomanPS-BoldMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
